{"ast":null,"code":"import { measureText } from '@syncfusion/ej2-svg-base';\nimport { rotateTextSize } from '../../common/utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { valueToCoefficients } from './chart3dRender';\n/**\n * The WallRenderer class provides methods to update the 3D wall of the chart.\n */\nvar WallRenderer = /** @class */function () {\n  function WallRenderer() {}\n  /**\n   * Updates the 3D wall of the chart based on the chart area type.\n   *\n   * @param {Chart3D} chart - The Chart3D instance to update the 3D wall for.\n   * @returns {void}\n   */\n  WallRenderer.prototype.update3DWall = function (chart) {\n    this.updateBackWall(chart);\n    for (var i = 0; i < chart.axisCollections.length; i++) {\n      var axis = chart.axisCollections[i];\n      var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n      if (axis.orientation.toLowerCase() === 'vertical') {\n        if (!opposedPosition) {\n          this.updateLeftWall(chart);\n        } else {\n          this.updateRightWall(chart);\n        }\n      } else {\n        if (!opposedPosition) {\n          this.updateBottomWall(chart);\n        } else {\n          this.updateTopWall(chart);\n        }\n      }\n    }\n  };\n  /**\n   * Updates the top wall of the 3D chart based on the specified chart and axis.\n   *\n   * @param {Chart3D} chart - The Chart3D instance for which the top wall is updated.\n   * @returns {void}\n   */\n  WallRenderer.prototype.updateTopWall = function (chart) {\n    var offset = 0;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var y = areaBounds.y;\n    if (chart.wallSize < y) {\n      offset = y - chart.wallSize;\n    } else {\n      offset = -(chart.wallSize - y);\n    }\n    var topLeftFrontVector = chart.vector.vector3D(areaBounds.x + areaBounds.width, -chart.depth, y - 0.1);\n    var bottomRightBackVector = chart.vector.vector3D(areaBounds.x, -0.1, offset);\n    var topSideWallPlans = chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'top-wall-brush', chart.chart3D);\n    for (var i = 0; i < topSideWallPlans.length; i++) {\n      chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), topSideWallPlans[i]);\n    }\n  };\n  /**\n   * Updates the right wall of the 3D chart based on the specified chart and axis.\n   *\n   * @param {Chart3D} chart - The Chart3D instance for which the right wall is updated.\n   * @returns {void}\n   */\n  WallRenderer.prototype.updateRightWall = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var x = areaBounds.x + areaBounds.width;\n    var rightRect = {\n      left: -chart.depth,\n      top: areaBounds.y,\n      bottom: areaBounds.height + areaBounds.y,\n      right: 0\n    };\n    var topLeftFrontVector = chart.vector.vector3D(rightRect.left, rightRect.top, x + 1.5);\n    var bottomRightBackVector = chart.vector.vector3D(rightRect.right, rightRect.bottom, x + chart.wallSize);\n    var rightSideWallPlans = chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'right-wall-brush', chart.chart3D);\n    for (var i = 0; i < rightSideWallPlans.length; i++) {\n      chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), rightSideWallPlans[i]);\n    }\n  };\n  /**\n   * Updates the back wall of the 3D chart based on the specified chart.\n   *\n   * @param {Chart3D} chart - The Chart3D instance for which the back wall is updated.\n   * @returns {void}\n   */\n  WallRenderer.prototype.updateBackWall = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var topLeftFrontVector = chart.vector.vector3D(areaBounds.x, areaBounds.y, chart.depth === 0 ? 1.5 : chart.depth + chart.wallSize);\n    var bottomRightBackVector = chart.vector.vector3D(areaBounds.x + areaBounds.width, areaBounds.y + areaBounds.height, chart.depth === 0 ? 1.5 : chart.depth);\n    chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.backWallColor, chart.wallColor || chart.themeStyle.backWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.25, false, 'back-wall-brush', chart.chart3D);\n  };\n  /**\n   * Updates the left wall of the 3D chart based on the specified chart.\n   *\n   * @param {Chart3D} chart - The Chart3D instance for which the left wall is updated.\n   * @returns {void}\n   */\n  WallRenderer.prototype.updateLeftWall = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var leftRect = {\n      left: -chart.depth,\n      top: areaBounds.y,\n      bottom: areaBounds.height + areaBounds.y,\n      right: 0\n    };\n    var offset = areaBounds.x;\n    var topLeftFrontVector = chart.vector.vector3D(leftRect.left, leftRect.top, offset - 0.1);\n    var bottomRightBackVector = chart.vector.vector3D(leftRect.right, leftRect.bottom, offset - chart.wallSize);\n    var leftSideWallPlans = chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'left-wall-brush', chart.chart3D);\n    for (var i = 0; i < leftSideWallPlans.length; i++) {\n      chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), leftSideWallPlans[i]);\n    }\n  };\n  /**\n   * Updates the bottom wall of the 3D chart based on the specified chart.\n   *\n   * @param {Chart3D} chart - The Chart3D instance for which the bottom wall is updated.\n   * @returns {void}\n   */\n  WallRenderer.prototype.updateBottomWall = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var y = areaBounds.y + areaBounds.height;\n    var topLeftFrontVector = chart.vector.vector3D(areaBounds.x + areaBounds.width, -chart.depth, chart.wallSize + y);\n    var bottomRightBackVector = chart.vector.vector3D(areaBounds.x, -0.1, y + 1);\n    var bottomSideWallPlans = chart.polygon.createBox(bottomRightBackVector, topLeftFrontVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'bottom-wall-brush', chart.chart3D);\n    for (var i = 0; i < bottomSideWallPlans.length; i++) {\n      chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), bottomSideWallPlans[i]);\n    }\n  };\n  return WallRenderer;\n}();\nexport { WallRenderer };\n/**\n * 3D chart axis render/\n */\nvar AxisRenderer = /** @class */function () {\n  function AxisRenderer() {}\n  /**\n   * Draws the 3D axes at the specified index for the given axis and chart.\n   *\n   * @param {number} index - The index of the axis.\n   * @param {Chart3DAxis} axis - The Chart3DAxis instance to draw.\n   * @param {Chart3D} chart - The Chart3D instance for which the axes are drawn.\n   * @returns {void}\n   */\n  AxisRenderer.prototype.drawAxes = function (index, axis, chart) {\n    if (axis.majorGridLines.width) {\n      this.drawGridLines3D(axis, chart, index);\n    }\n    if (axis.visible && axis.internalVisibility && axis.majorTickLines.width) {\n      this.renderTicks3D(axis, axis.majorTickLines.height, axis.majorTickLines.width, chart, index);\n    }\n    if (axis.visible && axis.internalVisibility) {\n      this.drawAxisLabel(axis, chart, index);\n      this.drawAxisTitle(axis, chart, index);\n    }\n  };\n  /**\n   * Draws the title for the specified 3D axis on the given chart.\n   *\n   * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the title is drawn.\n   * @param {Chart3D} chart - The Chart3D instance on which the title is drawn.\n   * @param {number} index - The index of the axis.\n   * @returns {void}\n   */\n  AxisRenderer.prototype.drawAxisTitle = function (axis, chart, index) {\n    if (axis.title) {\n      var font = {\n        size: axis.titleStyle.size || chart.themeStyle.axisTitleFont.size,\n        fontWeight: axis.titleStyle.fontWeight || chart.themeStyle.axisTitleFont.fontWeight,\n        fontStyle: axis.titleStyle.fontStyle || chart.themeStyle.axisTitleFont.fontStyle,\n        fontFamily: axis.titleStyle.fontFamily || chart.themeStyle.axisTitleFont.fontFamily,\n        color: axis.titleStyle.color,\n        opacity: axis.titleStyle.opacity\n      };\n      var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n      var size = {\n        width: chart.availableSize.width,\n        height: chart.availableSize.height\n      };\n      var transform = chart.transform3D.transform3D(size);\n      transform.viewingArea = size;\n      transform.rotation = 0;\n      transform.tilt = 0;\n      transform.depth = 100;\n      transform.perspectiveAngle = 90;\n      chart.transform3D.transform(transform);\n      var orientation_1 = axis.orientation.toLowerCase();\n      var elementSpacing = 10;\n      if (orientation_1 === 'horizontal') {\n        var padding = 0;\n        var titlesize = measureText(axis.title, axis.titleStyle, chart.themeStyle.axisTitleFont).height / 2;\n        if (axis.titleRotation) {\n          padding = axis.titlePadding + elementSpacing + axis.labelPadding + axis.titleSize.height / 2;\n        } else {\n          padding = axis.titlePadding + titlesize + axis.labelPadding + elementSpacing;\n        }\n        var xtitleLocation = axis.maxLabelSize.height + padding;\n        var data = {\n          text: axis.title,\n          location: {\n            x: axis.rect.width / 2,\n            y: xtitleLocation + axis.majorTickLines.height + chart.wallSize\n          }\n        };\n        var x1 = data.location.x + axis.rect.x;\n        var y1 = opposedPosition ? axis.rect.y - data.location.y : data.location.y + axis.rect.y;\n        var element = {\n          width: 0,\n          height: 0,\n          angle: axis.titleRotation ? axis.titleRotation : 0,\n          label: data,\n          textAnchor: 'middle',\n          tag: 'text',\n          font: font,\n          id: chart.element.id + '-svg-axis-title-' + index,\n          child: chart.chart3D\n        };\n        element.font.color = element.font.color ? element.font.color : chart.themeStyle.axisTitle;\n        element.font.fontFamily = element.font.fontFamily ? element.font.fontFamily : chart.themeStyle.axisTitleFont.fontFamily;\n        chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(x1, y1, 0), element, 10, 10), chart);\n      } else {\n        var titleSize = measureText(axis.title, axis.titleStyle, chart.themeStyle.axisTitleFont);\n        var padding = 0;\n        if (axis.titleRotation) {\n          padding = axis.labelPadding + axis.titlePadding + axis.titleSize.width / 2;\n        } else {\n          padding = axis.titlePadding + axis.labelPadding;\n        }\n        var x1 = opposedPosition ? axis.rect.x + (elementSpacing + axis.maxLabelSize.width + axis.majorTickLines.height + chart.wallSize + padding) : axis.rect.x - (elementSpacing + axis.maxLabelSize.width + axis.majorTickLines.height + chart.wallSize + padding);\n        var angle = (axis.titleRotation == null ? opposedPosition ? 90 : -90 : axis.titleRotation) % 360;\n        var data = {\n          text: axis.title,\n          location: {\n            x: titleSize.width / 2,\n            y: 0\n          }\n        };\n        var y1 = data.location.y + (axis.rect.y + axis.rect.height) + axis.rect.height / 2 * -1;\n        var element = {\n          width: titleSize.width,\n          height: titleSize.height,\n          angle: angle,\n          label: data,\n          textAnchor: 'middle',\n          tag: 'text',\n          font: font,\n          id: chart.element.id + '-svg-axis-title-' + index,\n          child: chart.chart3D\n        };\n        element.font.color = element.font.color ? element.font.color : chart.themeStyle.axisTitle;\n        element.font.fontFamily = element.font.fontFamily ? element.font.fontFamily : chart.themeStyle.axisTitleFont.fontFamily;\n        chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(x1, y1, 0), element, 10, 10), chart);\n      }\n    }\n  };\n  /**\n   * Trims the specified text to fit within the maximum width, applying the provided labelStyle and font settings.\n   *\n   * @param {number} maxWidth - The maximum width to fit the text within.\n   * @param {string} text - The text to be trimmed.\n   * @param {Chart3DTextFontModel} labelStyle - The label style settings to be applied.\n   * @param {Chart3DTextFontModel} font - The font settings to be applied.\n   * @returns {string} - The trimmed text.\n   */\n  AxisRenderer.prototype.textTrim = function (maxWidth, text, labelStyle, font) {\n    var textLength = text.length;\n    var trimmedSize;\n    var label;\n    var textSize = measureText(text, labelStyle, font);\n    if (textSize.width > maxWidth) {\n      for (var k = textLength - 1; k >= 0; --k) {\n        label = text.substring(0, k) + '...';\n        trimmedSize = measureText(label, labelStyle, font);\n        if (trimmedSize.width <= maxWidth) {\n          return label;\n        }\n      }\n      return '';\n    } else {\n      return text;\n    }\n  };\n  /**\n   * Distributes labels into multiple rows based on the specified length, currentX, currentLabel, axis, and font settings.\n   *\n   * @param {number} length - The length of the labels.\n   * @param {number} currentX - The current X-coordinate.\n   * @param {Visible3DLabels} currentLabel - The current label settings.\n   * @param {Chart3DAxis} axis - The Chart3DAxis instance.\n   * @param {Chart3DTextFontModel} font - The font settings to be applied.\n   * @returns {void}\n   */\n  AxisRenderer.prototype.multipleRows = function (length, currentX, currentLabel, axis, font) {\n    var label;\n    var pointX;\n    var labelSize;\n    var store = [];\n    var isMultiRows;\n    for (var i = length - 1; i >= 0; i--) {\n      label = axis.visibleLabels[i];\n      labelSize = measureText(label.text, axis.labelStyle, font);\n      pointX = valueToCoefficients(i, axis) * axis.rect.width + axis.rect.x;\n      isMultiRows = currentX < pointX + labelSize.width / 2;\n      if (isMultiRows) {\n        label.index = label.index ? label.index : 0;\n        store.push(label.index);\n        currentLabel.index = currentLabel.index > label.index ? currentLabel.index : label.index + 1;\n      } else {\n        currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\n      }\n    }\n  };\n  /**\n   * Draws the labels for the specified 3D axis on the given chart.\n   *\n   * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the labels are drawn.\n   * @param {Chart3D} chart - The Chart3D instance on which the labels are drawn.\n   * @param {number} index - The index of the axis.\n   * @returns {void}\n   */\n  AxisRenderer.prototype.drawAxisLabel = function (axis, chart, index) {\n    var labels = [];\n    var angleValue;\n    var labelsCount = axis.visibleLabels.length;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n    var elementSpacing = axis.angle ? 5 : 10;\n    var y = areaBounds.y + (!opposedPosition && areaBounds.height);\n    var x = areaBounds.x + (opposedPosition && areaBounds.width);\n    for (var i = 0; i < labelsCount; i++) {\n      if (!isNullOrUndefined(axis.visibleLabels[i].text)) {\n        var x1 = 0;\n        var y1 = 0;\n        var pointX = void 0;\n        axis.visibleLabels[i].originalText = axis.visibleLabels[i].text;\n        var textAnchor = void 0;\n        var textSize = measureText(axis.visibleLabels[i].text, axis.labelStyle, chart.themeStyle.axisLabelFont);\n        var value = (axis.visibleLabels[i].value - axis.visibleRange.min) / axis.visibleRange.delta;\n        value = axis.isInversed || axis.isAxisInverse ? 1 - value : value;\n        value = isNaN(value) ? 0 : value;\n        if (axis.orientation.toLowerCase() === 'horizontal') {\n          x1 = Math.round(axis.rect.width * value) + areaBounds.x + axis.plotOffset;\n          y1 = opposedPosition ? y - chart.wallSize - axis.majorTickLines.height - axis.labelPadding - elementSpacing / 2 : y + chart.wallSize + axis.majorTickLines.height + elementSpacing + axis.labelPadding;\n          textAnchor = 'middle';\n        } else {\n          y1 = Math.round(axis.plotOffset + axis.rect.y + textSize.height / 4 + axis.rect.height * (1 - value));\n          var padding = 0;\n          if (axis.labelRotation === 90 || axis.labelRotation === -90 || axis.labelRotation === 270 || axis.labelRotation === -270) {\n            padding = elementSpacing * 2;\n          } else {\n            padding = elementSpacing;\n          }\n          x1 = opposedPosition ? axis.rect.x + axis.majorTickLines.height + padding + axis.labelPadding : x - chart.wallSize - axis.majorTickLines.height - padding + axis.labelPadding;\n          textAnchor = opposedPosition ? axis.isRTLEnabled ? 'end' : 'start' : axis.isRTLEnabled ? 'start' : 'end';\n        }\n        labels.push({\n          x: x1,\n          y: y1,\n          size: textSize\n        });\n        var maxWidth = axis.rect.width / axis.visibleLabels.length - 5;\n        var label = labels[i];\n        if ((label.x > axis.rect.x && i === 0 || label.x + label.size.width / 2 > axis.rect.x + axis.rect.width && i === axis.visibleLabels.length - 1) && axis.labelIntersectAction !== 'Trim' && axis.labelIntersectAction.indexOf('wrap') < 0) {\n          if (axis.edgeLabelPlacement === 'Hide') {\n            continue;\n          } else if (axis.edgeLabelPlacement === 'Shift') {\n            if (i === 0) {\n              label.x = x1 = axis.rect.x + label.size.width / 2;\n            } else if (i === axis.visibleLabels.length - 1) {\n              label.x = x1 = axis.rect.x + axis.rect.width - label.size.width / 2;\n            }\n          }\n        }\n        if (axis.orientation.toLowerCase() === 'horizontal') {\n          if (axis.labelRotation) {\n            angleValue = axis.labelRotation;\n            var rotatedSize = rotateTextSize(axis.labelStyle, axis.visibleLabels[i].text, angleValue, chart, chart.themeStyle.axisLabelFont);\n            y1 += rotatedSize.height / 2;\n          } else {\n            if (axis.labelIntersectAction === 'Trim') {\n              axis.visibleLabels[i].text = this.textTrim(maxWidth, axis.visibleLabels[i].text, axis.labelStyle, chart.themeStyle.axisLabelFont);\n            } else if (axis.angle && (axis.labelIntersectAction === 'Rotate45' || axis.labelIntersectAction === 'Rotate90')) {\n              var rotatedSize = rotateTextSize(axis.labelStyle, axis.visibleLabels[i].text, axis.angle, chart, chart.themeStyle.axisLabelFont);\n              y1 += rotatedSize.height / 2;\n            } else if (axis.labelIntersectAction === 'MultipleRows') {\n              pointX = label.x;\n              pointX -= textSize.width / 2;\n              this.multipleRows(i, pointX, axis.visibleLabels[i], axis, chart.themeStyle.axisLabelFont);\n              y1 = axis.visibleLabels[i].index ? y1 + axis.visibleLabels[i].index * (textSize.height + 5) : y1;\n            } else if (axis.labelIntersectAction === 'Hide') {\n              var isAxisLabelHidden = false;\n              for (var j = 0; j < i; j++) {\n                if (labels[j].x + labels[j].size.width / 2 >= labels[i].x - labels[i].size.width / 2) {\n                  isAxisLabelHidden = true;\n                  break;\n                }\n              }\n              if (isAxisLabelHidden) {\n                continue;\n              }\n            }\n          }\n        }\n        var font = {\n          size: axis.visibleLabels[i].labelStyle.size,\n          fontWeight: axis.visibleLabels[i].labelStyle.fontWeight,\n          fontStyle: axis.visibleLabels[i].labelStyle.fontStyle,\n          fontFamily: axis.visibleLabels[i].labelStyle.fontFamily,\n          color: axis.visibleLabels[i].labelStyle.color,\n          opacity: axis.visibleLabels[i].labelStyle.opacity\n        };\n        var element = {\n          width: textSize.width,\n          height: textSize.height,\n          label: axis.visibleLabels[i],\n          textAnchor: textAnchor,\n          tag: 'text',\n          font: font,\n          id: chart.element.id + '-' + index + '-axis-label-' + i,\n          child: chart.chart3D,\n          angle: axis.angle\n        };\n        element.font.color = element.font.color ? element.font.color : chart.themeStyle.axisLabel;\n        element.font.fontFamily = element.font.fontFamily ? element.font.fontFamily : chart.themeStyle.axisLabelFont.fontFamily;\n        chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(x1, y1, 0), element, 10, 10), chart);\n      }\n    }\n  };\n  /**\n   * Renders the 3D ticks for the specified axis with the given size, width, and on the provided chart.\n   *\n   * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the ticks are rendered.\n   * @param {number} size - The size of the ticks.\n   * @param {number} width - The width of the ticks.\n   * @param {Chart3D} chart - The Chart3D instance on which the ticks are rendered.\n   * @param {number} index - The index of the axis.\n   * @returns {void}\n   */\n  AxisRenderer.prototype.renderTicks3D = function (axis, size, width, chart, index) {\n    var labelsCount = axis.visibleLabels.length;\n    var minorTicks;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    labelsCount += axis.valueType === 'Category' && labelsCount > 0 && axis.labelPlacement === 'BetweenTicks' ? 1 : 0;\n    var labelValue;\n    for (var i = 0; i < labelsCount; i++) {\n      if (axis.valueType !== 'DateTimeCategory') {\n        labelValue = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel;\n      } else {\n        labelValue = axis.visibleLabels[i].value ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n      }\n      var x1 = 0;\n      var x2 = 0;\n      var y1 = 0;\n      var y2 = 0;\n      var value = (labelValue - axis.visibleRange.min) / axis.visibleRange.delta;\n      value = axis.isInversed || axis.isAxisInverse ? 1 - value : value;\n      value = isNaN(value) ? 0 : value;\n      if (axis.orientation.toLowerCase() === 'horizontal') {\n        x2 = x1 = Math.round(axis.rect.width * value) + areaBounds.x + axis.plotOffset;\n      } else {\n        y1 = y2 = Math.round(axis.plotOffset + axis.rect.height * (1 - value)) + axis.rect.y;\n      }\n      var position = this.calculatePosition3D(axis, size, width, x1, y1, x2, y2, chart);\n      var line = {\n        width: axis.majorTickLines.width,\n        opacity: 1,\n        stroke: axis.majorTickLines.color || chart.themeStyle.majorTickLine,\n        child: chart.chart3D,\n        tag: 'line',\n        id: ''\n      };\n      line.id = chart.element.id + '-' + index + '-major-tick-lines-' + i;\n      chart.graphics.addVisual(chart.polygon.createLine(line, position.x1, position.y1, position.x2, position.y2, 0), chart);\n      if (axis.minorGridLines.width && axis.minorTicksPerInterval > 0 && i < labelsCount - 1) {\n        minorTicks = axis.visibleRange.interval / (axis.minorTicksPerInterval + 1);\n        for (var k = 0; k < axis.minorTicksPerInterval; k++) {\n          value = valueToCoefficients(axis.visibleLabels[i].value + minorTicks * (k + 1), axis);\n          value = isNaN(value) ? 0 : value;\n          if (axis.orientation.toLowerCase() === 'horizontal') {\n            x1 = x2 = Math.round(axis.plotOffset + areaBounds.width * value + areaBounds.x);\n          } else {\n            y1 = y2 = Math.round(axis.plotOffset + areaBounds.height * (1 - value)) + axis.rect.y;\n          }\n          var position_1 = this.calculatePosition3D(axis, size, width, x1, y1, x2, y2, chart);\n          var line_1 = {\n            width: axis.minorTickLines.width,\n            opacity: 0.6,\n            stroke: axis.minorTickLines.color || chart.themeStyle.minorTickLine,\n            child: chart.chart3D,\n            tag: 'line',\n            id: ''\n          };\n          line_1.id = chart.element.id + '-' + index + '-minor-tick-lines-' + i + '-' + k;\n          chart.graphics.addVisual(chart.polygon.createLine(line_1, position_1.x1, position_1.y1, position_1.x2, position_1.y2, 0), chart);\n        }\n      }\n    }\n  };\n  /**\n   * Calculates the 3D position for ticks on the specified axis with the given tickSize, width, and chart dimensions.\n   *\n   * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the tick position is calculated.\n   * @param {number} tickSize - The size of the ticks.\n   * @param {number} width - The width of the ticks.\n   * @param {number} x1 - The X-coordinate of the starting point.\n   * @param {number} y1 - The Y-coordinate of the starting point.\n   * @param {number} x2 - The X-coordinate of the ending point.\n   * @param {number} y2 - The Y-coordinate of the ending point.\n   * @param {Chart3D} chart - The Chart3D instance.\n   * @returns {Chart3DTickPosition} - The calculated 3D tick position.\n   */\n  AxisRenderer.prototype.calculatePosition3D = function (axis, tickSize, width, x1, y1, x2, y2, chart) {\n    var isOpposed = axis.opposedPosition || axis.isAxisOpposedPosition;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var y = areaBounds.y + (!isOpposed && areaBounds.height);\n    var x = areaBounds.x + (isOpposed && areaBounds.width);\n    if (axis.orientation.toLowerCase() === 'horizontal') {\n      y1 = 0;\n      y2 = isOpposed ? tickSize : y1 + tickSize;\n      var screenPositionTop = isOpposed ? y - chart.wallSize - tickSize : y + chart.wallSize - tickSize / 2;\n      y1 += screenPositionTop;\n      y2 += screenPositionTop;\n      x1 = x2 = x1;\n    } else {\n      x1 = 0;\n      x2 = isOpposed ? x1 + tickSize : tickSize;\n      var screenPositionLeft = isOpposed ? x + chart.wallSize : x - chart.wallSize - tickSize;\n      x1 += screenPositionLeft;\n      x2 += screenPositionLeft;\n      y1 = y2 = y1;\n    }\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2\n    };\n  };\n  /**\n   * Draws the 3D grid lines for the specified axis on the given chart.\n   *\n   * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the grid lines are drawn.\n   * @param {Chart3D} chart - The Chart3D instance on which the grid lines are drawn.\n   * @param {number} index - The index of the axis.\n   * @returns {void}\n   */\n  AxisRenderer.prototype.drawGridLines3D = function (axis, chart, index) {\n    if (axis == null) {\n      return;\n    }\n    var labelsCount = axis.visibleLabels.length;\n    var minorTicks;\n    var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n    var orientation = axis.orientation;\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var labelValue;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    labelsCount += axis.valueType === 'Category' && labelsCount > 0 && axis.labelPlacement === 'BetweenTicks' ? 1 : 0;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    if (orientation.toLowerCase() === 'horizontal') {\n      var i = void 0;\n      for (i = 0; i < labelsCount; i++) {\n        if (axis.valueType !== 'DateTimeCategory') {\n          labelValue = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel;\n        } else {\n          labelValue = axis.visibleLabels[i].value ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n        }\n        var value = valueToCoefficients(labelValue, axis);\n        value = isNaN(value) ? 0 : value;\n        x2 = x1 = Math.round(axis.rect.width * value) + areaBounds.x + axis.plotOffset;\n        y1 = areaBounds.y;\n        y2 = areaBounds.y + areaBounds.height;\n        var depth = chart.depth > 2 ? chart.depth - 2 : 1;\n        var bottom = areaBounds.y + (!opposedPosition && areaBounds.height);\n        var line = {\n          opacity: 1,\n          width: axis.majorGridLines.width,\n          stroke: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n          child: chart.chart3D,\n          tag: 'line',\n          id: ''\n        };\n        line.id = chart.element.id + '-' + index + '-grid-lines-' + i;\n        chart.graphics.addVisual(chart.polygon.createLine(line, x1, y1, x2, y2, depth), chart);\n        var parallelLine = {\n          opacity: line.opacity,\n          width: line.width,\n          stroke: line.stroke,\n          child: line.child,\n          tag: line.tag,\n          id: ''\n        };\n        parallelLine.id = line.id + '-parallel';\n        parallelLine.id = chart.element.id + '-' + index + '-parallel-grid-lines-' + i;\n        var line3D = chart.polygon.createLine(parallelLine, x2, 0, x2, -depth, bottom);\n        // To fold the gridline alone the wall(bottom)\n        chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), line3D);\n        chart.graphics.addVisual(line3D, chart);\n        if (axis.minorGridLines.width && axis.minorTicksPerInterval > 0 && i < labelsCount - 1) {\n          minorTicks = axis.visibleRange.interval / (axis.minorTicksPerInterval + 1);\n          for (var k = 0; k < axis.minorTicksPerInterval; k++) {\n            value = valueToCoefficients(axis.visibleLabels[i].value + minorTicks * (k + 1), axis);\n            value = isNaN(value) ? 0 : value;\n            x2 = x1 = Math.round(areaBounds.width * value) + areaBounds.x;\n            y1 = areaBounds.y;\n            y2 = areaBounds.y + areaBounds.height;\n            var line_2 = {\n              opacity: 0.6,\n              width: axis.minorGridLines.width,\n              stroke: axis.minorGridLines.color || chart.themeStyle.minorGridLine,\n              child: chart.chart3D,\n              tag: 'line',\n              id: ''\n            };\n            line_2.id = chart.element.id + '-' + index + '-minor-grid-lines-' + i + '-' + k;\n            chart.graphics.addVisual(chart.polygon.createLine(line_2, x1, y1, x2, y2, depth), chart);\n            var parallelLine_1 = {\n              opacity: line_2.opacity,\n              width: line_2.width,\n              stroke: line_2.stroke,\n              child: line_2.child,\n              tag: line_2.tag,\n              id: ''\n            };\n            parallelLine_1.id = chart.element.id + '-' + index + '-parallel-minor-grid-lines-' + i + '-' + k;\n            var line3D_1 = chart.polygon.createLine(parallelLine_1, x2, 0, x2, -depth, bottom);\n            // To fold the gridline alone the wall(bottom)\n            chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), line3D_1);\n            chart.graphics.addVisual(line3D_1, chart);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < labelsCount; i++) {\n        labelValue = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel;\n        var value = (labelValue - axis.visibleRange.min) / axis.visibleRange.delta;\n        x1 = areaBounds.x;\n        y1 = Math.round(axis.rect.height * (1 - value)) + 0.5;\n        y1 += axis.rect.y;\n        x2 = x1 + areaBounds.width;\n        y2 = y1;\n        var depth = chart.depth > 2 ? chart.depth - 2 : 1;\n        var line = {\n          opacity: 1,\n          width: axis.majorGridLines.width,\n          stroke: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n          axisName: axis.name,\n          child: chart.chart3D,\n          tag: 'line',\n          id: ''\n        };\n        line.id = chart.element.id + '-' + index + '-grid-lines-' + i;\n        chart.graphics.addVisual(chart.polygon.createLine(line, x1, y1, x2, y2, depth), chart);\n        var depthD = areaBounds.x + (opposedPosition && areaBounds.width + 1);\n        var sideLine = {\n          opacity: line.opacity,\n          width: line.width,\n          stroke: line.stroke,\n          child: line.child,\n          tag: line.tag,\n          id: ''\n        };\n        sideLine.id = chart.element.id + '-' + index + '-parallel-grid-lines-' + i;\n        var line3D = chart.polygon.createLine(sideLine, -depth, y2, 0, y2, depthD);\n        // To fold the gridline alone the wall(right of vertical)\n        chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), line3D);\n        chart.graphics.addVisual(line3D, chart);\n        if (axis.minorGridLines.width && axis.minorTicksPerInterval > 0 && i < labelsCount - 1) {\n          minorTicks = axis.visibleRange.interval / (axis.minorTicksPerInterval + 1);\n          for (var k = 0; k < axis.minorTicksPerInterval; k++) {\n            var value_1 = valueToCoefficients(axis.visibleLabels[i].value + minorTicks * (k + 1), axis);\n            x1 = areaBounds.x;\n            y1 = Math.round(axis.rect.height * (1 - value_1)) + 0.5;\n            y1 += axis.rect.y;\n            x2 = x1 + areaBounds.width;\n            y2 = y1;\n            var line_3 = {\n              opacity: 0.6,\n              width: axis.minorGridLines.width,\n              stroke: axis.minorGridLines.color || chart.themeStyle.minorGridLine,\n              axisName: axis.name,\n              child: chart.chart3D,\n              tag: 'line',\n              id: ''\n            };\n            line_3.id = chart.element.id + '-' + index + '-minor-grid-lines-' + i + '-' + k;\n            chart.graphics.addVisual(chart.polygon.createLine(line_3, x1, y1, x2, y2, depth), chart);\n            var sideLine_1 = {\n              opacity: line_3.opacity,\n              width: line_3.width,\n              stroke: line_3.stroke,\n              child: line_3.child,\n              tag: line_3.tag,\n              id: ''\n            };\n            sideLine_1.id = chart.element.id + '-' + index + '-parallel-minor-grid-lines-' + i + k;\n            var line3D_2 = chart.polygon.createLine(sideLine_1, -depth, y2, 0, y2, depthD);\n            // To fold the gridline alone the wall(right of vertical)\n            chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), line3D_2);\n            chart.graphics.addVisual(line3D_2, chart);\n          }\n        }\n      }\n    }\n  };\n  return AxisRenderer;\n}();\nexport { AxisRenderer };","map":{"version":3,"names":["measureText","rotateTextSize","isNullOrUndefined","valueToCoefficients","WallRenderer","prototype","update3DWall","chart","updateBackWall","i","axisCollections","length","axis","opposedPosition","isAxisOpposedPosition","orientation","toLowerCase","updateLeftWall","updateRightWall","updateBottomWall","updateTopWall","offset","areaBounds","chartAxisLayoutPanel","seriesClipRect","y","wallSize","topLeftFrontVector","vector","vector3D","x","width","depth","bottomRightBackVector","topSideWallPlans","polygon","createBox","wallColor","themeStyle","leftWallColor","theme","indexOf","chart3D","transform","matrixObj","tilt","Math","PI","rightRect","left","top","bottom","height","right","rightSideWallPlans","turn","backWallColor","leftRect","leftSideWallPlans","bottomSideWallPlans","AxisRenderer","drawAxes","index","majorGridLines","drawGridLines3D","visible","internalVisibility","majorTickLines","renderTicks3D","drawAxisLabel","drawAxisTitle","title","font","size","titleStyle","axisTitleFont","fontWeight","fontStyle","fontFamily","color","opacity","availableSize","transform3D","viewingArea","rotation","perspectiveAngle","orientation_1","elementSpacing","padding","titlesize","titleRotation","titlePadding","labelPadding","titleSize","xtitleLocation","maxLabelSize","data","text","location","rect","x1","y1","element","angle","label","textAnchor","tag","id","child","axisTitle","graphics","addVisual","createTextElement","textTrim","maxWidth","labelStyle","textLength","trimmedSize","textSize","k","substring","multipleRows","currentX","currentLabel","pointX","labelSize","store","isMultiRows","visibleLabels","push","labels","angleValue","labelsCount","originalText","axisLabelFont","value","visibleRange","min","delta","isInversed","isAxisInverse","isNaN","round","plotOffset","labelRotation","isRTLEnabled","labelIntersectAction","edgeLabelPlacement","rotatedSize","isAxisLabelHidden","j","axisLabel","minorTicks","ticksbwtLabel","valueType","labelPlacement","labelValue","interval","max","x2","y2","position","calculatePosition3D","line","stroke","majorTickLine","createLine","minorGridLines","minorTicksPerInterval","position_1","line_1","minorTickLines","minorTickLine","tickSize","isOpposed","screenPositionTop","screenPositionLeft","majorGridLine","parallelLine","line3D","line_2","minorGridLine","parallelLine_1","line3D_1","axisName","name","depthD","sideLine","value_1","line_3","sideLine_1","line3D_2"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/chart3d/utils/renderer.js"],"sourcesContent":["import { measureText } from '@syncfusion/ej2-svg-base';\nimport { rotateTextSize } from '../../common/utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { valueToCoefficients } from './chart3dRender';\n/**\n * The WallRenderer class provides methods to update the 3D wall of the chart.\n */\nvar WallRenderer = /** @class */ (function () {\n    function WallRenderer() {\n    }\n    /**\n     * Updates the 3D wall of the chart based on the chart area type.\n     *\n     * @param {Chart3D} chart - The Chart3D instance to update the 3D wall for.\n     * @returns {void}\n     */\n    WallRenderer.prototype.update3DWall = function (chart) {\n        this.updateBackWall(chart);\n        for (var i = 0; i < chart.axisCollections.length; i++) {\n            var axis = chart.axisCollections[i];\n            var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n            if (axis.orientation.toLowerCase() === 'vertical') {\n                if (!opposedPosition) {\n                    this.updateLeftWall(chart);\n                }\n                else {\n                    this.updateRightWall(chart);\n                }\n            }\n            else {\n                if (!opposedPosition) {\n                    this.updateBottomWall(chart);\n                }\n                else {\n                    this.updateTopWall(chart);\n                }\n            }\n        }\n    };\n    /**\n     * Updates the top wall of the 3D chart based on the specified chart and axis.\n     *\n     * @param {Chart3D} chart - The Chart3D instance for which the top wall is updated.\n     * @returns {void}\n     */\n    WallRenderer.prototype.updateTopWall = function (chart) {\n        var offset = 0;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var y = areaBounds.y;\n        if (chart.wallSize < y) {\n            offset = y - chart.wallSize;\n        }\n        else {\n            offset = -(chart.wallSize - y);\n        }\n        var topLeftFrontVector = chart.vector.vector3D(areaBounds.x + areaBounds.width, -chart.depth, y - 0.1);\n        var bottomRightBackVector = chart.vector.vector3D(areaBounds.x, -0.1, offset);\n        var topSideWallPlans = chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'top-wall-brush', chart.chart3D);\n        for (var i = 0; i < topSideWallPlans.length; i++) {\n            chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), topSideWallPlans[i]);\n        }\n    };\n    /**\n     * Updates the right wall of the 3D chart based on the specified chart and axis.\n     *\n     * @param {Chart3D} chart - The Chart3D instance for which the right wall is updated.\n     * @returns {void}\n     */\n    WallRenderer.prototype.updateRightWall = function (chart) {\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var x = areaBounds.x + areaBounds.width;\n        var rightRect = { left: -chart.depth, top: areaBounds.y, bottom: areaBounds.height + areaBounds.y, right: 0 };\n        var topLeftFrontVector = chart.vector.vector3D(rightRect.left, rightRect.top, x + 1.5);\n        var bottomRightBackVector = chart.vector.vector3D(rightRect.right, rightRect.bottom, x + chart.wallSize);\n        var rightSideWallPlans = chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'right-wall-brush', chart.chart3D);\n        for (var i = 0; i < rightSideWallPlans.length; i++) {\n            chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), rightSideWallPlans[i]);\n        }\n    };\n    /**\n     * Updates the back wall of the 3D chart based on the specified chart.\n     *\n     * @param {Chart3D} chart - The Chart3D instance for which the back wall is updated.\n     * @returns {void}\n     */\n    WallRenderer.prototype.updateBackWall = function (chart) {\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var topLeftFrontVector = chart.vector.vector3D(areaBounds.x, areaBounds.y, chart.depth === 0 ? 1.5 : chart.depth + chart.wallSize);\n        var bottomRightBackVector = chart.vector.vector3D((areaBounds.x + areaBounds.width), areaBounds.y + areaBounds.height, chart.depth === 0 ? 1.5 : chart.depth);\n        chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.backWallColor, chart.wallColor || chart.themeStyle.backWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.25, false, 'back-wall-brush', chart.chart3D);\n    };\n    /**\n     * Updates the left wall of the 3D chart based on the specified chart.\n     *\n     * @param {Chart3D} chart - The Chart3D instance for which the left wall is updated.\n     * @returns {void}\n     */\n    WallRenderer.prototype.updateLeftWall = function (chart) {\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var leftRect = { left: -chart.depth, top: areaBounds.y, bottom: areaBounds.height + areaBounds.y, right: 0 };\n        var offset = areaBounds.x;\n        var topLeftFrontVector = chart.vector.vector3D(leftRect.left, leftRect.top, offset - 0.1);\n        var bottomRightBackVector = chart.vector.vector3D(leftRect.right, leftRect.bottom, offset - chart.wallSize);\n        var leftSideWallPlans = chart.polygon.createBox(topLeftFrontVector, bottomRightBackVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'left-wall-brush', chart.chart3D);\n        for (var i = 0; i < leftSideWallPlans.length; i++) {\n            chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), leftSideWallPlans[i]);\n        }\n    };\n    /**\n     * Updates the bottom wall of the 3D chart based on the specified chart.\n     *\n     * @param {Chart3D} chart - The Chart3D instance for which the bottom wall is updated.\n     * @returns {void}\n     */\n    WallRenderer.prototype.updateBottomWall = function (chart) {\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var y = areaBounds.y + areaBounds.height;\n        var topLeftFrontVector = chart.vector.vector3D((areaBounds.x + areaBounds.width), -chart.depth, chart.wallSize + y);\n        var bottomRightBackVector = chart.vector.vector3D(areaBounds.x, -0.1, y + 1);\n        var bottomSideWallPlans = chart.polygon.createBox(bottomRightBackVector, topLeftFrontVector, chart, 0, chart.wallColor || chart.themeStyle.leftWallColor, chart.wallColor || chart.themeStyle.leftWallColor, 0, chart.theme.indexOf('Fluent2') > -1 ? 0.3 : chart.theme.indexOf('Bootstrap5') > -1 ? 0.1 : 0.5, false, 'bottom-wall-brush', chart.chart3D);\n        for (var i = 0; i < bottomSideWallPlans.length; i++) {\n            chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), bottomSideWallPlans[i]);\n        }\n    };\n    return WallRenderer;\n}());\nexport { WallRenderer };\n/**\n * 3D chart axis render/\n */\nvar AxisRenderer = /** @class */ (function () {\n    function AxisRenderer() {\n    }\n    /**\n     * Draws the 3D axes at the specified index for the given axis and chart.\n     *\n     * @param {number} index - The index of the axis.\n     * @param {Chart3DAxis} axis - The Chart3DAxis instance to draw.\n     * @param {Chart3D} chart - The Chart3D instance for which the axes are drawn.\n     * @returns {void}\n     */\n    AxisRenderer.prototype.drawAxes = function (index, axis, chart) {\n        if (axis.majorGridLines.width) {\n            this.drawGridLines3D(axis, chart, index);\n        }\n        if (axis.visible && axis.internalVisibility && axis.majorTickLines.width) {\n            this.renderTicks3D(axis, axis.majorTickLines.height, axis.majorTickLines.width, chart, index);\n        }\n        if (axis.visible && axis.internalVisibility) {\n            this.drawAxisLabel(axis, chart, index);\n            this.drawAxisTitle(axis, chart, index);\n        }\n    };\n    /**\n     * Draws the title for the specified 3D axis on the given chart.\n     *\n     * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the title is drawn.\n     * @param {Chart3D} chart - The Chart3D instance on which the title is drawn.\n     * @param {number} index - The index of the axis.\n     * @returns {void}\n     */\n    AxisRenderer.prototype.drawAxisTitle = function (axis, chart, index) {\n        if (axis.title) {\n            var font = {\n                size: axis.titleStyle.size || chart.themeStyle.axisTitleFont.size,\n                fontWeight: axis.titleStyle.fontWeight || chart.themeStyle.axisTitleFont.fontWeight,\n                fontStyle: axis.titleStyle.fontStyle || chart.themeStyle.axisTitleFont.fontStyle,\n                fontFamily: axis.titleStyle.fontFamily || chart.themeStyle.axisTitleFont.fontFamily,\n                color: axis.titleStyle.color,\n                opacity: axis.titleStyle.opacity\n            };\n            var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n            var size = { width: chart.availableSize.width, height: chart.availableSize.height };\n            var transform = chart.transform3D.transform3D(size);\n            transform.viewingArea = size;\n            transform.rotation = 0;\n            transform.tilt = 0;\n            transform.depth = 100;\n            transform.perspectiveAngle = 90;\n            chart.transform3D.transform(transform);\n            var orientation_1 = axis.orientation.toLowerCase();\n            var elementSpacing = 10;\n            if (orientation_1 === 'horizontal') {\n                var padding = 0;\n                var titlesize = (measureText(axis.title, axis.titleStyle, chart.themeStyle.axisTitleFont).height / 2);\n                if (axis.titleRotation) {\n                    padding = axis.titlePadding + (elementSpacing) + axis.labelPadding + (axis.titleSize.height / 2);\n                }\n                else {\n                    padding = axis.titlePadding + titlesize + axis.labelPadding + elementSpacing;\n                }\n                var xtitleLocation = axis.maxLabelSize.height + padding;\n                var data = {\n                    text: axis.title,\n                    location: {\n                        x: (axis.rect.width) / 2,\n                        y: (xtitleLocation + axis.majorTickLines.height + chart.wallSize)\n                    }\n                };\n                var x1 = data.location.x + axis.rect.x;\n                var y1 = (opposedPosition) ? (axis.rect.y - data.location.y) : (data.location.y + axis.rect.y);\n                var element = { width: 0, height: 0, angle: axis.titleRotation ? axis.titleRotation : 0, label: data, textAnchor: 'middle', tag: 'text', font: font, id: chart.element.id + '-svg-axis-title-' + index, child: chart.chart3D };\n                element.font.color = element.font.color ? element.font.color : chart.themeStyle.axisTitle;\n                element.font.fontFamily = element.font.fontFamily ? element.font.fontFamily : chart.themeStyle.axisTitleFont.fontFamily;\n                chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(x1, y1, 0), element, 10, 10), chart);\n            }\n            else {\n                var titleSize = measureText(axis.title, axis.titleStyle, chart.themeStyle.axisTitleFont);\n                var padding = 0;\n                if (axis.titleRotation) {\n                    padding = axis.labelPadding + axis.titlePadding + axis.titleSize.width / 2;\n                }\n                else {\n                    padding = axis.titlePadding + axis.labelPadding;\n                }\n                var x1 = (opposedPosition) ? axis.rect.x + ((elementSpacing) + axis.maxLabelSize.width +\n                    axis.majorTickLines.height + chart.wallSize + padding) : axis.rect.x - ((elementSpacing) +\n                    axis.maxLabelSize.width + axis.majorTickLines.height + chart.wallSize + padding);\n                var angle = (axis.titleRotation == null ? (opposedPosition ? 90 : -90) : axis.titleRotation) % 360;\n                var data = {\n                    text: axis.title,\n                    location: {\n                        x: titleSize.width / 2,\n                        y: 0\n                    }\n                };\n                var y1 = data.location.y + (axis.rect.y + axis.rect.height) + (((axis.rect.height) / 2) * -1);\n                var element = { width: titleSize.width, height: titleSize.height, angle: angle, label: data, textAnchor: 'middle', tag: 'text', font: font, id: chart.element.id + '-svg-axis-title-' + index, child: chart.chart3D };\n                element.font.color = element.font.color ? element.font.color : chart.themeStyle.axisTitle;\n                element.font.fontFamily = element.font.fontFamily ? element.font.fontFamily : chart.themeStyle.axisTitleFont.fontFamily;\n                chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(x1, y1, 0), element, 10, 10), chart);\n            }\n        }\n    };\n    /**\n     * Trims the specified text to fit within the maximum width, applying the provided labelStyle and font settings.\n     *\n     * @param {number} maxWidth - The maximum width to fit the text within.\n     * @param {string} text - The text to be trimmed.\n     * @param {Chart3DTextFontModel} labelStyle - The label style settings to be applied.\n     * @param {Chart3DTextFontModel} font - The font settings to be applied.\n     * @returns {string} - The trimmed text.\n     */\n    AxisRenderer.prototype.textTrim = function (maxWidth, text, labelStyle, font) {\n        var textLength = text.length;\n        var trimmedSize;\n        var label;\n        var textSize = measureText(text, labelStyle, font);\n        if (textSize.width > maxWidth) {\n            for (var k = textLength - 1; k >= 0; --k) {\n                label = text.substring(0, k) + '...';\n                trimmedSize = measureText(label, labelStyle, font);\n                if (trimmedSize.width <= maxWidth) {\n                    return label;\n                }\n            }\n            return '';\n        }\n        else {\n            return text;\n        }\n    };\n    /**\n     * Distributes labels into multiple rows based on the specified length, currentX, currentLabel, axis, and font settings.\n     *\n     * @param {number} length - The length of the labels.\n     * @param {number} currentX - The current X-coordinate.\n     * @param {Visible3DLabels} currentLabel - The current label settings.\n     * @param {Chart3DAxis} axis - The Chart3DAxis instance.\n     * @param {Chart3DTextFontModel} font - The font settings to be applied.\n     * @returns {void}\n     */\n    AxisRenderer.prototype.multipleRows = function (length, currentX, currentLabel, axis, font) {\n        var label;\n        var pointX;\n        var labelSize;\n        var store = [];\n        var isMultiRows;\n        for (var i = length - 1; i >= 0; i--) {\n            label = axis.visibleLabels[i];\n            labelSize = measureText(label.text, axis.labelStyle, font);\n            pointX = valueToCoefficients(i, axis) * axis.rect.width + axis.rect.x;\n            isMultiRows = currentX < (pointX + labelSize.width / 2);\n            if (isMultiRows) {\n                label.index = label.index ? label.index : 0;\n                store.push(label.index);\n                currentLabel.index = (currentLabel.index > label.index) ? currentLabel.index : label.index + 1;\n            }\n            else {\n                currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\n            }\n        }\n    };\n    /**\n     * Draws the labels for the specified 3D axis on the given chart.\n     *\n     * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the labels are drawn.\n     * @param {Chart3D} chart - The Chart3D instance on which the labels are drawn.\n     * @param {number} index - The index of the axis.\n     * @returns {void}\n     */\n    AxisRenderer.prototype.drawAxisLabel = function (axis, chart, index) {\n        var labels = [];\n        var angleValue;\n        var labelsCount = axis.visibleLabels.length;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n        var elementSpacing = axis.angle ? 5 : 10;\n        var y = areaBounds.y + (!opposedPosition && areaBounds.height);\n        var x = areaBounds.x + (opposedPosition && areaBounds.width);\n        for (var i = 0; i < labelsCount; i++) {\n            if (!isNullOrUndefined(axis.visibleLabels[i].text)) {\n                var x1 = 0;\n                var y1 = 0;\n                var pointX = void 0;\n                axis.visibleLabels[i].originalText = axis.visibleLabels[i].text;\n                var textAnchor = void 0;\n                var textSize = measureText(axis.visibleLabels[i].text, axis.labelStyle, chart.themeStyle.axisLabelFont);\n                var value = (axis.visibleLabels[i].value - axis.visibleRange.min) / axis.visibleRange.delta;\n                value = axis.isInversed || axis.isAxisInverse ? 1 - value : value;\n                value = isNaN(value) ? 0 : value;\n                if (axis.orientation.toLowerCase() === 'horizontal') {\n                    x1 = Math.round(axis.rect.width * value) + areaBounds.x + axis.plotOffset;\n                    y1 = opposedPosition ? (y - chart.wallSize - axis.majorTickLines.height - axis.labelPadding - elementSpacing / 2) :\n                        y + chart.wallSize + axis.majorTickLines.height + elementSpacing + axis.labelPadding;\n                    textAnchor = 'middle';\n                }\n                else {\n                    y1 = Math.round(axis.plotOffset + axis.rect.y + (textSize.height / 4) + (axis.rect.height * (1 - value)));\n                    var padding = 0;\n                    if (axis.labelRotation === 90 || axis.labelRotation === -90 ||\n                        axis.labelRotation === 270 || axis.labelRotation === -270) {\n                        padding = elementSpacing * 2;\n                    }\n                    else {\n                        padding = elementSpacing;\n                    }\n                    x1 = opposedPosition ? (axis.rect.x + axis.majorTickLines.height + padding + axis.labelPadding) :\n                        (x - chart.wallSize - axis.majorTickLines.height - padding + axis.labelPadding);\n                    textAnchor = opposedPosition ? (axis.isRTLEnabled ? 'end' : 'start') : (axis.isRTLEnabled ? 'start' : 'end');\n                }\n                labels.push({ x: x1, y: y1, size: textSize });\n                var maxWidth = axis.rect.width / axis.visibleLabels.length - 5;\n                var label = labels[i];\n                if (((label.x > axis.rect.x && i === 0) ||\n                    (label.x + label.size.width / 2 > axis.rect.x + axis.rect.width && i === axis.visibleLabels.length - 1)) &&\n                    axis.labelIntersectAction !== 'Trim' && axis.labelIntersectAction.indexOf('wrap') < 0) {\n                    if (axis.edgeLabelPlacement === 'Hide') {\n                        continue;\n                    }\n                    else if (axis.edgeLabelPlacement === 'Shift') {\n                        if (i === 0) {\n                            label.x = x1 = axis.rect.x + label.size.width / 2;\n                        }\n                        else if (i === axis.visibleLabels.length - 1) {\n                            label.x = x1 = axis.rect.x + axis.rect.width - label.size.width / 2;\n                        }\n                    }\n                }\n                if (axis.orientation.toLowerCase() === 'horizontal') {\n                    if (axis.labelRotation) {\n                        angleValue = axis.labelRotation;\n                        var rotatedSize = rotateTextSize(axis.labelStyle, axis.visibleLabels[i].text, angleValue, chart, chart.themeStyle.axisLabelFont);\n                        y1 += rotatedSize.height / 2;\n                    }\n                    else {\n                        if (axis.labelIntersectAction === 'Trim') {\n                            axis.visibleLabels[i].text = this.textTrim(maxWidth, axis.visibleLabels[i].text, axis.labelStyle, chart.themeStyle.axisLabelFont);\n                        }\n                        else if (axis.angle && (axis.labelIntersectAction === 'Rotate45' || axis.labelIntersectAction === 'Rotate90')) {\n                            var rotatedSize = rotateTextSize(axis.labelStyle, axis.visibleLabels[i].text, axis.angle, chart, chart.themeStyle.axisLabelFont);\n                            y1 += rotatedSize.height / 2;\n                        }\n                        else if (axis.labelIntersectAction === 'MultipleRows') {\n                            pointX = label.x;\n                            pointX -= textSize.width / 2;\n                            this.multipleRows(i, pointX, axis.visibleLabels[i], axis, chart.themeStyle.axisLabelFont);\n                            y1 = axis.visibleLabels[i].index ?\n                                y1 + axis.visibleLabels[i].index * (textSize.height + 5) : y1;\n                        }\n                        else if (axis.labelIntersectAction === 'Hide') {\n                            var isAxisLabelHidden = false;\n                            for (var j = 0; j < i; j++) {\n                                if (labels[j].x + (labels[j].size.width / 2) >=\n                                    labels[i].x - (labels[i].size.width / 2)) {\n                                    isAxisLabelHidden = true;\n                                    break;\n                                }\n                            }\n                            if (isAxisLabelHidden) {\n                                continue;\n                            }\n                        }\n                    }\n                }\n                var font = {\n                    size: axis.visibleLabels[i].labelStyle.size,\n                    fontWeight: axis.visibleLabels[i].labelStyle.fontWeight,\n                    fontStyle: axis.visibleLabels[i].labelStyle.fontStyle,\n                    fontFamily: axis.visibleLabels[i].labelStyle.fontFamily,\n                    color: axis.visibleLabels[i].labelStyle.color,\n                    opacity: axis.visibleLabels[i].labelStyle.opacity\n                };\n                var element = {\n                    width: textSize.width, height: textSize.height, label: axis.visibleLabels[i], textAnchor: textAnchor,\n                    tag: 'text', font: font, id: chart.element.id + '-' + index + '-axis-label-' + i, child: chart.chart3D, angle: axis.angle\n                };\n                element.font.color = element.font.color ? element.font.color : chart.themeStyle.axisLabel;\n                element.font.fontFamily = element.font.fontFamily ? element.font.fontFamily : chart.themeStyle.axisLabelFont.fontFamily;\n                chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(x1, y1, 0), element, 10, 10), chart);\n            }\n        }\n    };\n    /**\n     * Renders the 3D ticks for the specified axis with the given size, width, and on the provided chart.\n     *\n     * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the ticks are rendered.\n     * @param {number} size - The size of the ticks.\n     * @param {number} width - The width of the ticks.\n     * @param {Chart3D} chart - The Chart3D instance on which the ticks are rendered.\n     * @param {number} index - The index of the axis.\n     * @returns {void}\n     */\n    AxisRenderer.prototype.renderTicks3D = function (axis, size, width, chart, index) {\n        var labelsCount = axis.visibleLabels.length;\n        var minorTicks;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? 0.5 : 0;\n        labelsCount += (axis.valueType === 'Category' && labelsCount > 0 && axis.labelPlacement === 'BetweenTicks') ? 1 : 0;\n        var labelValue;\n        for (var i = 0; i < labelsCount; i++) {\n            if (axis.valueType !== 'DateTimeCategory') {\n                labelValue = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel :\n                    (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n            }\n            else {\n                labelValue = axis.visibleLabels[i].value ? axis.visibleLabels[i].value - ticksbwtLabel\n                    : axis.visibleRange.max;\n            }\n            var x1 = 0;\n            var x2 = 0;\n            var y1 = 0;\n            var y2 = 0;\n            var value = (labelValue - axis.visibleRange.min) / axis.visibleRange.delta;\n            value = axis.isInversed || axis.isAxisInverse ? 1 - value : value;\n            value = isNaN(value) ? 0 : value;\n            if (axis.orientation.toLowerCase() === 'horizontal') {\n                x2 = x1 = (Math.round(axis.rect.width * value)) + areaBounds.x + axis.plotOffset;\n            }\n            else {\n                y1 = y2 = Math.round(axis.plotOffset + (axis.rect.height * (1 - value))) + axis.rect.y;\n            }\n            var position = this.calculatePosition3D(axis, size, width, x1, y1, x2, y2, chart);\n            var line = { width: axis.majorTickLines.width, opacity: 1, stroke: axis.majorTickLines.color || chart.themeStyle.majorTickLine, child: chart.chart3D, tag: 'line', id: '' };\n            line.id = chart.element.id + '-' + index + '-major-tick-lines-' + i;\n            chart.graphics.addVisual(chart.polygon.createLine(line, position.x1, position.y1, position.x2, position.y2, 0), chart);\n            if (axis.minorGridLines.width && axis.minorTicksPerInterval > 0 && i < labelsCount - 1) {\n                minorTicks = axis.visibleRange.interval / (axis.minorTicksPerInterval + 1);\n                for (var k = 0; k < axis.minorTicksPerInterval; k++) {\n                    value = valueToCoefficients(axis.visibleLabels[i].value + (minorTicks * (k + 1)), axis);\n                    value = isNaN(value) ? 0 : value;\n                    if (axis.orientation.toLowerCase() === 'horizontal') {\n                        x1 = x2 = Math.round(axis.plotOffset + (areaBounds.width * value) + areaBounds.x);\n                    }\n                    else {\n                        y1 = y2 = Math.round(axis.plotOffset + ((areaBounds.height) * (1 - value))) + axis.rect.y;\n                    }\n                    var position_1 = this.calculatePosition3D(axis, size, width, x1, y1, x2, y2, chart);\n                    var line_1 = { width: axis.minorTickLines.width, opacity: 0.6, stroke: axis.minorTickLines.color || chart.themeStyle.minorTickLine, child: chart.chart3D, tag: 'line', id: '' };\n                    line_1.id = chart.element.id + '-' + index + '-minor-tick-lines-' + i + '-' + k;\n                    chart.graphics.addVisual(chart.polygon.createLine(line_1, position_1.x1, position_1.y1, position_1.x2, position_1.y2, 0), chart);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the 3D position for ticks on the specified axis with the given tickSize, width, and chart dimensions.\n     *\n     * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the tick position is calculated.\n     * @param {number} tickSize - The size of the ticks.\n     * @param {number} width - The width of the ticks.\n     * @param {number} x1 - The X-coordinate of the starting point.\n     * @param {number} y1 - The Y-coordinate of the starting point.\n     * @param {number} x2 - The X-coordinate of the ending point.\n     * @param {number} y2 - The Y-coordinate of the ending point.\n     * @param {Chart3D} chart - The Chart3D instance.\n     * @returns {Chart3DTickPosition} - The calculated 3D tick position.\n     */\n    AxisRenderer.prototype.calculatePosition3D = function (axis, tickSize, width, x1, y1, x2, y2, chart) {\n        var isOpposed = axis.opposedPosition || axis.isAxisOpposedPosition;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var y = areaBounds.y + (!isOpposed && areaBounds.height);\n        var x = areaBounds.x + (isOpposed && areaBounds.width);\n        if (axis.orientation.toLowerCase() === 'horizontal') {\n            y1 = 0;\n            y2 = isOpposed ? tickSize : y1 + tickSize;\n            var screenPositionTop = isOpposed ? y - chart.wallSize - tickSize : y + chart.wallSize - (tickSize / 2);\n            y1 += screenPositionTop;\n            y2 += screenPositionTop;\n            x1 = x2 = x1;\n        }\n        else {\n            x1 = 0;\n            x2 = isOpposed ? x1 + tickSize : tickSize;\n            var screenPositionLeft = isOpposed ? x + chart.wallSize : (x - chart.wallSize - tickSize);\n            x1 += screenPositionLeft;\n            x2 += screenPositionLeft;\n            y1 = y2 = y1;\n        }\n        return { x1: x1, y1: y1, x2: x2, y2: y2 };\n    };\n    /**\n     * Draws the 3D grid lines for the specified axis on the given chart.\n     *\n     * @param {Chart3DAxis} axis - The Chart3DAxis instance for which the grid lines are drawn.\n     * @param {Chart3D} chart - The Chart3D instance on which the grid lines are drawn.\n     * @param {number} index - The index of the axis.\n     * @returns {void}\n     */\n    AxisRenderer.prototype.drawGridLines3D = function (axis, chart, index) {\n        if (axis == null) {\n            return;\n        }\n        var labelsCount = axis.visibleLabels.length;\n        var minorTicks;\n        var opposedPosition = axis.opposedPosition || axis.isAxisOpposedPosition;\n        var orientation = axis.orientation;\n        var x1;\n        var x2;\n        var y1;\n        var y2;\n        var labelValue;\n        var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? 0.5 : 0;\n        labelsCount += (axis.valueType === 'Category' && labelsCount > 0 && axis.labelPlacement === 'BetweenTicks') ? 1 : 0;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        if (orientation.toLowerCase() === 'horizontal') {\n            var i = void 0;\n            for (i = 0; i < labelsCount; i++) {\n                if (axis.valueType !== 'DateTimeCategory') {\n                    labelValue = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel :\n                        (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n                }\n                else {\n                    labelValue = axis.visibleLabels[i].value ? axis.visibleLabels[i].value - ticksbwtLabel\n                        : axis.visibleRange.max;\n                }\n                var value = valueToCoefficients(labelValue, axis);\n                value = isNaN(value) ? 0 : value;\n                x2 = x1 = (Math.round(axis.rect.width * value)) + areaBounds.x + axis.plotOffset;\n                y1 = areaBounds.y;\n                y2 = areaBounds.y + areaBounds.height;\n                var depth = chart.depth > 2 ? chart.depth - 2 : 1;\n                var bottom = areaBounds.y + (!opposedPosition && areaBounds.height);\n                var line = { opacity: 1, width: axis.majorGridLines.width, stroke: axis.majorGridLines.color || chart.themeStyle.majorGridLine, child: chart.chart3D, tag: 'line', id: '' };\n                line.id = chart.element.id + '-' + index + '-grid-lines-' + i;\n                chart.graphics.addVisual(chart.polygon.createLine(line, x1, y1, x2, y2, depth), chart);\n                var parallelLine = { opacity: line.opacity, width: line.width, stroke: line.stroke, child: line.child, tag: line.tag, id: '' };\n                parallelLine.id = line.id + '-parallel';\n                parallelLine.id = chart.element.id + '-' + index + '-parallel-grid-lines-' + i;\n                var line3D = chart.polygon.createLine(parallelLine, x2, 0, x2, -depth, bottom);\n                // To fold the gridline alone the wall(bottom)\n                chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), line3D);\n                chart.graphics.addVisual(line3D, chart);\n                if (axis.minorGridLines.width && axis.minorTicksPerInterval > 0 && i < labelsCount - 1) {\n                    minorTicks = axis.visibleRange.interval / (axis.minorTicksPerInterval + 1);\n                    for (var k = 0; k < axis.minorTicksPerInterval; k++) {\n                        value = valueToCoefficients(axis.visibleLabels[i].value + (minorTicks * (k + 1)), axis);\n                        value = isNaN(value) ? 0 : value;\n                        x2 = x1 = (Math.round(areaBounds.width * value) + areaBounds.x);\n                        y1 = areaBounds.y;\n                        y2 = areaBounds.y + areaBounds.height;\n                        var line_2 = { opacity: 0.6, width: axis.minorGridLines.width, stroke: axis.minorGridLines.color || chart.themeStyle.minorGridLine, child: chart.chart3D, tag: 'line', id: '' };\n                        line_2.id = chart.element.id + '-' + index + '-minor-grid-lines-' + i + '-' + k;\n                        chart.graphics.addVisual(chart.polygon.createLine(line_2, x1, y1, x2, y2, depth), chart);\n                        var parallelLine_1 = { opacity: line_2.opacity, width: line_2.width, stroke: line_2.stroke, child: line_2.child, tag: line_2.tag, id: '' };\n                        parallelLine_1.id = chart.element.id + '-' + index + '-parallel-minor-grid-lines-' + i + '-' + k;\n                        var line3D_1 = chart.polygon.createLine(parallelLine_1, x2, 0, x2, -depth, bottom);\n                        // To fold the gridline alone the wall(bottom)\n                        chart.polygon.transform(chart.matrixObj.tilt(Math.PI / 2), line3D_1);\n                        chart.graphics.addVisual(line3D_1, chart);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < labelsCount; i++) {\n                labelValue = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel :\n                    (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n                var value = (labelValue - axis.visibleRange.min) / axis.visibleRange.delta;\n                x1 = areaBounds.x;\n                y1 = Math.round((axis.rect.height) * (1 - value)) + 0.5;\n                y1 += axis.rect.y;\n                x2 = x1 + areaBounds.width;\n                y2 = y1;\n                var depth = chart.depth > 2 ? chart.depth - 2 : 1;\n                var line = { opacity: 1, width: axis.majorGridLines.width, stroke: axis.majorGridLines.color || chart.themeStyle.majorGridLine, axisName: axis.name, child: chart.chart3D, tag: 'line', id: '' };\n                line.id = chart.element.id + '-' + index + '-grid-lines-' + i;\n                chart.graphics.addVisual(chart.polygon.createLine(line, x1, y1, x2, y2, depth), chart);\n                var depthD = areaBounds.x + (opposedPosition && areaBounds.width + 1);\n                var sideLine = { opacity: line.opacity, width: line.width, stroke: line.stroke, child: line.child, tag: line.tag, id: '' };\n                sideLine.id = chart.element.id + '-' + index + '-parallel-grid-lines-' + i;\n                var line3D = chart.polygon.createLine(sideLine, -depth, y2, 0, y2, depthD);\n                // To fold the gridline alone the wall(right of vertical)\n                chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), line3D);\n                chart.graphics.addVisual(line3D, chart);\n                if (axis.minorGridLines.width && axis.minorTicksPerInterval > 0 && i < labelsCount - 1) {\n                    minorTicks = axis.visibleRange.interval / (axis.minorTicksPerInterval + 1);\n                    for (var k = 0; k < axis.minorTicksPerInterval; k++) {\n                        var value_1 = valueToCoefficients(axis.visibleLabels[i].value + (minorTicks * (k + 1)), axis);\n                        x1 = areaBounds.x;\n                        y1 = Math.round((axis.rect.height) * (1 - value_1)) + 0.5;\n                        y1 += axis.rect.y;\n                        x2 = x1 + areaBounds.width;\n                        y2 = y1;\n                        var line_3 = { opacity: 0.6, width: axis.minorGridLines.width, stroke: axis.minorGridLines.color || chart.themeStyle.minorGridLine, axisName: axis.name, child: chart.chart3D, tag: 'line', id: '' };\n                        line_3.id = chart.element.id + '-' + index + '-minor-grid-lines-' + i + '-' + k;\n                        chart.graphics.addVisual(chart.polygon.createLine(line_3, x1, y1, x2, y2, depth), chart);\n                        var sideLine_1 = { opacity: line_3.opacity, width: line_3.width, stroke: line_3.stroke, child: line_3.child, tag: line_3.tag, id: '' };\n                        sideLine_1.id = chart.element.id + '-' + index + '-parallel-minor-grid-lines-' + i + k;\n                        var line3D_2 = chart.polygon.createLine(sideLine_1, -depth, y2, 0, y2, depthD);\n                        // To fold the gridline alone the wall(right of vertical)\n                        chart.polygon.transform(chart.matrixObj.turn(-Math.PI / 2), line3D_2);\n                        chart.graphics.addVisual(line3D_2, chart);\n                    }\n                }\n            }\n        }\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}