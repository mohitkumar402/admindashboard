{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * Chart legend\n */\nimport { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim } from '../../common/utils/helper';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { legendRender } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nvar BulletChartLegend = /** @class */function (_super) {\n  __extends(BulletChartLegend, _super);\n  function BulletChartLegend(chart) {\n    var _this = _super.call(this, chart) || this;\n    _this.library = _this;\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n   * Binding events for legend module.\n   *\n   * @returns {void}\n   */\n  BulletChartLegend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    this.chart.on(Browser.touchMoveEvent, this.bulletMouseMove, this);\n  };\n  /**\n   * UnBinding events for bullet chart legend module.\n   *\n   * @returns {void}\n   */\n  BulletChartLegend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    this.chart.off(Browser.touchMoveEvent, this.bulletMouseMove);\n  };\n  /**\n   * To handle mouse move for legend module.\n   *\n   * @param {MouseEvent} e - The mouse move event for the legend module.\n   * @returns {void}\n   */\n  BulletChartLegend.prototype.bulletMouseMove = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * To handle mouse end for legend module.\n   *\n   * @param {MouseEvent} e - The mouse end event for the legend module.\n   * @returns {void}\n   */\n  BulletChartLegend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Get the legend options.\n   *\n   * @param {Range[]} visibleRangeCollection - The collection of visible ranges.\n   * @returns {void}\n   * @private\n   */\n  BulletChartLegend.prototype.getLegendOptions = function (visibleRangeCollection) {\n    this.legendCollections = [];\n    var fill;\n    var count = 0;\n    this.isRtlEnable = this.chart.enableRtl;\n    var key = 'color';\n    var bulletChart = this.chart;\n    for (var _i = 0, visibleRangeCollection_1 = visibleRangeCollection; _i < visibleRangeCollection_1.length; _i++) {\n      var range = visibleRangeCollection_1[_i];\n      if (range.name !== null) {\n        fill = range.color ? range.color : bulletChart.themeStyle.rangeStrokes[range.index][key];\n        this.legendCollections.push(new LegendOptions(range.name, fill, range.shape, this.chart.legendSettings.visible, null, range.legendImageUrl, null, false, range.index, null));\n        count++;\n      }\n    }\n    if (bulletChart.dataSource !== null && bulletChart.valueField !== '') {\n      fill = bulletChart.theme.indexOf('Dark') > -1 ? 'white' : bulletChart.valueFill ? bulletChart.valueFill : 'black';\n      var shape = bulletChart.orientation === 'Vertical' ? 'TargetRect' : 'ActualRect';\n      this.legendCollections.push(new LegendOptions('Actual', fill, shape, this.chart.legendSettings.visible, null, '', null, false, count++, null));\n    }\n    if (bulletChart.dataSource !== null && bulletChart.targetField !== '') {\n      fill = bulletChart.theme.indexOf('Dark') > -1 ? 'white' : bulletChart.targetColor ? bulletChart.targetColor : 'black';\n      var shape = bulletChart.orientation === 'Vertical' ? 'ActualRect' : 'TargetRect';\n      for (var i = 0; i < Object.keys(bulletChart.dataSource).length; i++) {\n        if (isNullOrUndefined(bulletChart.dataSource[i][bulletChart.targetField].length) || bulletChart.dataSource[i][bulletChart.targetField].length === 1) {\n          while (i === 0) {\n            this.legendCollections.push(new LegendOptions('Target', fill, shape, this.chart.legendSettings.visible, null, '', null, false, count++, null));\n            break;\n          }\n        } else {\n          var targetTypes = bulletChart.targetTypes;\n          var targetType = [];\n          var targetTypeLength = targetTypes.length;\n          while (i === 0) {\n            for (var i_1 = 0; i_1 < targetTypeLength; i_1++) {\n              targetType[i_1] = targetTypes[i_1 % targetTypeLength];\n              targetType[i_1] = targetType[i_1] === 'Rect' ? bulletChart.orientation === 'Vertical' ? 'ActualRect' : 'TargetRect' : targetType[i_1];\n              targetType[i_1] = targetType[i_1] === 'Cross' ? 'Multiply' : targetType[i_1];\n              this.legendCollections.push(new LegendOptions('Target_' + i_1, fill, targetType[i_1], this.chart.legendSettings.visible, null, '', null, false, count++, null));\n            }\n            break;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Retrieves the legend bounds for the bullet chart.\n   *\n   * @param {Size} availableSize - The available size for rendering.\n   * @param {Rect} bulletLegendBounds - The bounds of the bullet chart legend.\n   * @param {LegendSettingsModel} legend - The legend settings for the bullet chart.\n   * @returns {void}\n   * @private\n   */\n  BulletChartLegend.prototype.getLegendBounds = function (availableSize, bulletLegendBounds, legend) {\n    var extraWidth = 0;\n    var padding = legend.padding;\n    var extraHeight = 0;\n    if (!this.isVertical) {\n      extraHeight = availableSize.height / 100 * 5;\n    } else {\n      extraWidth = availableSize.width / 100 * 5;\n    }\n    bulletLegendBounds.height += extraHeight;\n    bulletLegendBounds.width += extraWidth;\n    var maximumWidth = 0;\n    var legendRowWidth = 0;\n    var legendRowCount = 0;\n    var legendWidth = 0;\n    var columnHeight = 0;\n    var shapeWidth = legend.shapeWidth;\n    var shapePadding = legend.shapePadding;\n    var legendEventArgs;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\n    var render = false;\n    for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n      var bulletLegendOption = _a[_i];\n      legendEventArgs = {\n        fill: bulletLegendOption.fill,\n        text: bulletLegendOption.text,\n        shape: bulletLegendOption.shape,\n        name: legendRender,\n        cancel: false\n      };\n      this.chart.trigger(legendRender, legendEventArgs);\n      bulletLegendOption.render = !legendEventArgs.cancel;\n      bulletLegendOption.text = legendEventArgs.text;\n      bulletLegendOption.fill = legendEventArgs.fill;\n      bulletLegendOption.shape = legendEventArgs.shape;\n      bulletLegendOption.textSize = measureText(bulletLegendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\n      if (bulletLegendOption.render && bulletLegendOption.text !== '') {\n        render = true;\n        legendWidth = shapeWidth + shapePadding + bulletLegendOption.textSize.width + padding;\n        legendRowWidth = legendRowWidth + legendWidth;\n        if (bulletLegendBounds.width < padding + legendRowWidth || this.isVertical) {\n          maximumWidth = Math.max(maximumWidth, legendRowWidth + padding - (this.isVertical ? 0 : legendWidth));\n          if (legendRowCount === 0 && legendWidth !== legendRowWidth) {\n            legendRowCount = 1;\n          }\n          legendRowWidth = this.isVertical ? 0 : legendWidth;\n          legendRowCount++;\n          columnHeight = legendRowCount * (this.maxItemHeight + padding) + padding;\n        }\n      }\n    }\n    columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding);\n    this.isPaging = bulletLegendBounds.height < columnHeight;\n    this.totalPages = legendRowCount;\n    if (render) {\n      this.setBounds(Math.max(legendRowWidth + padding, maximumWidth), this.position === 'Bottom' || this.position === 'Top' ? Math.min(columnHeight, this.chart.initialClipRect.height - (this.legend.border.width + this.legend.margin.bottom + this.legend.margin.top)) : columnHeight, legend, bulletLegendBounds);\n    } else {\n      this.setBounds(0, 0, legend, bulletLegendBounds);\n    }\n  };\n  /**\n   * Retrieves the rendering point for the bullet chart legend.\n   *\n   * @param {LegendOptions} bulletLegendOption - The legend options for the bullet chart.\n   * @param {ChartLocation} start - The starting location for rendering.\n   * @param {number} textPadding - The padding around the text.\n   * @param {LegendOptions} prevLegend - The previous legend options.\n   * @param {Rect} rect - The rect region for the legend.\n   * @param {number} count - The count of legends.\n   * @param {number} firstLegend - The index of the first legend.\n   * @returns {void}\n   * @private\n   */\n  BulletChartLegend.prototype.getRenderPoint = function (bulletLegendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n    var textWidth = textPadding + (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : prevLegend.textSize.width);\n    var previousBound = prevLegend.location.x + (!this.isRtlEnable ? textWidth : -textWidth);\n    var padding = this.legend.padding;\n    if (previousBound + (bulletLegendOption.textSize.width + textPadding) > rect.x + rect.width + this.legend.shapeWidth / 2 || this.isVertical) {\n      bulletLegendOption.location.x = start.x;\n      bulletLegendOption.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + this.maxItemHeight + padding;\n    } else {\n      bulletLegendOption.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      bulletLegendOption.location.y = prevLegend.location.y;\n    }\n    var availwidth = !this.isRtlEnable ? this.legendBounds.x + this.legendBounds.width - (bulletLegendOption.location.x + textPadding - this.itemPadding - this.legend.shapeWidth / 2) : bulletLegendOption.location.x - textPadding + this.itemPadding + this.legend.shapeWidth / 2 - this.legendBounds.x;\n    bulletLegendOption.text = textTrim(+availwidth.toFixed(4), bulletLegendOption.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendLabelFont);\n  };\n  /**\n   * To show the tooltip for the trimmed text in legend.\n   *\n   * @param {Event | PointerEvent} event - The click event.\n   * @returns {void}\n   */\n  BulletChartLegend.prototype.click = function (event) {\n    var symbolTargetId = event.target.id;\n    if (symbolTargetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    } else if (symbolTargetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    }\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name.\n   */\n  BulletChartLegend.prototype.getModuleName = function () {\n    return 'BulletChartLegend';\n  };\n  /**\n   * To destroy the Legend.\n   *\n   * @returns {void}\n   * @private\n   */\n  BulletChartLegend.prototype.destroy = function () {\n    /**\n     * Destroy method calling here.\n     */\n    this.removeEventListener();\n  };\n  return BulletChartLegend;\n}(BaseLegend);\nexport { BulletChartLegend };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Browser","isNullOrUndefined","LegendOptions","BaseLegend","textTrim","measureText","legendRender","BulletChartLegend","_super","chart","_this","call","library","addEventListener","isDestroyed","on","click","touchEndEvent","mouseEnd","touchMoveEvent","bulletMouseMove","removeEventListener","off","e","legendSettings","visible","isTouch","move","getLegendOptions","visibleRangeCollection","legendCollections","fill","count","isRtlEnable","enableRtl","key","bulletChart","_i","visibleRangeCollection_1","length","range","name","color","themeStyle","rangeStrokes","index","push","shape","legendImageUrl","dataSource","valueField","theme","indexOf","valueFill","orientation","targetField","targetColor","i","keys","targetTypes","targetType","targetTypeLength","i_1","getLegendBounds","availableSize","bulletLegendBounds","legend","extraWidth","padding","extraHeight","isVertical","height","width","maximumWidth","legendRowWidth","legendRowCount","legendWidth","columnHeight","shapeWidth","shapePadding","legendEventArgs","maxItemHeight","Math","max","textStyle","legendLabelFont","shapeHeight","render","_a","bulletLegendOption","text","cancel","trigger","textSize","isPaging","totalPages","setBounds","position","min","initialClipRect","border","margin","bottom","top","getRenderPoint","start","textPadding","prevLegend","rect","firstLegend","textWidth","maximumLabelWidth","previousBound","location","x","y","availwidth","legendBounds","itemPadding","toFixed","event","symbolTargetId","target","id","legendID","changePage","getModuleName","destroy"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/bullet-chart/legend/legend.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Chart legend\n */\nimport { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim } from '../../common/utils/helper';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { legendRender } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nvar BulletChartLegend = /** @class */ (function (_super) {\n    __extends(BulletChartLegend, _super);\n    function BulletChartLegend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    BulletChartLegend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n        this.chart.on(Browser.touchMoveEvent, this.bulletMouseMove, this);\n    };\n    /**\n     * UnBinding events for bullet chart legend module.\n     *\n     * @returns {void}\n     */\n    BulletChartLegend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n        this.chart.off(Browser.touchMoveEvent, this.bulletMouseMove);\n    };\n    /**\n     * To handle mouse move for legend module.\n     *\n     * @param {MouseEvent} e - The mouse move event for the legend module.\n     * @returns {void}\n     */\n    BulletChartLegend.prototype.bulletMouseMove = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * To handle mouse end for legend module.\n     *\n     * @param {MouseEvent} e - The mouse end event for the legend module.\n     * @returns {void}\n     */\n    BulletChartLegend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Range[]} visibleRangeCollection - The collection of visible ranges.\n     * @returns {void}\n     * @private\n     */\n    BulletChartLegend.prototype.getLegendOptions = function (visibleRangeCollection) {\n        this.legendCollections = [];\n        var fill;\n        var count = 0;\n        this.isRtlEnable = this.chart.enableRtl;\n        var key = 'color';\n        var bulletChart = this.chart;\n        for (var _i = 0, visibleRangeCollection_1 = visibleRangeCollection; _i < visibleRangeCollection_1.length; _i++) {\n            var range = visibleRangeCollection_1[_i];\n            if (range.name !== null) {\n                fill = range.color ? range.color : bulletChart.themeStyle.rangeStrokes[range.index][key];\n                this.legendCollections.push(new LegendOptions(range.name, fill, range.shape, this.chart.legendSettings.visible, null, range.legendImageUrl, null, false, range.index, null));\n                count++;\n            }\n        }\n        if (bulletChart.dataSource !== null && bulletChart.valueField !== '') {\n            fill = (bulletChart.theme.indexOf('Dark') > -1) ? 'white' : bulletChart.valueFill ? bulletChart.valueFill : 'black';\n            var shape = bulletChart.orientation === 'Vertical' ? 'TargetRect' : 'ActualRect';\n            this.legendCollections.push(new LegendOptions('Actual', fill, shape, this.chart.legendSettings.visible, null, '', null, false, count++, null));\n        }\n        if (bulletChart.dataSource !== null && bulletChart.targetField !== '') {\n            fill = (bulletChart.theme.indexOf('Dark') > -1) ? 'white' : bulletChart.targetColor ? bulletChart.targetColor : 'black';\n            var shape = bulletChart.orientation === 'Vertical' ? 'ActualRect' : 'TargetRect';\n            for (var i = 0; i < Object.keys(bulletChart.dataSource).length; i++) {\n                if (isNullOrUndefined(bulletChart.dataSource[i][bulletChart.targetField].length)\n                    || bulletChart.dataSource[i][bulletChart.targetField].length === 1) {\n                    while (i === 0) {\n                        this.legendCollections.push(new LegendOptions('Target', fill, shape, this.chart.legendSettings.visible, null, '', null, false, count++, null));\n                        break;\n                    }\n                }\n                else {\n                    var targetTypes = bulletChart.targetTypes;\n                    var targetType = [];\n                    var targetTypeLength = targetTypes.length;\n                    while (i === 0) {\n                        for (var i_1 = 0; i_1 < targetTypeLength; i_1++) {\n                            targetType[i_1] = targetTypes[i_1 % targetTypeLength];\n                            targetType[i_1] = (targetType[i_1] === 'Rect') ? bulletChart.orientation === 'Vertical' ?\n                                'ActualRect' : 'TargetRect' : (targetType[i_1]);\n                            targetType[i_1] = (targetType[i_1] === 'Cross') ? 'Multiply' : targetType[i_1];\n                            this.legendCollections.push(new LegendOptions('Target_' + i_1, fill, targetType[i_1], this.chart.legendSettings.visible, null, '', null, false, count++, null));\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Retrieves the legend bounds for the bullet chart.\n     *\n     * @param {Size} availableSize - The available size for rendering.\n     * @param {Rect} bulletLegendBounds - The bounds of the bullet chart legend.\n     * @param {LegendSettingsModel} legend - The legend settings for the bullet chart.\n     * @returns {void}\n     * @private\n     */\n    BulletChartLegend.prototype.getLegendBounds = function (availableSize, bulletLegendBounds, legend) {\n        var extraWidth = 0;\n        var padding = legend.padding;\n        var extraHeight = 0;\n        if (!this.isVertical) {\n            extraHeight = ((availableSize.height / 100) * 5);\n        }\n        else {\n            extraWidth = ((availableSize.width / 100) * 5);\n        }\n        bulletLegendBounds.height += extraHeight;\n        bulletLegendBounds.width += extraWidth;\n        var maximumWidth = 0;\n        var legendRowWidth = 0;\n        var legendRowCount = 0;\n        var legendWidth = 0;\n        var columnHeight = 0;\n        var shapeWidth = legend.shapeWidth;\n        var shapePadding = legend.shapePadding;\n        var legendEventArgs;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\n        var render = false;\n        for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n            var bulletLegendOption = _a[_i];\n            legendEventArgs = {\n                fill: bulletLegendOption.fill, text: bulletLegendOption.text, shape: bulletLegendOption.shape,\n                name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            bulletLegendOption.render = !legendEventArgs.cancel;\n            bulletLegendOption.text = legendEventArgs.text;\n            bulletLegendOption.fill = legendEventArgs.fill;\n            bulletLegendOption.shape = legendEventArgs.shape;\n            bulletLegendOption.textSize = measureText(bulletLegendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\n            if (bulletLegendOption.render && bulletLegendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + bulletLegendOption.textSize.width + padding;\n                legendRowWidth = legendRowWidth + legendWidth;\n                if (bulletLegendBounds.width < (padding + legendRowWidth) || this.isVertical) {\n                    maximumWidth = Math.max(maximumWidth, (legendRowWidth + padding - (this.isVertical ? 0 : legendWidth)));\n                    if (legendRowCount === 0 && (legendWidth !== legendRowWidth)) {\n                        legendRowCount = 1;\n                    }\n                    legendRowWidth = this.isVertical ? 0 : legendWidth;\n                    legendRowCount++;\n                    columnHeight = (legendRowCount * (this.maxItemHeight + padding)) + padding;\n                }\n            }\n        }\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        this.isPaging = bulletLegendBounds.height < columnHeight;\n        this.totalPages = legendRowCount;\n        if (render) {\n            this.setBounds(Math.max((legendRowWidth + padding), maximumWidth), (this.position === 'Bottom' || this.position === 'Top') ? Math.min(columnHeight, this.chart.initialClipRect.height -\n                (this.legend.border.width + this.legend.margin.bottom + this.legend.margin.top)) : columnHeight, legend, bulletLegendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, bulletLegendBounds);\n        }\n    };\n    /**\n     * Retrieves the rendering point for the bullet chart legend.\n     *\n     * @param {LegendOptions} bulletLegendOption - The legend options for the bullet chart.\n     * @param {ChartLocation} start - The starting location for rendering.\n     * @param {number} textPadding - The padding around the text.\n     * @param {LegendOptions} prevLegend - The previous legend options.\n     * @param {Rect} rect - The rect region for the legend.\n     * @param {number} count - The count of legends.\n     * @param {number} firstLegend - The index of the first legend.\n     * @returns {void}\n     * @private\n     */\n    BulletChartLegend.prototype.getRenderPoint = function (bulletLegendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var textWidth = textPadding + (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : prevLegend.textSize.width);\n        var previousBound = prevLegend.location.x + ((!this.isRtlEnable) ? textWidth : -textWidth);\n        var padding = this.legend.padding;\n        if ((previousBound + (bulletLegendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2) ||\n            this.isVertical) {\n            bulletLegendOption.location.x = start.x;\n            bulletLegendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                prevLegend.location.y + this.maxItemHeight + padding;\n        }\n        else {\n            bulletLegendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            bulletLegendOption.location.y = prevLegend.location.y;\n        }\n        var availwidth = (!this.isRtlEnable) ? (this.legendBounds.x + this.legendBounds.width) - (bulletLegendOption.location.x +\n            textPadding - this.itemPadding - this.legend.shapeWidth / 2) : (bulletLegendOption.location.x - textPadding +\n            this.itemPadding + (this.legend.shapeWidth / 2)) - this.legendBounds.x;\n        bulletLegendOption.text = textTrim(+availwidth.toFixed(4), bulletLegendOption.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendLabelFont);\n    };\n    /**\n     * To show the tooltip for the trimmed text in legend.\n     *\n     * @param {Event | PointerEvent} event - The click event.\n     * @returns {void}\n     */\n    BulletChartLegend.prototype.click = function (event) {\n        var symbolTargetId = event.target.id;\n        if (symbolTargetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        else if (symbolTargetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    BulletChartLegend.prototype.getModuleName = function () {\n        return 'BulletChartLegend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    BulletChartLegend.prototype.destroy = function () {\n        /**\n         * Destroy method calling here.\n         */\n        this.removeEventListener();\n    };\n    return BulletChartLegend;\n}(BaseLegend));\nexport { BulletChartLegend };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}