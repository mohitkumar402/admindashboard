{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkfun\\\\Desktop\\\\ct assignment\\\\admin\\\\src\\\\Context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the context object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [currentColor, setCurrentColor] = useState('#03C9D7'); // Default theme color\n  const [currentMode, setCurrentMode] = useState('Light'); // Light/Dark mode\n  const [activeMenu, setActiveMenu] = useState(true); // Sidebar visibility\n  const [themeSettings, setThemeSettings] = useState(false); // Show/hide theme settings modal\n  const [screenSize, setScreenSize] = useState(undefined); // For responsive layout\n\n  useEffect(() => {\n    const savedColor = localStorage.getItem('colorMode');\n    const savedMode = localStorage.getItem('themeMode');\n    if (savedColor) setCurrentColor(savedColor);\n    if (savedMode) setCurrentMode(savedMode);\n  }, []);\n  const setMode = e => {\n    const mode = e.target.value;\n    setCurrentMode(mode);\n    localStorage.setItem('themeMode', mode);\n  };\n  const setColor = color => {\n    setCurrentColor(color);\n    localStorage.setItem('colorMode', color);\n  };\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      currentColor,\n      currentMode,\n      activeMenu,\n      screenSize,\n      themeSettings,\n      setScreenSize,\n      setActiveMenu,\n      setCurrentColor,\n      setCurrentMode,\n      setThemeSettings,\n      setMode,\n      setColor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for consuming the context\n_s(ContextProvider, \"FoAe+eiB8Tva0Ow1lp58boc5zK4=\");\n_c = ContextProvider;\nexport const useStateContext = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","StateContext","ContextProvider","children","_s","currentColor","setCurrentColor","currentMode","setCurrentMode","activeMenu","setActiveMenu","themeSettings","setThemeSettings","screenSize","setScreenSize","undefined","savedColor","localStorage","getItem","savedMode","setMode","e","mode","target","value","setItem","setColor","color","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateContext","_s2","$RefreshReg$"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/src/Context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create the context object\r\nconst StateContext = createContext();\r\n\r\n// Provider component\r\nexport const ContextProvider = ({ children }) => {\r\n  const [currentColor, setCurrentColor] = useState('#03C9D7'); // Default theme color\r\n  const [currentMode, setCurrentMode] = useState('Light');      // Light/Dark mode\r\n  const [activeMenu, setActiveMenu] = useState(true);           // Sidebar visibility\r\n  const [themeSettings, setThemeSettings] = useState(false);    // Show/hide theme settings modal\r\n  const [screenSize, setScreenSize] = useState(undefined);      // For responsive layout\r\n\r\n  useEffect(() => {\r\n    const savedColor = localStorage.getItem('colorMode');\r\n    const savedMode = localStorage.getItem('themeMode');\r\n    if (savedColor) setCurrentColor(savedColor);\r\n    if (savedMode) setCurrentMode(savedMode);\r\n  }, []);\r\n\r\n  const setMode = (e) => {\r\n    const mode = e.target.value;\r\n    setCurrentMode(mode);\r\n    localStorage.setItem('themeMode', mode);\r\n  };\r\n\r\n  const setColor = (color) => {\r\n    setCurrentColor(color);\r\n    localStorage.setItem('colorMode', color);\r\n  };\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        currentColor,\r\n        currentMode,\r\n        activeMenu,\r\n        screenSize,\r\n        themeSettings,\r\n        setScreenSize,\r\n        setActiveMenu,\r\n        setCurrentColor,\r\n        setCurrentMode,\r\n        setThemeSettings,\r\n        setMode,\r\n        setColor,\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for consuming the context\r\nexport const useStateContext = () => useContext(StateContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAM;EAC9D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAW;EAC9D,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAI;EAC9D,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAACkB,SAAS,CAAC,CAAC,CAAM;;EAE9DjB,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAIF,UAAU,EAAEV,eAAe,CAACU,UAAU,CAAC;IAC3C,IAAIG,SAAS,EAAEX,cAAc,CAACW,SAAS,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAIC,CAAC,IAAK;IACrB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BhB,cAAc,CAACc,IAAI,CAAC;IACpBL,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEH,IAAI,CAAC;EACzC,CAAC;EAED,MAAMI,QAAQ,GAAIC,KAAK,IAAK;IAC1BrB,eAAe,CAACqB,KAAK,CAAC;IACtBV,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEE,KAAK,CAAC;EAC1C,CAAC;EAED,oBACE3B,OAAA,CAACC,YAAY,CAAC2B,QAAQ;IACpBJ,KAAK,EAAE;MACLnB,YAAY;MACZE,WAAW;MACXE,UAAU;MACVI,UAAU;MACVF,aAAa;MACbG,aAAa;MACbJ,aAAa;MACbJ,eAAe;MACfE,cAAc;MACdI,gBAAgB;MAChBQ,OAAO;MACPM;IACF,CAAE;IAAAvB,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAA5B,EAAA,CA/CaF,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAgD5B,OAAO,MAAMgC,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACK,YAAY,CAAC;AAAA;AAACkC,GAAA,CAAjDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}