{"ast":null,"code":"import { Mean, RectOption, pathAnimation, getElement, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { getPoint, sum, templateAnimate } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { animationMode } from '@syncfusion/ej2-base';\n/**\n * The `ErrorBar` module is used to render the error bar for series.\n */\nvar ErrorBar = /** @class */function () {\n  /**\n   * Constructor for the error bar module.\n   *\n   * @private\n   */\n  function ErrorBar(chart) {\n    this.chart = chart;\n  }\n  /**\n   * Render the error bar for series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ErrorBar.prototype.render = function (series) {\n    if (this.chart.chartAreaType === 'PolarRadar') {\n      return null;\n    }\n    this.createElement(series, this.chart);\n    this.renderErrorBar(series);\n  };\n  ErrorBar.prototype.renderErrorBar = function (series) {\n    var seriesIndex = series.index;\n    var symbolId;\n    var capId;\n    var errorbar = series.errorBar;\n    var errorBarCap = series.errorBar.errorBarCap;\n    var errorDirection = ['', ''];\n    var redraw = series.chart.redraw;\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n      if (point.visible && point.symbolLocations[0]) {\n        var errorX = 0;\n        var errorY = 0;\n        switch (errorbar.mode) {\n          case 'Vertical':\n            errorY = point.verticalError;\n            break;\n          case 'Horizontal':\n            errorX = point.horizontalError;\n            break;\n          case 'Both':\n            errorX = point.horizontalError;\n            errorY = point.verticalError;\n            break;\n        }\n        errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n        symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n        capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n        var shapeOption = new PathOption(symbolId, '', errorbar.width, errorbar.errorBarColorMapping ? point.errorBarColor : errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[0]);\n        var element = getElement(shapeOption.id);\n        var previousDirection = element ? element.getAttribute('d') : null;\n        if (series.errorBarElement) {\n          series.errorBarElement.appendChild(this.chart.renderer.drawPath(shapeOption));\n        }\n        pathAnimation(element, errorDirection[0], redraw, previousDirection, this.chart.duration);\n        var capOption = new PathOption(capId, '', errorBarCap.width, errorbar.errorBarCap.color ? errorBarCap.color : errorbar.errorBarColorMapping ? point.errorBarColor : errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[1]);\n        element = getElement(capOption.id);\n        previousDirection = element ? element.getAttribute('d') : null;\n        if (series.errorBarElement) {\n          appendChildElement(this.chart.enableCanvas, series.errorBarElement, this.chart.renderer.drawPath(capOption), redraw);\n        }\n        pathAnimation(element, errorDirection[1], redraw, previousDirection, this.chart.duration);\n      }\n    }\n  };\n  // path calculation for error bar\n  ErrorBar.prototype.findLocation = function (point, series, isInverted, x1, y1) {\n    var errorbar = series.errorBar;\n    var direction = errorbar.direction;\n    var location = [];\n    var yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] : series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose' ? series.points[point.index].high : point.yValue;\n    var startPoint = getPoint(point.xValue + (direction === 'Plus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both') ? x1 = point.horizontalPositiveError : x1 : 0), yValue + (direction === 'Plus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? y1 = point.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n    location.push(startPoint);\n    if (series.isRectSeries) {\n      var midPoint = point.symbolLocations[0];\n      location.push(midPoint);\n    } else {\n      var midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n      location.push(midPoint);\n    }\n    var endPoint = getPoint(point.xValue - (direction === 'Minus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both') ? x1 = point.horizontalNegativeError : x1 : 0), yValue - (direction === 'Minus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? y1 = point.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n    location.push(endPoint);\n    // calculate error height for datalabel position alignment\n    point.error = errorbar.mode === 'Vertical' ? errorbar.verticalError : errorbar.horizontalError;\n    this.negativeHeight = errorbar.mode === 'Vertical' || errorbar.mode === 'Both' ? isInverted ? location[1].x - location[2].x : location[2].y - location[1].y : 0;\n    this.positiveHeight = errorbar.mode === 'Vertical' || errorbar.mode === 'Both' ? isInverted ? location[0].x - location[1].x : location[1].y - location[0].y : 0;\n    return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n  };\n  //calculations for eror bar types\n  ErrorBar.prototype.calculateFixedValue = function (point, series, isInverted, errorX, errorY) {\n    // const errorbar: ErrorBarSettingsModel = series.errorBar;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n  ErrorBar.prototype.calculatePercentageValue = function (point, series, isInverted, errorX, errorY) {\n    errorX = errorX / 100 * point.xValue;\n    errorY = errorY / 100 * point.yValue;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n  ErrorBar.prototype.calculateStandardDeviationValue = function (point, series, isInverted, errorX, errorY) {\n    var getMean = this.meanCalculation(series, series.errorBar.mode);\n    errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n    errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n  ErrorBar.prototype.calculateStandardErrorValue = function (point, series, isInverted, errorX, errorY) {\n    var length = series.points.length;\n    var getMean = this.meanCalculation(series, series.errorBar.mode);\n    errorX = errorX * getMean.horizontalSquareRoot / Math.sqrt(length);\n    errorY = errorY * getMean.verticalSquareRoot / Math.sqrt(length);\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n  ErrorBar.prototype.calculateCustomValue = function (point, series, isInverted, errorX, errorY) {\n    // const errorbar: ErrorBarSettingsModel = series.errorBar;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n  ErrorBar.prototype.getHorizontalDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var path = '';\n    var capDirection = '';\n    path += 'M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n    capDirection += direction === 'Plus' || direction === 'Both' ? 'M ' + start.x + ' ' + (mid.y - capLength) + ' L ' + start.x + ' ' + (mid.y + capLength) : '';\n    capDirection += direction === 'Minus' || direction === 'Both' ? 'M ' + end.x + ' ' + (mid.y - capLength) + ' L ' + end.x + ' ' + (mid.y + capLength) : ' ';\n    return [path, capDirection];\n  };\n  ErrorBar.prototype.getVerticalDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var path = '';\n    var capDirection = '';\n    path += 'M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n    capDirection += direction === 'Plus' || direction === 'Both' ? 'M ' + (mid.x - capLength) + ' ' + start.y + ' L ' + (mid.x + capLength) + ' ' + start.y : '';\n    capDirection += direction === 'Minus' || direction === 'Both' ? 'M ' + (mid.x - capLength) + ' ' + end.y + ' L ' + (mid.x + capLength) + ' ' + end.y : '';\n    return [path, capDirection];\n  };\n  ErrorBar.prototype.getBothDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var capDirection = '';\n    var path = '';\n    var pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n    var pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n    path = pathH[0].concat(pathV[0]);\n    capDirection = pathH[1].concat(pathV[1]);\n    return [path, capDirection];\n  };\n  ErrorBar.prototype.getErrorDirection = function (start, mid, end, series, isInverted) {\n    var direction = series.errorBar.direction;\n    var mode = series.errorBar.mode;\n    var capLength = series.errorBar.errorBarCap.length;\n    var paths;\n    var errorMode = mode;\n    switch (mode) {\n      case 'Both':\n        errorMode = mode;\n        break;\n      case 'Horizontal':\n        errorMode = isInverted ? 'Vertical' : mode;\n        break;\n      case 'Vertical':\n        errorMode = isInverted ? 'Horizontal' : mode;\n        break;\n    }\n    switch (errorMode) {\n      case 'Horizontal':\n        paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n      case 'Vertical':\n        paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n      case 'Both':\n        paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n    }\n    return [paths[0], paths[1]];\n  };\n  // mean calculation for standard deviation and standard error\n  ErrorBar.prototype.meanCalculation = function (series, mode) {\n    var sumOfX = 0;\n    var sumOfY = 0;\n    var verticalMean = 0;\n    var horizontalMean = 0;\n    var length = series.points.length;\n    switch (mode) {\n      case 'Vertical':\n        sumOfY = sum(series.yData);\n        verticalMean = sumOfY / length;\n        break;\n      case 'Horizontal':\n        sumOfX = sum(series.xData);\n        horizontalMean = sumOfX / length;\n        break;\n      case 'Both':\n        sumOfY = sum(series.yData);\n        verticalMean = sumOfY / length;\n        sumOfX = sum(series.xData);\n        horizontalMean = sumOfX / length;\n    }\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n      if (mode === 'Vertical') {\n        sumOfY = sumOfY + Math.pow(point.yValue - verticalMean, 2);\n      } else if (mode === 'Horizontal') {\n        sumOfX = sumOfX + Math.pow(point.xValue - horizontalMean, 2);\n      } else {\n        sumOfY = sumOfY + Math.pow(point.yValue - verticalMean, 2);\n        sumOfX = sumOfX + Math.pow(point.xValue - horizontalMean, 2);\n      }\n    }\n    var verStandardMean = sumOfY / (length - 1);\n    var verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n    var horStandardMean = sumOfX / (length - 1);\n    var horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n    return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n  };\n  ErrorBar.prototype.createElement = function (series, chart) {\n    // const explodeValue: number = 5;\n    var transform = chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + series.clipRect.y + ')' : '';\n    var markerHeight = series.marker.height / 2;\n    var markerWidth = series.marker.width / 2;\n    if (chart.chartAreaType === 'Cartesian') {\n      var options = new RectOption(chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', {\n        width: 1,\n        color: 'Gray'\n      }, 1, {\n        x: -markerWidth,\n        y: -markerHeight,\n        width: series.clipRect.width + markerWidth * 2,\n        height: series.clipRect.height + markerHeight * 2\n      });\n      series.errorBarElement = chart.renderer.createGroup({\n        'id': chart.element.id + 'ErrorBarGroup' + series.index,\n        'transform': transform,\n        'clip-path': 'url(#' + chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n      });\n      if (series.errorBarElement) {\n        series.errorBarElement.appendChild(appendClipElement(chart.redraw, options, chart.renderer));\n      }\n    }\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   * @private\n   */\n  ErrorBar.prototype.doErrorBarAnimation = function (series) {\n    var errorBarElements = series.errorBarElement.childNodes;\n    if (!errorBarElements) {\n      return null;\n    }\n    var delay = series.animation.delay + (series.animation.duration === 0 && animationMode === 'Enable' ? 1000 : series.animation.duration);\n    var j = 1;\n    while (j < errorBarElements.length) {\n      for (var i = 0; i < series.points.length; i++) {\n        if (!series.points[i].symbolLocations[0]) {\n          continue;\n        }\n        errorBarElements[j].style.visibility = 'hidden';\n        templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n      }\n      j++;\n    }\n  };\n  /**\n   * Get module name.\n   */\n  ErrorBar.prototype.getModuleName = function () {\n    // Returns the module name\n    return 'ErrorBar';\n  };\n  /**\n   * To destroy the errorBar for series.\n   *\n   * @returns {void}\n   * @private\n   */\n  ErrorBar.prototype.destroy = function () {\n    // Destroy method performed here\n  };\n  return ErrorBar;\n}();\nexport { ErrorBar };","map":{"version":3,"names":["Mean","RectOption","pathAnimation","getElement","appendChildElement","appendClipElement","getPoint","sum","templateAnimate","PathOption","animationMode","ErrorBar","chart","prototype","render","series","chartAreaType","createElement","renderErrorBar","seriesIndex","index","symbolId","capId","errorbar","errorBar","errorBarCap","errorDirection","redraw","_i","_a","points","length","point","visible","symbolLocations","errorX","errorY","mode","verticalError","horizontalError","type","requireInvertedAxis","element","id","shapeOption","width","errorBarColorMapping","errorBarColor","color","themeStyle","previousDirection","getAttribute","errorBarElement","appendChild","renderer","drawPath","duration","capOption","enableCanvas","findLocation","isInverted","x1","y1","direction","location","yValue","indexOf","stackedValues","endValues","seriesType","high","startPoint","xValue","horizontalPositiveError","verticalPositiveError","xAxis","yAxis","push","isRectSeries","midPoint","endPoint","horizontalNegativeError","verticalNegativeError","error","negativeHeight","x","y","positiveHeight","getErrorDirection","calculateFixedValue","calculatePercentageValue","calculateStandardDeviationValue","getMean","meanCalculation","horizontalSquareRoot","horizontalMean","verticalSquareRoot","verticalMean","calculateStandardErrorValue","Math","sqrt","calculateCustomValue","getHorizontalDirection","start","mid","end","errorMode","capLength","path","capDirection","getVerticalDirection","getBothDirection","pathH","pathV","concat","paths","sumOfX","sumOfY","yData","xData","pow","verStandardMean","verSquareRoot","horStandardMean","horSquareRoot","transform","clipRect","markerHeight","marker","height","markerWidth","options","createGroup","doErrorBarAnimation","errorBarElements","childNodes","delay","animation","j","i","style","visibility","getModuleName","destroy"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/chart/series/error-bar.js"],"sourcesContent":["import { Mean, RectOption, pathAnimation, getElement, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { getPoint, sum, templateAnimate } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { animationMode } from '@syncfusion/ej2-base';\n/**\n * The `ErrorBar` module is used to render the error bar for series.\n */\nvar ErrorBar = /** @class */ (function () {\n    /**\n     * Constructor for the error bar module.\n     *\n     * @private\n     */\n    function ErrorBar(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Render the error bar for series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ErrorBar.prototype.render = function (series) {\n        if (this.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        this.createElement(series, this.chart);\n        this.renderErrorBar(series);\n    };\n    ErrorBar.prototype.renderErrorBar = function (series) {\n        var seriesIndex = series.index;\n        var symbolId;\n        var capId;\n        var errorbar = series.errorBar;\n        var errorBarCap = series.errorBar.errorBarCap;\n        var errorDirection = ['', ''];\n        var redraw = series.chart.redraw;\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            if (point.visible && point.symbolLocations[0]) {\n                var errorX = 0;\n                var errorY = 0;\n                switch (errorbar.mode) {\n                    case 'Vertical':\n                        errorY = point.verticalError;\n                        break;\n                    case 'Horizontal':\n                        errorX = point.horizontalError;\n                        break;\n                    case 'Both':\n                        errorX = point.horizontalError;\n                        errorY = point.verticalError;\n                        break;\n                }\n                errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n                symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n                capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n                var shapeOption = new PathOption(symbolId, '', errorbar.width, (errorbar.errorBarColorMapping ? point.errorBarColor : errorbar.color || this.chart.themeStyle.errorBar), null, '', errorDirection[0]);\n                var element = getElement(shapeOption.id);\n                var previousDirection = element ? element.getAttribute('d') : null;\n                if (series.errorBarElement) {\n                    series.errorBarElement.appendChild(this.chart.renderer.drawPath(shapeOption));\n                }\n                pathAnimation(element, errorDirection[0], redraw, previousDirection, this.chart.duration);\n                var capOption = new PathOption(capId, '', errorBarCap.width, (errorbar.errorBarCap.color ? errorBarCap.color : (errorbar.errorBarColorMapping ? point.errorBarColor : errorbar.color || this.chart.themeStyle.errorBar)), null, '', errorDirection[1]);\n                element = getElement(capOption.id);\n                previousDirection = element ? element.getAttribute('d') : null;\n                if (series.errorBarElement) {\n                    appendChildElement(this.chart.enableCanvas, series.errorBarElement, this.chart.renderer.drawPath(capOption), redraw);\n                }\n                pathAnimation(element, errorDirection[1], redraw, previousDirection, this.chart.duration);\n            }\n        }\n    };\n    // path calculation for error bar\n    ErrorBar.prototype.findLocation = function (point, series, isInverted, x1, y1) {\n        var errorbar = series.errorBar;\n        var direction = errorbar.direction;\n        var location = [];\n        var yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] :\n            (series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose') ? (series.points[point.index].high) :\n                point.yValue;\n        var startPoint = getPoint(point.xValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = point.horizontalPositiveError : x1 : 0), yValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = point.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(startPoint);\n        if (series.isRectSeries) {\n            var midPoint = point.symbolLocations[0];\n            location.push(midPoint);\n        }\n        else {\n            var midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n            location.push(midPoint);\n        }\n        var endPoint = getPoint(point.xValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = point.horizontalNegativeError : x1 : 0), yValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = point.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(endPoint);\n        // calculate error height for datalabel position alignment\n        point.error = (errorbar.mode === 'Vertical') ? errorbar.verticalError : errorbar.horizontalError;\n        this.negativeHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[1].x - location[2].x) :\n            (location[2].y - location[1].y)) : 0;\n        this.positiveHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[0].x - location[1].x) :\n            (location[1].y - location[0].y)) : 0;\n        return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n    };\n    //calculations for eror bar types\n    ErrorBar.prototype.calculateFixedValue = function (point, series, isInverted, errorX, errorY) {\n        // const errorbar: ErrorBarSettingsModel = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculatePercentageValue = function (point, series, isInverted, errorX, errorY) {\n        errorX = (errorX / 100) * point.xValue;\n        errorY = (errorY / 100) * point.yValue;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateStandardDeviationValue = function (point, series, isInverted, errorX, errorY) {\n        var getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n        errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateStandardErrorValue = function (point, series, isInverted, errorX, errorY) {\n        var length = series.points.length;\n        var getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = ((errorX * getMean.horizontalSquareRoot) / Math.sqrt(length));\n        errorY = ((errorY * getMean.verticalSquareRoot) / Math.sqrt(length));\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateCustomValue = function (point, series, isInverted, errorX, errorY) {\n        // const errorbar: ErrorBarSettingsModel = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.getHorizontalDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var path = '';\n        var capDirection = '';\n        path += 'M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? 'M ' + (start.x) + ' ' + (mid.y - capLength) + ' L '\n            + (start.x) + ' ' + (mid.y + capLength) : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? 'M ' + (end.x) + ' ' + (mid.y - capLength) + ' L '\n            + (end.x) + ' ' + (mid.y + capLength) : ' ';\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getVerticalDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var path = '';\n        var capDirection = '';\n        path += 'M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? 'M ' + (mid.x - capLength) + ' ' + start.y + ' L '\n            + (mid.x + capLength) + ' ' + start.y : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? 'M ' + (mid.x - capLength) + ' ' + end.y + ' L '\n            + (mid.x + capLength) + ' ' + end.y : '';\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getBothDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var capDirection = '';\n        var path = '';\n        var pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        var pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        path = pathH[0].concat(pathV[0]);\n        capDirection = pathH[1].concat(pathV[1]);\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getErrorDirection = function (start, mid, end, series, isInverted) {\n        var direction = series.errorBar.direction;\n        var mode = series.errorBar.mode;\n        var capLength = series.errorBar.errorBarCap.length;\n        var paths;\n        var errorMode = mode;\n        switch (mode) {\n            case 'Both':\n                errorMode = mode;\n                break;\n            case 'Horizontal':\n                errorMode = (isInverted) ? 'Vertical' : mode;\n                break;\n            case 'Vertical':\n                errorMode = (isInverted) ? 'Horizontal' : mode;\n                break;\n        }\n        switch (errorMode) {\n            case 'Horizontal':\n                paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Vertical':\n                paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Both':\n                paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n        }\n        return [paths[0], paths[1]];\n    };\n    // mean calculation for standard deviation and standard error\n    ErrorBar.prototype.meanCalculation = function (series, mode) {\n        var sumOfX = 0;\n        var sumOfY = 0;\n        var verticalMean = 0;\n        var horizontalMean = 0;\n        var length = series.points.length;\n        switch (mode) {\n            case 'Vertical':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                break;\n            case 'Horizontal':\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n                break;\n            case 'Both':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n        }\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            if (mode === 'Vertical') {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n            }\n            else if (mode === 'Horizontal') {\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n            else {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n        }\n        var verStandardMean = sumOfY / (length - 1);\n        var verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n        var horStandardMean = sumOfX / (length - 1);\n        var horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n        return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n    };\n    ErrorBar.prototype.createElement = function (series, chart) {\n        // const explodeValue: number = 5;\n        var transform = chart.chartAreaType === 'Cartesian' ?\n            'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        var markerHeight = (series.marker.height) / 2;\n        var markerWidth = (series.marker.width) / 2;\n        if (chart.chartAreaType === 'Cartesian') {\n            var options = new RectOption(chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                x: -markerWidth, y: -markerHeight,\n                width: series.clipRect.width + markerWidth * 2, height: series.clipRect.height + markerHeight * 2\n            });\n            series.errorBarElement = chart.renderer.createGroup({\n                'id': chart.element.id + 'ErrorBarGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n            });\n            if (series.errorBarElement) {\n                series.errorBarElement.appendChild(appendClipElement(chart.redraw, options, chart.renderer));\n            }\n        }\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     * @private\n     */\n    ErrorBar.prototype.doErrorBarAnimation = function (series) {\n        var errorBarElements = series.errorBarElement.childNodes;\n        if (!errorBarElements) {\n            return null;\n        }\n        var delay = series.animation.delay + ((series.animation.duration === 0 && animationMode === 'Enable') ? 1000 : series.animation.duration);\n        var j = 1;\n        while (j < errorBarElements.length) {\n            for (var i = 0; i < series.points.length; i++) {\n                if (!series.points[i].symbolLocations[0]) {\n                    continue;\n                }\n                errorBarElements[j].style.visibility = 'hidden';\n                templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n            }\n            j++;\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ErrorBar.prototype.getModuleName = function () {\n        // Returns the module name\n        return 'ErrorBar';\n    };\n    /**\n     * To destroy the errorBar for series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ErrorBar.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return ErrorBar;\n}());\nexport { ErrorBar };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}