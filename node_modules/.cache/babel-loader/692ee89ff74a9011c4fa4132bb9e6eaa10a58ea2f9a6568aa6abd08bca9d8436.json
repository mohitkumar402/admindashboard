{"ast":null,"code":"import { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { textRender } from '../../common/model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\nimport { appendChildElement, colorNameToHex, convertHexToColor, getFontStyle, getTemplateFunction, isCollide, measureElementRect, withIn } from '../../common/utils/helper';\n/**\n * The `DataLabel` module is used to render data label for the data point.\n */\nvar DataLabel3D = /** @class */function () {\n  /**\n   * Constructor for the data label module.\n   *\n   * @param {Chart3D} chart - Chart3D instance.\n   * @private\n   */\n  function DataLabel3D(chart) {\n    this.chart = chart;\n  }\n  /**\n   * Renders a 3D series on a 3D chart with data labels.\n   *\n   * @param {Chart3DSeries} series - The 3D series to be rendered.\n   * @param {Chart3D} chart - The 3D chart on which the series is rendered.\n   * @param {Chart3DDataLabelSettingsModel} dataLabel - The data label style for the series.\n   * @returns {void}\n   */\n  DataLabel3D.prototype.render = function (series, chart, dataLabel) {\n    var point;\n    var templateId = chart.element.id + '-series-' + series.index + '-data-label-collections';\n    series.dataLabelElement = createElement('div', {\n      id: templateId\n    });\n    for (var i = 0; i < series.visiblePoints.length; i++) {\n      point = series.visiblePoints[i];\n      if (point.visible) {\n        this.draw3DDataLabel(series, point.index, point, chart, dataLabel);\n      }\n    }\n    if (series.dataLabel.template) {\n      appendChildElement(false, document.getElementById(this.chart.element.id + '_Secondary_Element'), series.dataLabelElement, chart.redraw, false, 'x', 'y', null, '', false, false, null);\n    }\n  };\n  /**\n   * Draws data labels for a specific data point in a 3D series on a 3D chart.\n   *\n   * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n   * @param {number} pointIndex - The index of the data point within the series.\n   * @param {Chart3DPoint} point - The data point for which data labels are drawn.\n   * @param {Chart3D} chart - The 3D chart that contains the series and data point.\n   * @param {Chart3DDataLabelSettingsModel} dataLabel - The style for data labels.\n   * @returns {void}\n   */\n  DataLabel3D.prototype.draw3DDataLabel = function (series, pointIndex, point, chart, dataLabel) {\n    var pointX;\n    var pointY;\n    var xOffset = 0;\n    var yOffset = 0;\n    var commonEventArgs = {\n      data: null\n    };\n    var pointText = this.getLabelText(point, series, this.chart)[0];\n    var size = measureText(pointText, dataLabel.font, this.chart.themeStyle.datalabelFont);\n    var location = chart.svg3DRenderer.transform3DToVisible(series, point.symbolLocations.x, point.symbolLocations.y, chart);\n    pointY = location.y;\n    pointX = location.x;\n    if (series.dataLabel.position === 'Bottom') {\n      pointY = location.y + yOffset;\n    } else {\n      pointY = location.y - yOffset;\n    }\n    pointX = location.x + xOffset;\n    commonEventArgs.data = {\n      text: pointText,\n      location: {\n        x: pointX,\n        y: pointY\n      },\n      series: series,\n      pointIndex: pointIndex\n    };\n    commonEventArgs.data.Text = commonEventArgs.data.text;\n    var argsData = {\n      cancel: false,\n      series: series,\n      point: point,\n      text: pointText,\n      border: dataLabel.border,\n      color: dataLabel.fill,\n      template: dataLabel.template,\n      textStyle: dataLabel.font\n    };\n    chart.trigger(textRender, argsData);\n    this.fontBackground = series.dataLabel.position === 'Middle' ? argsData.color === 'transparent' ? point.color : argsData.color : argsData.color;\n    commonEventArgs.data.text = argsData.text;\n    if (!series.dataLabel.template && commonEventArgs.data.Text !== '' && !argsData.cancel) {\n      /**\n       * The element object for data label.\n       */\n      var element_1 = {\n        tag: 'dataLabel',\n        series: series,\n        point: point,\n        pointIndex: pointIndex,\n        id: chart.svgObject.id + series.index + '-data-label' + pointIndex,\n        child: chart.chart3D\n      };\n      chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(pointX, pointY, point.symbolLocations.z), element_1, 0, -size.height), chart);\n    }\n    var tag = !(series.dataLabel && series.dataLabel.template) ? 'text' : 'template';\n    var backgroundColor = this.fontBackground === 'transparent' ? this.chart.theme.indexOf('Dark') > -1 || this.chart.theme === 'HighContrast' ? '#000000' : '#FFFFFF' : this.fontBackground;\n    var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\n    var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n    var font = {\n      size: argsData.textStyle.size || this.chart.themeStyle.datalabelFont.size,\n      fontWeight: argsData.textStyle.fontWeight || this.chart.themeStyle.datalabelFont.fontWeight,\n      fontStyle: argsData.textStyle.fontStyle || chart.themeStyle.datalabelFont.fontStyle,\n      fontFamily: argsData.textStyle.fontFamily || this.chart.themeStyle.datalabelFont.fontFamily,\n      color: argsData.textStyle.color || (this.chart.theme === 'Bootstrap5' ? '#212529' : this.chart.theme === 'Bootstrap5Dark' ? '#DEE2E6' : argsData.textStyle.color),\n      opacity: argsData.textStyle.opacity\n    };\n    var element = {\n      width: size.width,\n      height: size.height,\n      label: commonEventArgs.data,\n      textAnchor: 'middle',\n      tag: tag,\n      font: font,\n      angle: series.dataLabel.angle,\n      id: chart.element.id + '-svg' + '-series-' + series.index + '-point-' + pointIndex + '-data-label',\n      child: chart.chart3D,\n      argsData: argsData,\n      fill: contrast >= 128 ? this.chart.theme.indexOf('Tailwind3') > -1 ? '#111827' : '#000000' : '#FFFFFF'\n    };\n    if (!argsData.cancel) {\n      chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(pointX, pointY, point.symbolLocations.z), element, 0, -size.height), chart);\n    }\n  };\n  /**\n   * Gets the text for data labels associated with a specific data point in a 3D series.\n   *\n   * @param {Chart3DPoint} currentPoint - The data point for which data label text is generated.\n   * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n   * @param {Chart3D} chart - The 3D chart containing the series and data point.\n   * @returns {string[]} An array of text for data labels.\n   */\n  DataLabel3D.prototype.getLabelText = function (currentPoint, series, chart) {\n    var labelFormat = series.dataLabel.format ? series.dataLabel.format : series.yAxis.labelFormat;\n    var text = [];\n    var customLabelFormat = labelFormat.match('{value}') !== null;\n    text.push(currentPoint.text || currentPoint.yValue.toString());\n    if ((labelFormat || chart.useGroupingSeparator) && !currentPoint.text) {\n      series.yAxis.format = chart.intl.getNumberFormat({\n        format: customLabelFormat ? '' : labelFormat,\n        useGrouping: chart.useGroupingSeparator\n      });\n      for (var i = 0; i < text.length; i++) {\n        text[i] = customLabelFormat ? labelFormat.replace('{value}', series.yAxis.format(parseFloat(text[i]))) : series.yAxis.format(parseFloat(text[i]));\n      }\n    }\n    return text;\n  };\n  /**\n   * Creates a data label template for a specific data point in a 3D series.\n   *\n   * @param {HTMLElement} parentElement - The parent HTML element to which the data label template is attached.\n   * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n   * @param {Chart3DDataLabelSettingsModel} dataLabel - The style settings for data labels.\n   * @param {Chart3DPoint} point - The data point for which the data label template is created.\n   * @param {Chart3DTextRenderEventArgs} data - The text render event arguments.\n   * @param {number} labelIndex - The index of the data label.\n   * @param {boolean} redraw - Indicates whether the template should be redrawn.\n   * @param {Chart3DLocation} location - The location values for the data label.\n   * @returns {void}\n   */\n  DataLabel3D.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw, location) {\n    this.margin = {\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    };\n    var clip = series.clipRect;\n    var childElement = this.createTemplate(createElement('div', {\n      id: this.chart.element.id + '-series-' + series.index + '-data-label-' + labelIndex,\n      styles: 'position: absolute;background-color:' + data.color + ';' + getFontStyle(dataLabel.font, this.chart.themeStyle.datalabelFont) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n    }), data.template, this.chart, point, series, this.chart.element.id + '-data-label-', labelIndex, location);\n    this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, clip, redraw, location);\n  };\n  /**\n   * Calculates the size of a data label template for a specific data point in a 3D series.\n   *\n   * @param {HTMLElement} parentElement - The parent HTML element containing the data label template.\n   * @param {HTMLElement} childElement - The child HTML element representing the data label template.\n   * @param {Chart3DPoint} point - The data point for which the data label template size is calculated.\n   * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n   * @param {Chart3DDataLabelSettingsModel} dataLabel - The style for data labels.\n   * @param {Rect} clip - The rectangular clipping area.\n   * @param {boolean} redraw - Indicates whether the template should be redrawn.\n   * @param {Chart3DLocation} location - The location values for the data label.\n   * @param {boolean} isReactCallback - Indicates whether the callback is associated with React.\n   * @returns {void}\n   */\n  DataLabel3D.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, clip, redraw, location, isReactCallback) {\n    var elementRect = measureElementRect(childElement, redraw, isReactCallback);\n    var rect = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    var rectPosition = this.calculateTextPosition(series, point, elementRect, location);\n    var clipWidth = 0;\n    var clipHeight = 0;\n    var isOverlap = false;\n    if (isReactCallback) {\n      isOverlap = elementRect.width === 0 || elementRect.height === 0; // To check the data label already overlap before react callback call\n    }\n    childElement.style.left = rectPosition.left - clipWidth + 'px';\n    childElement.style.top = rectPosition.top + clipHeight + 'px';\n    var backgroundColor = this.fontBackground === 'transparent' ? this.chart.theme.indexOf('Dark') > -1 ? 'black' : 'white' : this.fontBackground;\n    var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\n    var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n    var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n    childElement.style.color = dataLabel.font.color || this.chart.theme === 'Bootstrap5' ? '#212529' : this.chart.theme === 'Bootstrap5Dark' ? '#DEE2E6' : Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000) >= 128 ? this.chart.theme.indexOf('Tailwind3') > -1 ? '#111827' : 'black' : this.chart.theme.indexOf('Tailwind3') > -1 ? '#FFFFFF' : 'white';\n    if (childElement.childElementCount && !isOverlap && !isCollide(rect, this.chart.dataLabelCollections, clip) && (point.yValue === undefined || withIn(point.yValue, series.yAxis.visibleRange) || series.type.indexOf('Stacking') > -1 || series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange)) && withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y && parseFloat(childElement.style.left) >= hAxis.rect.x && parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height && parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n      this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n      appendChildElement(false, parentElement, childElement, redraw, true, 'left', 'top');\n    }\n  };\n  /**\n   * Calculates the text position for a data label associated with a specific data point in a 3D series.\n   *\n   * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n   * @param {Chart3DPoint} point - The data point for which the text position is calculated.\n   * @param {ClientRect} elementSize - The size of the data label element.\n   * @param {Chart3DLocation} location - The location values for the data label.\n   * @returns {{ left: number, top: number, right: number }} An object representing the left, top, and right positions of the text.\n   */\n  DataLabel3D.prototype.calculateTextPosition = function (series, point, elementSize, location) {\n    var width = elementSize.width / 2;\n    var height = elementSize.height;\n    var left;\n    var top;\n    var right;\n    if (series.type.indexOf('Bar') !== -1) {\n      left = location.x - width;\n      top = location.y - height + series.xAxis.plotOffset;\n      right = location.x + width;\n    } else {\n      left = location.x - width;\n      top = location.y - height;\n      right = location.x + width;\n    }\n    return {\n      left: left,\n      top: top,\n      right: right\n    };\n  };\n  /**\n   * Renders a React template for a data label associated with a specific data point in a 3D series.\n   *\n   * @param {HTMLElement} childElement - The child HTML element for the React template.\n   * @param {Chart3D} chart - The 3D chart that contains the series and data point.\n   * @param {Chart3DPoint} point - The data point for which the React template is rendered.\n   * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n   * @param {number} labelIndex - The index of the data label.\n   * @param {boolean} redraw - Indicates whether the template should be redrawn.\n   * @param {Chart3DLocation} location - The location values for the data label.\n   * @returns {void}\n   */\n  DataLabel3D.prototype.chartReactTemplate = function (childElement, chart, point, series, labelIndex, redraw, location) {\n    var parentElement = document.getElementById(chart.element.id + '-series-' + series.index + '-data-label-collections');\n    if (parentElement) {\n      if (point.index === 0) {\n        chart.dataLabelCollections = []; // clear old datalabel bounds for react callback\n      }\n      chart.dataLabel3DModule.calculateTemplateLabelSize(parentElement, childElement, point, series, series.dataLabel, series.clipRect, redraw, location, true);\n    }\n  };\n  /**\n   * Creates a template element for rendering data labels associated with a specific data point in a 3D series.\n   *\n   * @param {HTMLElement} childElement - The child HTML element to contain the template content.\n   * @param {string | Function} content - The content or function for the data label template.\n   * @param {Chart3D} chart - The 3D chart containing the series and data point.\n   * @param {Chart3DPoint} point - The data point for which the template is created (optional).\n   * @param {Chart3DSeries} series - The 3D series to which the data point belongs (optional).\n   * @param {string} dataLabelId - The ID for the data label element (optional).\n   * @param {number} labelIndex - The index of the data label (optional).\n   * @param {Chart3DLocation} location - The location values for the data label (optional).\n   * @param {boolean} redraw - Indicates whether the template should be redrawn (optional).\n   * @returns {HTMLElement} The created template element.\n   */\n  DataLabel3D.prototype.createTemplate = function (childElement, content, chart, point, series, dataLabelId, labelIndex, location, redraw) {\n    var templateFn = getTemplateFunction(content);\n    var templateElement;\n    try {\n      var tempObject = {\n        chart: chart,\n        series: series,\n        point: point\n      };\n      var templateId = dataLabelId + '-template';\n      var elementData = templateFn ? templateFn(tempObject, chart, templateId, dataLabelId) : [];\n      if (elementData.length) {\n        templateElement = Array.prototype.slice.call(elementData);\n        var len = templateElement.length;\n        for (var i = 0; i < len; i++) {\n          childElement.appendChild(templateElement[i]);\n        }\n      }\n      var reactCallback = void 0;\n      if (chart.getModuleName() === 'chart3d') {\n        reactCallback = point && series ? this.chartReactTemplate.bind(this, childElement, chart, point, series, labelIndex, redraw, location) : reactCallback;\n        if (chart.isReact) {\n          chart.renderReactTemplates(reactCallback);\n        }\n      }\n    } catch (e) {\n      return childElement;\n    }\n    return childElement;\n  };\n  /**\n   * Gets the name of the data label module.\n   *\n   * @returns {string} The name of the data label module.\n   */\n  DataLabel3D.prototype.getModuleName = function () {\n    // Returns the module name\n    return 'DataLabel3D';\n  };\n  /**\n   * To destroy the dataLabel for series.\n   *\n   * @returns {void}\n   * @private\n   */\n  DataLabel3D.prototype.destroy = function () {\n    // Destroy method performed here\n  };\n  return DataLabel3D;\n}();\nexport { DataLabel3D };","map":{"version":3,"names":["Rect","measureText","textRender","createElement","appendChildElement","colorNameToHex","convertHexToColor","getFontStyle","getTemplateFunction","isCollide","measureElementRect","withIn","DataLabel3D","chart","prototype","render","series","dataLabel","point","templateId","element","id","index","dataLabelElement","i","visiblePoints","length","visible","draw3DDataLabel","template","document","getElementById","redraw","pointIndex","pointX","pointY","xOffset","yOffset","commonEventArgs","data","pointText","getLabelText","size","font","themeStyle","datalabelFont","location","svg3DRenderer","transform3DToVisible","symbolLocations","x","y","position","text","Text","argsData","cancel","border","color","fill","textStyle","trigger","fontBackground","element_1","tag","svgObject","child","chart3D","graphics","addVisual","polygon","createTextElement","vector","vector3D","z","height","backgroundColor","theme","indexOf","rgbValue","contrast","Math","round","r","g","b","fontWeight","fontStyle","fontFamily","opacity","width","label","textAnchor","angle","currentPoint","labelFormat","format","yAxis","customLabelFormat","match","push","yValue","toString","useGroupingSeparator","intl","getNumberFormat","useGrouping","replace","parseFloat","createDataLabelTemplate","parentElement","labelIndex","margin","left","right","bottom","top","clip","clipRect","childElement","createTemplate","styles","calculateTemplateLabelSize","isReactCallback","elementRect","rect","rectPosition","calculateTextPosition","clipWidth","clipHeight","isOverlap","style","vAxis","requireInvertedAxis","xAxis","hAxis","childElementCount","dataLabelCollections","undefined","visibleRange","type","stackedValues","endValues","xValue","elementSize","plotOffset","chartReactTemplate","dataLabel3DModule","content","dataLabelId","templateFn","templateElement","tempObject","elementData","Array","slice","call","len","appendChild","reactCallback","getModuleName","bind","isReact","renderReactTemplates","e","destroy"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/chart3d/series/data-label.js"],"sourcesContent":["import { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { textRender } from '../../common/model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\nimport { appendChildElement, colorNameToHex, convertHexToColor, getFontStyle, getTemplateFunction, isCollide, measureElementRect, withIn } from '../../common/utils/helper';\n/**\n * The `DataLabel` module is used to render data label for the data point.\n */\nvar DataLabel3D = /** @class */ (function () {\n    /**\n     * Constructor for the data label module.\n     *\n     * @param {Chart3D} chart - Chart3D instance.\n     * @private\n     */\n    function DataLabel3D(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Renders a 3D series on a 3D chart with data labels.\n     *\n     * @param {Chart3DSeries} series - The 3D series to be rendered.\n     * @param {Chart3D} chart - The 3D chart on which the series is rendered.\n     * @param {Chart3DDataLabelSettingsModel} dataLabel - The data label style for the series.\n     * @returns {void}\n     */\n    DataLabel3D.prototype.render = function (series, chart, dataLabel) {\n        var point;\n        var templateId = chart.element.id + '-series-' + series.index + '-data-label-collections';\n        series.dataLabelElement = createElement('div', { id: templateId });\n        for (var i = 0; i < series.visiblePoints.length; i++) {\n            point = series.visiblePoints[i];\n            if (point.visible) {\n                this.draw3DDataLabel(series, point.index, point, chart, dataLabel);\n            }\n        }\n        if (series.dataLabel.template) {\n            appendChildElement(false, document.getElementById(this.chart.element.id + '_Secondary_Element'), series.dataLabelElement, chart.redraw, false, 'x', 'y', null, '', false, false, null);\n        }\n    };\n    /**\n     * Draws data labels for a specific data point in a 3D series on a 3D chart.\n     *\n     * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n     * @param {number} pointIndex - The index of the data point within the series.\n     * @param {Chart3DPoint} point - The data point for which data labels are drawn.\n     * @param {Chart3D} chart - The 3D chart that contains the series and data point.\n     * @param {Chart3DDataLabelSettingsModel} dataLabel - The style for data labels.\n     * @returns {void}\n     */\n    DataLabel3D.prototype.draw3DDataLabel = function (series, pointIndex, point, chart, dataLabel) {\n        var pointX;\n        var pointY;\n        var xOffset = 0;\n        var yOffset = 0;\n        var commonEventArgs = { data: null };\n        var pointText = this.getLabelText(point, series, this.chart)[0];\n        var size = measureText(pointText, dataLabel.font, this.chart.themeStyle.datalabelFont);\n        var location = chart.svg3DRenderer.transform3DToVisible(series, point.symbolLocations.x, point.symbolLocations.y, chart);\n        pointY = location.y;\n        pointX = location.x;\n        if (series.dataLabel.position === 'Bottom') {\n            pointY = location.y + yOffset;\n        }\n        else {\n            pointY = location.y - yOffset;\n        }\n        pointX = location.x + xOffset;\n        commonEventArgs.data = {\n            text: pointText,\n            location: { x: pointX, y: pointY },\n            series: series,\n            pointIndex: pointIndex\n        };\n        commonEventArgs.data.Text = commonEventArgs.data.text;\n        var argsData = {\n            cancel: false, series: series,\n            point: point, text: pointText, border: dataLabel.border,\n            color: dataLabel.fill, template: dataLabel.template, textStyle: dataLabel.font\n        };\n        chart.trigger(textRender, argsData);\n        this.fontBackground = series.dataLabel.position === 'Middle' ? argsData.color === 'transparent' ? point.color : argsData.color : argsData.color;\n        commonEventArgs.data.text = argsData.text;\n        if (!series.dataLabel.template && commonEventArgs.data.Text !== '' && !argsData.cancel) {\n            /**\n             * The element object for data label.\n             */\n            var element_1 = {\n                tag: 'dataLabel',\n                series: series,\n                point: point,\n                pointIndex: pointIndex,\n                id: chart.svgObject.id + series.index + '-data-label' + pointIndex,\n                child: chart.chart3D\n            };\n            chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(pointX, pointY, point.symbolLocations.z), element_1, 0, -size.height), chart);\n        }\n        var tag = !(series.dataLabel && series.dataLabel.template) ? 'text' : 'template';\n        var backgroundColor = this.fontBackground === 'transparent' ? ((this.chart.theme.indexOf('Dark') > -1 || this.chart.theme === 'HighContrast') ? '#000000' : '#FFFFFF') : this.fontBackground;\n        var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        var font = {\n            size: argsData.textStyle.size || this.chart.themeStyle.datalabelFont.size,\n            fontWeight: argsData.textStyle.fontWeight || this.chart.themeStyle.datalabelFont.fontWeight,\n            fontStyle: argsData.textStyle.fontStyle || chart.themeStyle.datalabelFont.fontStyle,\n            fontFamily: argsData.textStyle.fontFamily || this.chart.themeStyle.datalabelFont.fontFamily,\n            color: argsData.textStyle.color || (this.chart.theme === 'Bootstrap5' ? '#212529' : this.chart.theme === 'Bootstrap5Dark' ? '#DEE2E6' : argsData.textStyle.color),\n            opacity: argsData.textStyle.opacity\n        };\n        var element = {\n            width: size.width,\n            height: size.height,\n            label: commonEventArgs.data,\n            textAnchor: 'middle',\n            tag: tag,\n            font: font,\n            angle: series.dataLabel.angle,\n            id: chart.element.id + '-svg' + '-series-' + series.index + '-point-' + pointIndex + '-data-label',\n            child: chart.chart3D,\n            argsData: argsData,\n            fill: (contrast >= 128) ? (this.chart.theme.indexOf('Tailwind3') > -1 ? '#111827' : '#000000') : '#FFFFFF'\n        };\n        if (!argsData.cancel) {\n            chart.graphics.addVisual(chart.polygon.createTextElement(chart.vector.vector3D(pointX, pointY, point.symbolLocations.z), element, 0, -size.height), chart);\n        }\n    };\n    /**\n     * Gets the text for data labels associated with a specific data point in a 3D series.\n     *\n     * @param {Chart3DPoint} currentPoint - The data point for which data label text is generated.\n     * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n     * @param {Chart3D} chart - The 3D chart containing the series and data point.\n     * @returns {string[]} An array of text for data labels.\n     */\n    DataLabel3D.prototype.getLabelText = function (currentPoint, series, chart) {\n        var labelFormat = series.dataLabel.format ? series.dataLabel.format : series.yAxis.labelFormat;\n        var text = [];\n        var customLabelFormat = labelFormat.match('{value}') !== null;\n        text.push(currentPoint.text || currentPoint.yValue.toString());\n        if ((labelFormat || chart.useGroupingSeparator) && !currentPoint.text) {\n            series.yAxis.format = chart.intl.getNumberFormat({\n                format: customLabelFormat ? '' : labelFormat,\n                useGrouping: chart.useGroupingSeparator\n            });\n            for (var i = 0; i < text.length; i++) {\n                text[i] = customLabelFormat ? labelFormat.replace('{value}', series.yAxis.format(parseFloat(text[i]))) :\n                    series.yAxis.format(parseFloat(text[i]));\n            }\n        }\n        return text;\n    };\n    /**\n     * Creates a data label template for a specific data point in a 3D series.\n     *\n     * @param {HTMLElement} parentElement - The parent HTML element to which the data label template is attached.\n     * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n     * @param {Chart3DDataLabelSettingsModel} dataLabel - The style settings for data labels.\n     * @param {Chart3DPoint} point - The data point for which the data label template is created.\n     * @param {Chart3DTextRenderEventArgs} data - The text render event arguments.\n     * @param {number} labelIndex - The index of the data label.\n     * @param {boolean} redraw - Indicates whether the template should be redrawn.\n     * @param {Chart3DLocation} location - The location values for the data label.\n     * @returns {void}\n     */\n    DataLabel3D.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw, location) {\n        this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        var clip = series.clipRect;\n        var childElement = this.createTemplate(createElement('div', {\n            id: this.chart.element.id + '-series-' + series.index + '-data-label-' + labelIndex,\n            styles: 'position: absolute;background-color:' + data.color + ';' +\n                getFontStyle(dataLabel.font, this.chart.themeStyle.datalabelFont) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n        }), data.template, this.chart, point, series, this.chart.element.id + '-data-label-', labelIndex, location);\n        this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, clip, redraw, location);\n    };\n    /**\n     * Calculates the size of a data label template for a specific data point in a 3D series.\n     *\n     * @param {HTMLElement} parentElement - The parent HTML element containing the data label template.\n     * @param {HTMLElement} childElement - The child HTML element representing the data label template.\n     * @param {Chart3DPoint} point - The data point for which the data label template size is calculated.\n     * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n     * @param {Chart3DDataLabelSettingsModel} dataLabel - The style for data labels.\n     * @param {Rect} clip - The rectangular clipping area.\n     * @param {boolean} redraw - Indicates whether the template should be redrawn.\n     * @param {Chart3DLocation} location - The location values for the data label.\n     * @param {boolean} isReactCallback - Indicates whether the callback is associated with React.\n     * @returns {void}\n     */\n    DataLabel3D.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, clip, redraw, location, isReactCallback) {\n        var elementRect = measureElementRect(childElement, redraw, isReactCallback);\n        var rect = { x: 0, y: 0, width: 0, height: 0 };\n        var rectPosition = this.calculateTextPosition(series, point, elementRect, location);\n        var clipWidth = 0;\n        var clipHeight = 0;\n        var isOverlap = false;\n        if (isReactCallback) {\n            isOverlap = (elementRect.width === 0 || elementRect.height === 0); // To check the data label already overlap before react callback call\n        }\n        childElement.style.left = (rectPosition.left - clipWidth) + 'px';\n        childElement.style.top = (rectPosition.top + clipHeight) + 'px';\n        var backgroundColor = this.fontBackground === 'transparent' ? (this.chart.theme.indexOf('Dark') > -1 ? 'black' : 'white') : this.fontBackground;\n        var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\n        var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n        var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n        childElement.style.color = dataLabel.font.color || this.chart.theme === 'Bootstrap5' ? '#212529' : this.chart.theme === 'Bootstrap5Dark' ? '#DEE2E6' :\n            ((Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000)) >= 128 ? this.chart.theme.indexOf('Tailwind3') > -1 ? '#111827' : 'black' : this.chart.theme.indexOf('Tailwind3') > -1 ? '#FFFFFF' : 'white');\n        if (childElement.childElementCount && !isOverlap && (!isCollide(rect, this.chart.dataLabelCollections, clip))\n            && (point.yValue === undefined ||\n                withIn(point.yValue, series.yAxis.visibleRange) || (series.type.indexOf('Stacking') > -1) ||\n                (series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange))) &&\n            withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y &&\n            parseFloat(childElement.style.left) >= hAxis.rect.x &&\n            parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height &&\n            parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n            this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n            appendChildElement(false, parentElement, childElement, redraw, true, 'left', 'top');\n        }\n    };\n    /**\n     * Calculates the text position for a data label associated with a specific data point in a 3D series.\n     *\n     * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n     * @param {Chart3DPoint} point - The data point for which the text position is calculated.\n     * @param {ClientRect} elementSize - The size of the data label element.\n     * @param {Chart3DLocation} location - The location values for the data label.\n     * @returns {{ left: number, top: number, right: number }} An object representing the left, top, and right positions of the text.\n     */\n    DataLabel3D.prototype.calculateTextPosition = function (series, point, elementSize, location) {\n        var width = elementSize.width / 2;\n        var height = elementSize.height;\n        var left;\n        var top;\n        var right;\n        if (series.type.indexOf('Bar') !== -1) {\n            left = location.x - width;\n            top = location.y - height + series.xAxis.plotOffset;\n            right = location.x + width;\n        }\n        else {\n            left = location.x - width;\n            top = location.y - height;\n            right = location.x + width;\n        }\n        return { left: left, top: top, right: right };\n    };\n    /**\n     * Renders a React template for a data label associated with a specific data point in a 3D series.\n     *\n     * @param {HTMLElement} childElement - The child HTML element for the React template.\n     * @param {Chart3D} chart - The 3D chart that contains the series and data point.\n     * @param {Chart3DPoint} point - The data point for which the React template is rendered.\n     * @param {Chart3DSeries} series - The 3D series to which the data point belongs.\n     * @param {number} labelIndex - The index of the data label.\n     * @param {boolean} redraw - Indicates whether the template should be redrawn.\n     * @param {Chart3DLocation} location - The location values for the data label.\n     * @returns {void}\n     */\n    DataLabel3D.prototype.chartReactTemplate = function (childElement, chart, point, series, labelIndex, redraw, location) {\n        var parentElement = document.getElementById(chart.element.id + '-series-' + series.index + '-data-label-collections');\n        if (parentElement) {\n            if (point.index === 0) {\n                chart.dataLabelCollections = []; // clear old datalabel bounds for react callback\n            }\n            chart.dataLabel3DModule.calculateTemplateLabelSize(parentElement, childElement, point, series, series.dataLabel, series.clipRect, redraw, location, true);\n        }\n    };\n    /**\n     * Creates a template element for rendering data labels associated with a specific data point in a 3D series.\n     *\n     * @param {HTMLElement} childElement - The child HTML element to contain the template content.\n     * @param {string | Function} content - The content or function for the data label template.\n     * @param {Chart3D} chart - The 3D chart containing the series and data point.\n     * @param {Chart3DPoint} point - The data point for which the template is created (optional).\n     * @param {Chart3DSeries} series - The 3D series to which the data point belongs (optional).\n     * @param {string} dataLabelId - The ID for the data label element (optional).\n     * @param {number} labelIndex - The index of the data label (optional).\n     * @param {Chart3DLocation} location - The location values for the data label (optional).\n     * @param {boolean} redraw - Indicates whether the template should be redrawn (optional).\n     * @returns {HTMLElement} The created template element.\n     */\n    DataLabel3D.prototype.createTemplate = function (childElement, content, chart, point, series, dataLabelId, labelIndex, location, redraw) {\n        var templateFn = getTemplateFunction(content);\n        var templateElement;\n        try {\n            var tempObject = { chart: chart, series: series, point: point };\n            var templateId = dataLabelId + '-template';\n            var elementData = templateFn ? templateFn(tempObject, chart, templateId, dataLabelId) : [];\n            if (elementData.length) {\n                templateElement = Array.prototype.slice.call(elementData);\n                var len = templateElement.length;\n                for (var i = 0; i < len; i++) {\n                    childElement.appendChild(templateElement[i]);\n                }\n            }\n            var reactCallback = void 0;\n            if (chart.getModuleName() === 'chart3d') {\n                reactCallback = (point && series) ? this.chartReactTemplate.bind(this, childElement, chart, point, series, labelIndex, redraw, location) : reactCallback;\n                if (chart.isReact) {\n                    chart.renderReactTemplates(reactCallback);\n                }\n            }\n        }\n        catch (e) {\n            return childElement;\n        }\n        return childElement;\n    };\n    /**\n     * Gets the name of the data label module.\n     *\n     * @returns {string} The name of the data label module.\n     */\n    DataLabel3D.prototype.getModuleName = function () {\n        // Returns the module name\n        return 'DataLabel3D';\n    };\n    /**\n     * To destroy the dataLabel for series.\n     *\n     * @returns {void}\n     * @private\n     */\n    DataLabel3D.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return DataLabel3D;\n}());\nexport { DataLabel3D };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}