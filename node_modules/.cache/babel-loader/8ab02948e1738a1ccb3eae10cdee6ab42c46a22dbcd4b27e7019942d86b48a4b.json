{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * Chart legend\n */\nimport { remove, Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\nimport { textWrap } from '../../common/utils/helper';\n/**\n * The `Legend` module is used to render the legend for the chart.\n */\nvar Legend = /** @class */function (_super) {\n  __extends(Legend, _super);\n  function Legend(chart) {\n    var _this = _super.call(this, chart) || this;\n    _this.library = _this;\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n   * Binding events for legend module.\n   *\n   * @returns {void}\n   */\n  Legend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n  };\n  /**\n   * UnBinding events for legend module.\n   *\n   * @returns {void}\n   */\n  Legend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n  };\n  /**\n   * To handle mosue move for legend module.\n   *\n   * @param {MouseEvent} e - The mouse event.\n   * @returns {void}\n   */\n  Legend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      this.move(e);\n      if (this.chart.highlightModule && (this.chart.highlightMode !== 'None' || this.chart.legendSettings.enableHighlight)) {\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_', this.legendID + '_g_'];\n        var targetId = e.target.id;\n        var index = void 0;\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n          var id = legendItemsId_1[_i];\n          if (targetId.indexOf(id) > -1) {\n            index = parseInt(targetId.split(id)[1], 10);\n            this.chart.highlightModule.legendSelection(this.chart, index, e.target, e.type);\n            break;\n          }\n        }\n        // this.click(e);\n      }\n    }\n  };\n  /**\n   * To handle mosue end for legend module.\n   *\n   * @param {MouseEvent} e - The mouse event.\n   * @returns {void}\n   */\n  Legend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Retrieves the legend options based on the visible series collection and chart.\n   *\n   * @param {Series[]} visibleSeriesCollection - The collection of visible series.\n   * @param {Chart} chart - The chart instance.\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n    this.legendCollections = [];\n    var seriesType;\n    var fill;\n    var dashArray;\n    var colors = [];\n    this.isRtlEnable = chart.enableRtl;\n    this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n    if (visibleSeriesCollection.length > 1) {\n      this.legend.mode = 'Series';\n    }\n    for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n      var series = visibleSeriesCollection_1[_i];\n      if (this.legend.mode === 'Series') {\n        if (series.category !== 'Indicator') {\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          dashArray = !series.marker.visible && seriesType.indexOf('Line') > -1 && seriesType.indexOf('Area') === -1 ? series.dashArray : '';\n          fill = series.interior;\n          this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible, seriesType, series.legendImageUrl ? series.legendImageUrl : series.type === 'Scatter' && series.marker.shape === 'Image' ? series.marker.imageUrl : '', series.marker.shape, series.marker.visible, null, null, dashArray));\n        }\n      } else if (this.legend.mode === 'Point') {\n        for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n          var points = _b[_a];\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n          this.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, series.type === 'Scatter' && series.marker.shape === 'Image' ? series.marker.imageUrl : '', series.marker.shape, series.marker.visible));\n        }\n      } else if (this.legend.mode === 'Range') {\n        for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n          var points = _d[_c];\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n          var legendLabel = 'Others';\n          if (colors.indexOf(fill) < 0) {\n            colors.push(fill);\n            if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n              for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                var rangeMap = _f[_e];\n                if (rangeMap.colors[0] === fill) {\n                  legendLabel = rangeMap.label;\n                }\n              }\n              this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, series.type === 'Scatter' && series.marker.shape === 'Image' ? series.marker.imageUrl : '', series.marker.shape, series.marker.visible));\n            }\n          }\n        }\n      } else {\n        if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n          var startLabel = chart.rangeColorSettings[0].start.toString();\n          var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n          this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n          this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n        }\n      }\n    }\n    if (this.isReverse && chart.legendSettings.mode !== 'Gradient') {\n      this.legendCollections.reverse();\n    }\n  };\n  /**\n   * Calculates the legend bounds based on the available size and legend settings.\n   *\n   * @param {Size} availableSize - The available size for the legend.\n   * @param {Rect} legendBounds - The current bounds of the legend.\n   * @param {LegendSettingsModel} legend - The legend settings.\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n    this.calculateLegendTitle(legend, legendBounds);\n    this.isTitle = legend.title ? true : false;\n    this.chartRowCount = 1;\n    this.rowHeights = [];\n    this.columnHeights = [];\n    this.pageHeights = [];\n    var padding = legend.padding;\n    var titlePosition = legend.titlePosition;\n    var extraHeight = 0;\n    var legendOption;\n    var extraWidth = 0;\n    var arrowWidth = this.arrowWidth;\n    var arrowHeight = this.arrowHeight;\n    var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n    var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n    titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n    legendBounds.height += extraHeight;\n    legendBounds.width += extraWidth;\n    var shapeWidth = legend.shapeWidth;\n    var shapePadding = legend.shapePadding;\n    var maximumWidth = 0;\n    var rowWidth = 0;\n    var legendWidth = 0;\n    var columnHeight = 0;\n    var columnCount = 0;\n    var rowCount = 0;\n    var titlePlusArrowSpace = 0;\n    var legendEventArgs;\n    var render = false;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\n    var maxColumn = legend.layout === 'Auto' && legend.maximumColumns > 0;\n    if (legend.fixedWidth) {\n      for (var i = 0; i < this.legendCollections.length; i++) {\n        var textWidth = shapeWidth + shapePadding + (!this.isVertical ? i === 0 ? padding : this.itemPadding : padding) + (legend.maximumLabelWidth ? legend.maximumLabelWidth : measureText(this.legendCollections[i].text, legend.textStyle, this.chart.themeStyle.legendLabelFont).width);\n        this.maxWidth = Math.max(this.maxWidth, textWidth);\n      }\n    }\n    for (var i = 0; i < this.legendCollections.length; i++) {\n      legendOption = this.legendCollections[i];\n      if (regSub.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSub);\n      }\n      if (regSup.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSup);\n      }\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        markerShape: legendOption.markerShape,\n        name: legendRender,\n        cancel: false\n      };\n      this.chart.trigger(legendRender, legendEventArgs);\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.text = legendEventArgs.text;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.markerShape = legendEventArgs.markerShape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\n      shapeWidth = legendOption.text ? legend.shapeWidth : 0;\n      shapePadding = legendOption.text ? legend.shapePadding : 0;\n      if (legendOption.render && legendOption.text) {\n        render = true;\n        legendWidth = legend.fixedWidth ? this.maxWidth : shapeWidth + shapePadding + (legend.maximumLabelWidth ? legend.maximumLabelWidth : legendOption.textSize.width) + (!this.isVertical || legend.layout === 'Horizontal' ? i === 0 || columnCount === 1 && rowCount > 0 && legend.layout === 'Horizontal' ? padding : this.itemPadding : padding);\n        rowWidth = rowWidth + legendWidth;\n        if (!legend.enablePages && !this.isVertical) {\n          titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n          titlePlusArrowSpace += arrowWidth;\n        }\n        this.getLegendHeight(legendOption, legend, legendBounds, rowWidth, this.maxItemHeight, padding);\n        if (maxColumn ? columnCount === legend.maximumColumns : legend.layout === 'Vertical' || legendBounds.width < padding + rowWidth + titlePlusArrowSpace || this.isVertical && legend.layout === 'Auto') {\n          maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - (this.isVertical && this.legend.layout === 'Auto' ? 0 : legendWidth));\n          if (rowCount === 0 && legendWidth !== rowWidth) {\n            rowCount = 1;\n          }\n          rowWidth = this.isVertical && this.legend.layout === 'Auto' ? 0 : legendWidth;\n          rowCount++;\n          columnCount = 0;\n          columnHeight = verticalArrowSpace;\n          //columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + titleSpace + verticalArrowSpace;\n        }\n        var len = rowCount > 0 ? rowCount - 1 : 0;\n        this.rowHeights[len] = Math.max(this.rowHeights[len] ? this.rowHeights[len] : 0, Math.max(legendOption.textSize.height, legend.shapeHeight));\n        // this.maxItemHeight = Math.max(this.maxItemHeight, legendOption.textSize.height);\n        this.columnHeights[columnCount] = (this.columnHeights[columnCount] ? this.columnHeights[columnCount] : 0) + Math.max(legendOption.textSize.height, legend.shapeHeight) + (this.isVertical || rowCount > 0 && this.legend.itemPadding ? i === 0 ? padding : this.itemPadding : padding);\n        columnCount++;\n      }\n    }\n    columnHeight = Math.max.apply(null, this.columnHeights) + padding + titleSpace;\n    columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleSpace);\n    if (legend.layout === 'Horizontal') {\n      columnHeight = this.maxItemHeight + padding * 2 + titleSpace + this.pageButtonSize + legend.border.width;\n    }\n    this.isPaging = (legendBounds.height < columnHeight || legend.layout === 'Horizontal' && this.rowHeights.length > 1) && !maxColumn;\n    if (this.isPaging && !legend.enablePages) {\n      if (!this.isVertical) {\n        columnHeight = this.maxItemHeight + padding + padding + (titlePosition === 'Top' ? titleSpace : 0);\n      }\n    }\n    this.totalPages = rowCount;\n    if (maxColumn && this.maxWidth && legend.fixedWidth) {\n      rowWidth = this.maxWidth * legend.maximumColumns;\n      this.isPaging = false;\n    }\n    if ((!this.isPaging || this.legend.layout !== 'Auto') && !this.isVertical) {\n      rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n    }\n    if (render) {\n      this.setBounds(Math.max(rowWidth + padding, maximumWidth), columnHeight, legend, legendBounds);\n    } else {\n      this.setBounds(0, 0, legend, legendBounds);\n    }\n  };\n  /**\n   * Calculates the height of the legend based on the legend options, settings, and available space.\n   *\n   * @param {LegendOptions} legendOption - The legend options.\n   * @param {LegendSettingsModel} legend - The legend settings.\n   * @param {Rect} legendBounds - The current bounds of the legend.\n   * @param {number} rowWidth - The width of the legend rows.\n   * @param {number} legendHeight - The current height of the legend.\n   * @param {number} padding - The padding around the legend items.\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.getLegendHeight = function (legendOption, legend, legendBounds, rowWidth, legendHeight, padding) {\n    var legendWidth = legendOption.textSize.width;\n    var textPadding = legend.shapePadding + padding * 2 + legend.shapeWidth;\n    switch (legend.textWrap) {\n      case 'Wrap':\n      case 'AnyWhere':\n        if (legendWidth > legend.maximumLabelWidth || legendWidth + rowWidth > legendBounds.width) {\n          legendOption.textCollection = textWrap(legendOption.text, legend.maximumLabelWidth ? Math.min(legend.maximumLabelWidth, legendBounds.width - textPadding) : legendBounds.width - textPadding, legend.textStyle, this.chart.enableRtl, null, null, this.chart.themeStyle.legendLabelFont);\n        } else {\n          legendOption.textCollection.push(legendOption.text);\n        }\n        legendOption.textSize.height = legendHeight * legendOption.textCollection.length;\n        break;\n    }\n  };\n  /**\n   * Calculates the rendering point for the legend item based on various parameters.\n   *\n   * @param {LegendOptions} legendOption - The legend options.\n   * @param {ChartLocation} start - The starting location for the legend.\n   * @param {number} textPadding - The padding around the legend text.\n   * @param {LegendOptions} previousLegend - The options of the previous legend item.\n   * @param {Rect} rect - The bounding rectangle for the legend.\n   * @param {number} count - The count of legend items.\n   * @param {number} firstLegend - The index of the first legend item.\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, previousLegend, rect, count, firstLegend) {\n    var padding = this.legend.padding;\n    var textWidth = this.legend.fixedWidth ? this.maxWidth : textPadding + (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : previousLegend.textSize.width);\n    var previousBound = previousLegend.location.x + (!this.isRtlEnable ? textWidth : -textWidth);\n    if (this.legend.layout === 'Auto' && this.legend.maximumColumns > 0 ? count % this.legend.maximumColumns === 0 : this.legend.layout === 'Vertical' || this.isWithinBounds(previousBound, (this.legend.maximumLabelWidth ? this.legend.maximumLabelWidth : legendOption.textSize.width) + textPadding - this.itemPadding, rect) || this.isVertical && this.legend.layout === 'Auto') {\n      legendOption.location.x = start.x;\n      if (count !== firstLegend) {\n        this.chartRowCount++;\n      }\n      legendOption.location.y = count === firstLegend ? previousLegend.location.y : previousLegend.location.y + (this.isVertical && this.legend.layout !== 'Horizontal' && !(this.legend.maximumColumns > 0) ? Math.max(previousLegend.textSize.height, this.legend.shapeHeight) : this.rowHeights[this.chartRowCount - 2]) + (this.isVertical || this.chartRowCount > 1 && this.legend.itemPadding ? this.itemPadding : padding);\n    } else {\n      legendOption.location.x = count === firstLegend ? previousLegend.location.x : previousBound;\n      legendOption.location.y = previousLegend.location.y;\n    }\n    var availwidth = !this.isRtlEnable ? this.legendBounds.x + this.legendBounds.width - (legendOption.location.x + textPadding - this.itemPadding - this.legend.shapeWidth / 2) : legendOption.location.x - textPadding + this.itemPadding + this.legend.shapeWidth / 2 - this.legendBounds.x;\n    if (!this.isVertical && this.isPaging && !this.legend.enablePages) {\n      availwidth = this.legendBounds.width - legendOption.location.x - this.fivePixel;\n    }\n    availwidth = this.legend.maximumLabelWidth ? Math.min(this.legend.maximumLabelWidth, availwidth) : availwidth;\n    if (this.legend.textOverflow === 'Ellipsis' && this.legend.textWrap === 'Normal') {\n      legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendLabelFont);\n    }\n  };\n  Legend.prototype.isWithinBounds = function (previousBound, textWidth, rect) {\n    if (!this.isRtlEnable) {\n      return previousBound + textWidth > rect.x + rect.width + this.legend.shapeWidth / 2;\n    } else {\n      return previousBound - textWidth < rect.x - this.legend.shapeWidth / 2;\n    }\n  };\n  /**\n   * Handles the click event for a legend item.\n   *\n   * @param {number} index - The index of the clicked legend item.\n   * @param {Event | PointerEvent} event - The click event.\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.LegendClick = function (index, event) {\n    var chart = this.chart;\n    var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n    var legendIndex = !this.isReverse ? index : this.legendCollections.length - 1 - index;\n    var series = chart.visibleSeries[seriesIndex];\n    var legend = this.legendCollections[legendIndex];\n    var changeDetection = 'isProtectedOnChange';\n    if (chart.legendSettings.mode === 'Series') {\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: series.points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      series.legendShape = legendClickArgs.legendShape;\n      if (!legendClickArgs.cancel) {\n        if (series.fill !== null) {\n          chart.visibleSeries[index].interior = series.fill;\n        }\n        if (chart.legendSettings.toggleVisibility) {\n          series.chart[changeDetection] = true;\n          if (series.category === 'TrendLine') {\n            if (!chart.series[series.sourceIndex].trendlines[series.index].visible && chart.series[series.sourceIndex].visible) {\n              chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n            } else {\n              chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n            }\n          } else {\n            this.changeSeriesVisiblity(series, series.visible);\n          }\n          legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible;\n          this.refreshLegendToggle(chart, series);\n          if (chart.highlightModule && chart.legendSettings.enableHighlight) {\n            chart.highlightModule.legendSelection(chart, index, event.target, 'mousemove');\n          }\n        } else if (chart.highlightModule) {\n          chart.highlightModule.legendSelection(chart, index, event.target, event.type);\n        } else if (chart.selectionModule) {\n          chart.selectionModule.legendSelection(chart, index, event.target, event.type);\n        }\n        series.chart[changeDetection] = false;\n      }\n    } else if (chart.legendSettings.mode === 'Point') {\n      var point = series.points[index];\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: [point],\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      if (chart.legendSettings.toggleVisibility && !legendClickArgs.cancel) {\n        point.visible = !point.visible;\n        var legendOption = this.legendCollections[index];\n        legendOption.visible = point.visible;\n        this.refreshLegendToggle(chart, series);\n      }\n    } else if (chart.legendSettings.mode === 'Range') {\n      var points = [];\n      var legendOption = this.legendCollections[index];\n      for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n        var point = _a[_i];\n        if (legendOption.fill === (point.interior || series.interior)) {\n          points.push(point);\n        }\n      }\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      if (chart.legendSettings.toggleVisibility && !legendClickArgs.cancel) {\n        legendOption.visible = !legendOption.visible;\n        for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n          var point = points_1[_b];\n          point.visible = !point.visible;\n        }\n        this.refreshLegendToggle(chart, series);\n      }\n    }\n  };\n  Legend.prototype.refreshLegendToggle = function (chart, series) {\n    var selectedDataIndexes = [];\n    if (chart.selectionModule) {\n      selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n    }\n    if (chart.svgObject.childNodes.length > 0 && !chart.enableAnimation && !chart.enableCanvas) {\n      while (chart.svgObject.lastChild) {\n        chart.svgObject.removeChild(chart.svgObject.lastChild);\n      }\n      remove(chart.svgObject);\n    }\n    chart.animateSeries = false;\n    chart.redraw = chart.enableAnimation;\n    series.isLegendClicked = true;\n    chart.rotatedDataLabelCollections = [];\n    removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n    blazorTemplatesReset(chart);\n    this.redrawSeriesElements(series, chart);\n    chart.removeSvg();\n    chart.refreshAxis();\n    series.refreshAxisLabel();\n    this.refreshSeries(chart.visibleSeries);\n    for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n      var series_1 = _a[_i];\n      if (!isNullOrUndefined(series_1)) {\n        chart.markerRender.removeHighlightedMarker(series_1, null, true);\n      }\n    }\n    chart.refreshBound();\n    chart.trigger('loaded', {\n      chart: chart\n    });\n    if (selectedDataIndexes.length > 0) {\n      chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n      chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n    }\n    if (!chart.enableCanvas && chart.highlightModule && (chart.highlightMode !== 'None' || chart.legendSettings.enableHighlight)) {\n      chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n    }\n    chart.redraw = false;\n    series.isLegendClicked = false;\n  };\n  Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n    series.visible = !visibility;\n    if (this.isSecondaryAxis(series.xAxis)) {\n      series.xAxis.internalVisibility = series.xAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n    if (this.isSecondaryAxis(series.yAxis) || series.category === 'Pareto' && series.type === 'Line') {\n      series.yAxis.internalVisibility = series.yAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n    if (series.trendlines.length && series.visible) {\n      series.trendlines.forEach(function (trendline) {\n        trendline.visible = true;\n      });\n    }\n  };\n  Legend.prototype.isSecondaryAxis = function (axis) {\n    return this.chart.axes.indexOf(axis) > -1;\n  };\n  Legend.prototype.redrawSeriesElements = function (series, chart) {\n    if (!chart.redraw) {\n      return null;\n    }\n    removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections');\n  };\n  Legend.prototype.refreshSeries = function (seriesCollection) {\n    for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n      var series = seriesCollection_1[_i];\n      if (series.type.indexOf('Spline') > -1) {\n        var isArea = series.type.indexOf('Area') > -1 || series.drawType.indexOf('Area') > -1;\n        var isRange = series.type.indexOf('Range') > -1;\n        this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(series);\n      }\n      if (series.visible) {\n        series.position = undefined;\n      }\n    }\n  };\n  /**\n   * Handles the click event for showing tooltip on trimmed text in legend.\n   *\n   * @param {Event | PointerEvent} event - The click event.\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.click = function (event) {\n    var _this = this;\n    if (!this.chart.legendSettings.visible) {\n      return;\n    }\n    var pageX = this.chart.mouseX;\n    var pageY = this.chart.mouseY;\n    var legendRegion = [];\n    var targetId = event.target.id.indexOf('_chart_legend_g_') > -1 ? event.target.firstChild['id'] : event.target.id;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_'];\n    var seriesIndex;\n    for (var _i = 0, legendItemsId_2 = legendItemsId; _i < legendItemsId_2.length; _i++) {\n      var id = legendItemsId_2[_i];\n      if (targetId.indexOf(id) > -1) {\n        seriesIndex = parseInt(targetId.split(id)[1], 10);\n        this.LegendClick(seriesIndex, event);\n        break;\n      }\n    }\n    if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    } else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    }\n    if (this.chart.enableCanvas && this.pagingRegions.length) {\n      this.checkWithinBounds(pageX, pageY);\n    }\n    legendRegion = this.legendRegions.filter(function (region) {\n      return withInBounds(pageX, pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(_this.chart.enableCanvas, null, 1, 2) : 0), region.rect);\n    });\n    if (legendRegion.length && this.chart.enableCanvas) {\n      this.LegendClick(legendRegion[0].index, event);\n    }\n  };\n  /**\n   * Checks whether the provided coordinates are within the bounds.\n   *\n   * @param {number} pageX - The x-coordinate of the mouse pointer.\n   * @param {number} pageY - The y-coordinate of the mouse pointer.\n   * @returns {void}\n   * @protected\n   */\n  Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n    var cRender = this.chart.renderer;\n    var bounds = this.legendBounds;\n    var borderWidth = this.chart.legendSettings.border.width;\n    var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    canvasRect.x = canvasRect.x - borderWidth / 2;\n    canvasRect.y = canvasRect.y - borderWidth / 2;\n    canvasRect.width = canvasRect.width + borderWidth;\n    canvasRect.height = canvasRect.height + borderWidth;\n    if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n      // pageDown calculations are performing here\n      if (!this.isRtlEnable) {\n        this.canvasPageDown(cRender, canvasRect, bounds);\n      } else {\n        this.canvasPageUp(cRender, canvasRect, bounds);\n      }\n      return null;\n    }\n    if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n      // pageUp calculations are performing here\n      if (!this.isRtlEnable) {\n        this.canvasPageUp(cRender, canvasRect, bounds);\n      } else {\n        this.canvasPageDown(cRender, canvasRect, bounds);\n      }\n      return null;\n    }\n  };\n  Legend.prototype.canvasPageDown = function (cRender, canvasRect, bounds) {\n    if (--this.currentPageNumber > 0) {\n      this.legendRegions = [];\n      cRender.clearRect(canvasRect);\n      cRender.canvasClip(new RectOption('legendClipPath', 'transparent', {\n        width: 0,\n        color: ''\n      }, null, canvasRect));\n      this.renderLegend(this.chart, this.legend, bounds);\n      cRender.canvasRestore();\n    } else {\n      ++this.currentPageNumber;\n    }\n  };\n  Legend.prototype.canvasPageUp = function (cRender, canvasRect, bounds) {\n    if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n      this.legendRegions = [];\n      cRender.clearRect(canvasRect);\n      cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', {\n        width: 0,\n        color: ''\n      }, null, canvasRect));\n      this.renderLegend(this.chart, this.legend, bounds);\n      cRender.canvasRestore();\n    } else {\n      --this.currentPageNumber;\n    }\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name.\n   */\n  Legend.prototype.getModuleName = function () {\n    return 'Legend';\n  };\n  /**\n   * To destroy the Legend.\n   *\n   * @returns {void}\n   * @private\n   */\n  Legend.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return Legend;\n}(BaseLegend);\nexport { Legend };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","remove","Browser","extend","isNullOrUndefined","LegendOptions","BaseLegend","textTrim","removeElement","RectOption","withInBounds","blazorTemplatesReset","getUnicodeText","measureText","Rect","getElement","legendRender","legendClick","regSub","regSup","textWrap","Legend","_super","chart","_this","call","library","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","click","touchEndEvent","mouseEnd","removeEventListener","off","e","legendSettings","visible","isTouch","move","highlightModule","highlightMode","enableHighlight","legendItemsId","legendID","targetId","target","id","index","_i","legendItemsId_1","length","indexOf","parseInt","split","legendSelection","type","getLegendOptions","visibleSeriesCollection","legendCollections","seriesType","fill","dashArray","colors","isRtlEnable","enableRtl","isReverse","reverse","legend","mode","visibleSeriesCollection_1","series","category","chartAreaType","drawType","marker","interior","push","name","legendShape","sourceIndex","trendlines","legendImageUrl","shape","imageUrl","_a","_b","points","x","toString","_c","_d","legendLabel","rangeColorSettings","_e","_f","rangeMap","label","startLabel","start","endLabel","end","getLegendBounds","availableSize","legendBounds","calculateLegendTitle","isTitle","title","chartRowCount","rowHeights","columnHeights","pageHeights","padding","titlePosition","extraHeight","legendOption","extraWidth","arrowWidth","arrowHeight","verticalArrowSpace","isVertical","enablePages","titleSpace","legendTitleSize","height","fivePixel","width","shapeWidth","shapePadding","maximumWidth","rowWidth","legendWidth","columnHeight","columnCount","rowCount","titlePlusArrowSpace","legendEventArgs","render","maxItemHeight","Math","max","textStyle","themeStyle","legendLabelFont","shapeHeight","maxColumn","layout","maximumColumns","fixedWidth","i","textWidth","itemPadding","maximumLabelWidth","text","maxWidth","test","markerShape","cancel","trigger","textSize","getLegendHeight","len","apply","pageButtonSize","border","isPaging","totalPages","setBounds","legendHeight","textPadding","textCollection","min","getRenderPoint","previousLegend","rect","count","firstLegend","previousBound","location","isWithinBounds","y","availwidth","textOverflow","toFixed","LegendClick","event","seriesIndex","legendIndex","visibleSeries","changeDetection","legendClickArgs","legendText","isBlazor","toggleVisibility","changeSeriesVisiblity","refreshLegendToggle","selectionModule","point","points_1","selectedDataIndexes","svgObject","childNodes","enableAnimation","enableCanvas","lastChild","removeChild","animateSeries","redraw","isLegendClicked","rotatedDataLabelCollections","element","querySelectorAll","redrawSeriesElements","removeSvg","refreshAxis","refreshAxisLabel","refreshSeries","series_1","markerRender","removeHighlightedMarker","refreshBound","redrawSelection","selectionMode","visibility","isSecondaryAxis","xAxis","internalVisibility","some","value","yAxis","forEach","trendline","axis","axes","undefined","seriesCollection","seriesCollection_1","isArea","isRange","findSplinePoint","position","pageX","mouseX","pageY","mouseY","legendRegion","firstChild","legendItemsId_2","changePage","pagingRegions","checkWithinBounds","legendRegions","filter","region","currentPageNumber","translatePage","cRender","renderer","bounds","borderWidth","canvasRect","canvasPageDown","canvasPageUp","clearRect","canvasClip","color","renderLegend","canvasRestore","totalNoOfPages","getModuleName","destroy"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/chart/legend/legend.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Chart legend\n */\nimport { remove, Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\nimport { textWrap } from '../../common/utils/helper';\n/**\n * The `Legend` module is used to render the legend for the chart.\n */\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * To handle mosue move for legend module.\n     *\n     * @param {MouseEvent} e - The mouse event.\n     * @returns {void}\n     */\n    Legend.prototype.mouseMove = function (e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            this.move(e);\n            if (this.chart.highlightModule && (this.chart.highlightMode !== 'None' || this.chart.legendSettings.enableHighlight)) {\n                var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n                    this.legendID + '_shape_', this.legendID + '_g_'];\n                var targetId = e.target.id;\n                var index = void 0;\n                for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                    var id = legendItemsId_1[_i];\n                    if (targetId.indexOf(id) > -1) {\n                        index = parseInt(targetId.split(id)[1], 10);\n                        this.chart.highlightModule.legendSelection(this.chart, index, e.target, e.type);\n                        break;\n                    }\n                }\n                // this.click(e);\n            }\n        }\n    };\n    /**\n     * To handle mosue end for legend module.\n     *\n     * @param {MouseEvent} e - The mouse event.\n     * @returns {void}\n     */\n    Legend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Retrieves the legend options based on the visible series collection and chart.\n     *\n     * @param {Series[]} visibleSeriesCollection - The collection of visible series.\n     * @param {Chart} chart - The chart instance.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n        this.legendCollections = [];\n        var seriesType;\n        var fill;\n        var dashArray;\n        var colors = [];\n        this.isRtlEnable = chart.enableRtl;\n        this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n        if (visibleSeriesCollection.length > 1) {\n            this.legend.mode = 'Series';\n        }\n        for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n            var series = visibleSeriesCollection_1[_i];\n            if (this.legend.mode === 'Series') {\n                if (series.category !== 'Indicator') {\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    dashArray = !series.marker.visible && (seriesType.indexOf('Line') > -1 && seriesType.indexOf('Area') === -1) ? series.dashArray : '';\n                    fill = series.interior;\n                    this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, (series.category === 'TrendLine' ?\n                        this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible), seriesType, series.legendImageUrl ? series.legendImageUrl : (series.type === 'Scatter' && series.marker.shape === 'Image' ?\n                        series.marker.imageUrl : ''), series.marker.shape, series.marker.visible, null, null, dashArray));\n                }\n            }\n            else if (this.legend.mode === 'Point') {\n                for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n                    var points = _b[_a];\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    this.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, (series.category === 'TrendLine' ?\n                        this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, (series.type === 'Scatter' && series.marker.shape === 'Image') ? series.marker.imageUrl : '', series.marker.shape, series.marker.visible));\n                }\n            }\n            else if (this.legend.mode === 'Range') {\n                for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n                    var points = _d[_c];\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    var legendLabel = 'Others';\n                    if (colors.indexOf(fill) < 0) {\n                        colors.push(fill);\n                        if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n                            for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                                var rangeMap = _f[_e];\n                                if (rangeMap.colors[0] === fill) {\n                                    legendLabel = rangeMap.label;\n                                }\n                            }\n                            this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, (series.category === 'TrendLine' ?\n                                this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, (series.type === 'Scatter' && series.marker.shape === 'Image') ? series.marker.imageUrl : '', series.marker.shape, series.marker.visible));\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n                    var startLabel = chart.rangeColorSettings[0].start.toString();\n                    var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n                    this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                    this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                }\n            }\n        }\n        if (this.isReverse && chart.legendSettings.mode !== 'Gradient') {\n            this.legendCollections.reverse();\n        }\n    };\n    /**\n     * Calculates the legend bounds based on the available size and legend settings.\n     *\n     * @param {Size} availableSize - The available size for the legend.\n     * @param {Rect} legendBounds - The current bounds of the legend.\n     * @param {LegendSettingsModel} legend - The legend settings.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        this.calculateLegendTitle(legend, legendBounds);\n        this.isTitle = legend.title ? true : false;\n        this.chartRowCount = 1;\n        this.rowHeights = [];\n        this.columnHeights = [];\n        this.pageHeights = [];\n        var padding = legend.padding;\n        var titlePosition = legend.titlePosition;\n        var extraHeight = 0;\n        var legendOption;\n        var extraWidth = 0;\n        var arrowWidth = this.arrowWidth;\n        var arrowHeight = this.arrowHeight;\n        var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n        var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n        titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.height += (extraHeight);\n        legendBounds.width += extraWidth;\n        var shapeWidth = legend.shapeWidth;\n        var shapePadding = legend.shapePadding;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var legendWidth = 0;\n        var columnHeight = 0;\n        var columnCount = 0;\n        var rowCount = 0;\n        var titlePlusArrowSpace = 0;\n        var legendEventArgs;\n        var render = false;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\n        var maxColumn = legend.layout === 'Auto' && legend.maximumColumns > 0;\n        if (legend.fixedWidth) {\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                var textWidth = shapeWidth + shapePadding + (!this.isVertical ? (i === 0) ? padding : this.itemPadding\n                    : padding) + (legend.maximumLabelWidth ? legend.maximumLabelWidth :\n                    measureText(this.legendCollections[i].text, legend.textStyle, this.chart.themeStyle.legendLabelFont).width);\n                this.maxWidth = Math.max(this.maxWidth, textWidth);\n            }\n        }\n        for (var i = 0; i < this.legendCollections.length; i++) {\n            legendOption = this.legendCollections[i];\n            if (regSub.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSub);\n            }\n            if (regSup.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSup);\n            }\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.markerShape = legendEventArgs.markerShape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\n            shapeWidth = legendOption.text ? legend.shapeWidth : 0;\n            shapePadding = legendOption.text ? legend.shapePadding : 0;\n            if (legendOption.render && legendOption.text) {\n                render = true;\n                legendWidth = legend.fixedWidth ? this.maxWidth : shapeWidth + shapePadding +\n                    (legend.maximumLabelWidth ? legend.maximumLabelWidth : legendOption.textSize.width) +\n                    ((!this.isVertical || legend.layout === 'Horizontal') ? (i === 0 || (columnCount === 1 && rowCount > 0 && legend.layout === 'Horizontal')) ? padding : this.itemPadding : padding);\n                rowWidth = rowWidth + legendWidth;\n                if (!legend.enablePages && !this.isVertical) {\n                    titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n                    titlePlusArrowSpace += arrowWidth;\n                }\n                this.getLegendHeight(legendOption, legend, legendBounds, rowWidth, this.maxItemHeight, padding);\n                if (maxColumn ? columnCount === legend.maximumColumns : legend.layout === 'Vertical' || (legendBounds.width < (padding + rowWidth + titlePlusArrowSpace)) || (this.isVertical && legend.layout === 'Auto')) {\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace - (this.isVertical &&\n                        this.legend.layout === 'Auto' ? 0 : legendWidth)));\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                        rowCount = 1;\n                    }\n                    rowWidth = this.isVertical && this.legend.layout === 'Auto' ? 0 : legendWidth;\n                    rowCount++;\n                    columnCount = 0;\n                    columnHeight = verticalArrowSpace;\n                    //columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + titleSpace + verticalArrowSpace;\n                }\n                var len = (rowCount > 0 ? (rowCount - 1) : 0);\n                this.rowHeights[len] = Math.max((this.rowHeights[len] ?\n                    this.rowHeights[len] : 0), Math.max(legendOption.textSize.height, legend.shapeHeight));\n                // this.maxItemHeight = Math.max(this.maxItemHeight, legendOption.textSize.height);\n                this.columnHeights[columnCount] = (this.columnHeights[columnCount] ?\n                    this.columnHeights[columnCount] : 0) + Math.max(legendOption.textSize.height, legend.shapeHeight) +\n                    ((this.isVertical || (rowCount > 0 && this.legend.itemPadding)) ? (i === 0) ? padding : this.itemPadding : padding);\n                columnCount++;\n            }\n        }\n        columnHeight = Math.max.apply(null, this.columnHeights) + padding + titleSpace;\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleSpace);\n        if (legend.layout === 'Horizontal') {\n            columnHeight = this.maxItemHeight + (padding * 2) + titleSpace + this.pageButtonSize + legend.border.width;\n        }\n        this.isPaging = (legendBounds.height < columnHeight || (legend.layout === 'Horizontal' && this.rowHeights.length > 1)) && !maxColumn;\n        if (this.isPaging && !legend.enablePages) {\n            if (!this.isVertical) {\n                columnHeight = (this.maxItemHeight + padding) + padding + (titlePosition === 'Top' ? titleSpace : 0);\n            }\n        }\n        this.totalPages = rowCount;\n        if (maxColumn && this.maxWidth && legend.fixedWidth) {\n            rowWidth = this.maxWidth * legend.maximumColumns;\n            this.isPaging = false;\n        }\n        if ((!this.isPaging || this.legend.layout !== 'Auto') && !this.isVertical) {\n            rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\n        }\n        if (render) {\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * Calculates the height of the legend based on the legend options, settings, and available space.\n     *\n     * @param {LegendOptions} legendOption - The legend options.\n     * @param {LegendSettingsModel} legend - The legend settings.\n     * @param {Rect} legendBounds - The current bounds of the legend.\n     * @param {number} rowWidth - The width of the legend rows.\n     * @param {number} legendHeight - The current height of the legend.\n     * @param {number} padding - The padding around the legend items.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendHeight = function (legendOption, legend, legendBounds, rowWidth, legendHeight, padding) {\n        var legendWidth = legendOption.textSize.width;\n        var textPadding = legend.shapePadding + (padding * 2) + legend.shapeWidth;\n        switch (legend.textWrap) {\n            case 'Wrap':\n            case 'AnyWhere':\n                if (legendWidth > legend.maximumLabelWidth || legendWidth + rowWidth > legendBounds.width) {\n                    legendOption.textCollection = textWrap(legendOption.text, (legend.maximumLabelWidth ? Math.min(legend.maximumLabelWidth, (legendBounds.width - textPadding)) :\n                        (legendBounds.width - textPadding)), legend.textStyle, this.chart.enableRtl, null, null, this.chart.themeStyle.legendLabelFont);\n                }\n                else {\n                    legendOption.textCollection.push(legendOption.text);\n                }\n                legendOption.textSize.height = (legendHeight * legendOption.textCollection.length);\n                break;\n        }\n    };\n    /**\n     * Calculates the rendering point for the legend item based on various parameters.\n     *\n     * @param {LegendOptions} legendOption - The legend options.\n     * @param {ChartLocation} start - The starting location for the legend.\n     * @param {number} textPadding - The padding around the legend text.\n     * @param {LegendOptions} previousLegend - The options of the previous legend item.\n     * @param {Rect} rect - The bounding rectangle for the legend.\n     * @param {number} count - The count of legend items.\n     * @param {number} firstLegend - The index of the first legend item.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, previousLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        var textWidth = this.legend.fixedWidth ? this.maxWidth : textPadding + (this.legend.maximumLabelWidth ?\n            this.legend.maximumLabelWidth : previousLegend.textSize.width);\n        var previousBound = previousLegend.location.x + ((!this.isRtlEnable) ? textWidth : -textWidth);\n        if (this.legend.layout === 'Auto' && this.legend.maximumColumns > 0 ? count % this.legend.maximumColumns === 0 : this.legend.layout === 'Vertical' || this.isWithinBounds(previousBound, (this.legend.maximumLabelWidth ?\n            this.legend.maximumLabelWidth : legendOption.textSize.width) + textPadding - this.itemPadding, rect) || (this.isVertical && this.legend.layout === 'Auto')) {\n            legendOption.location.x = start.x;\n            if (count !== firstLegend) {\n                this.chartRowCount++;\n            }\n            legendOption.location.y = (count === firstLegend) ? previousLegend.location.y :\n                previousLegend.location.y + (this.isVertical && this.legend.layout !== 'Horizontal' && !(this.legend.maximumColumns > 0) ? Math.max(previousLegend.textSize.height, this.legend.shapeHeight) :\n                    this.rowHeights[(this.chartRowCount - 2)]) + ((this.isVertical || (this.chartRowCount > 1 &&\n                    this.legend.itemPadding)) ? this.itemPadding : padding);\n        }\n        else {\n            legendOption.location.x = (count === firstLegend) ? previousLegend.location.x : previousBound;\n            legendOption.location.y = previousLegend.location.y;\n        }\n        var availwidth = (!this.isRtlEnable) ? (this.legendBounds.x + this.legendBounds.width) - (legendOption.location.x +\n            textPadding - this.itemPadding - this.legend.shapeWidth / 2) : (legendOption.location.x - textPadding + this.itemPadding +\n            (this.legend.shapeWidth / 2)) - this.legendBounds.x;\n        if (!this.isVertical && this.isPaging && !this.legend.enablePages) {\n            availwidth = this.legendBounds.width - legendOption.location.x - this.fivePixel;\n        }\n        availwidth = this.legend.maximumLabelWidth ? Math.min(this.legend.maximumLabelWidth, availwidth) : availwidth;\n        if (this.legend.textOverflow === 'Ellipsis' && this.legend.textWrap === 'Normal') {\n            legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendLabelFont);\n        }\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, rect) {\n        if (!this.isRtlEnable) {\n            return (previousBound + textWidth) > (rect.x + rect.width + (this.legend.shapeWidth / 2));\n        }\n        else {\n            return (previousBound - textWidth) < (rect.x - (this.legend.shapeWidth / 2));\n        }\n    };\n    /**\n     * Handles the click event for a legend item.\n     *\n     * @param {number} index - The index of the clicked legend item.\n     * @param {Event | PointerEvent} event - The click event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.LegendClick = function (index, event) {\n        var chart = this.chart;\n        var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n        var legendIndex = !this.isReverse ? index : (this.legendCollections.length - 1) - index;\n        var series = chart.visibleSeries[seriesIndex];\n        var legend = this.legendCollections[legendIndex];\n        var changeDetection = 'isProtectedOnChange';\n        if (chart.legendSettings.mode === 'Series') {\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: series.points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            series.legendShape = legendClickArgs.legendShape;\n            if (!legendClickArgs.cancel) {\n                if (series.fill !== null) {\n                    chart.visibleSeries[index].interior = series.fill;\n                }\n                if (chart.legendSettings.toggleVisibility) {\n                    series.chart[changeDetection] = true;\n                    if (series.category === 'TrendLine') {\n                        if (!chart.series[series.sourceIndex].trendlines[series.index].visible &&\n                            chart.series[series.sourceIndex].visible) {\n                            chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n                        }\n                        else {\n                            chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n                        }\n                    }\n                    else {\n                        this.changeSeriesVisiblity(series, series.visible);\n                    }\n                    legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible :\n                        (series.visible);\n                    this.refreshLegendToggle(chart, series);\n                    if (chart.highlightModule && chart.legendSettings.enableHighlight) {\n                        chart.highlightModule.legendSelection(chart, index, event.target, 'mousemove');\n                    }\n                }\n                else if (chart.highlightModule) {\n                    chart.highlightModule.legendSelection(chart, index, event.target, event.type);\n                }\n                else if (chart.selectionModule) {\n                    chart.selectionModule.legendSelection(chart, index, event.target, event.type);\n                }\n                series.chart[changeDetection] = false;\n            }\n        }\n        else if (chart.legendSettings.mode === 'Point') {\n            var point = series.points[index];\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: [point], name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility && !legendClickArgs.cancel) {\n                point.visible = !point.visible;\n                var legendOption = this.legendCollections[index];\n                legendOption.visible = point.visible;\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n        else if (chart.legendSettings.mode === 'Range') {\n            var points = [];\n            var legendOption = this.legendCollections[index];\n            for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                var point = _a[_i];\n                if (legendOption.fill === (point.interior || series.interior)) {\n                    points.push(point);\n                }\n            }\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility && !legendClickArgs.cancel) {\n                legendOption.visible = !legendOption.visible;\n                for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n                    var point = points_1[_b];\n                    point.visible = !point.visible;\n                }\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n    };\n    Legend.prototype.refreshLegendToggle = function (chart, series) {\n        var selectedDataIndexes = [];\n        if (chart.selectionModule) {\n            selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n        }\n        if ((chart.svgObject.childNodes.length > 0) && !chart.enableAnimation && !chart.enableCanvas) {\n            while (chart.svgObject.lastChild) {\n                chart.svgObject.removeChild(chart.svgObject.lastChild);\n            }\n            remove(chart.svgObject);\n        }\n        chart.animateSeries = false;\n        chart.redraw = chart.enableAnimation;\n        series.isLegendClicked = true;\n        chart.rotatedDataLabelCollections = [];\n        removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n        blazorTemplatesReset(chart);\n        this.redrawSeriesElements(series, chart);\n        chart.removeSvg();\n        chart.refreshAxis();\n        series.refreshAxisLabel();\n        this.refreshSeries(chart.visibleSeries);\n        for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n            var series_1 = _a[_i];\n            if (!isNullOrUndefined(series_1)) {\n                chart.markerRender.removeHighlightedMarker(series_1, null, true);\n            }\n        }\n        chart.refreshBound();\n        chart.trigger('loaded', { chart: chart });\n        if (selectedDataIndexes.length > 0) {\n            chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n            chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n        }\n        if (!chart.enableCanvas && chart.highlightModule && (chart.highlightMode !== 'None' || chart.legendSettings.enableHighlight)) {\n            chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n        }\n        chart.redraw = false;\n        series.isLegendClicked = false;\n    };\n    Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n        series.visible = !visibility;\n        if (this.isSecondaryAxis(series.xAxis)) {\n            series.xAxis.internalVisibility = series.xAxis.series.some(function (value) { return (value.visible); });\n        }\n        if (this.isSecondaryAxis(series.yAxis) || (series.category === 'Pareto' && series.type === 'Line')) {\n            series.yAxis.internalVisibility = series.yAxis.series.some(function (value) { return (value.visible); });\n        }\n        if (series.trendlines.length && series.visible) {\n            series.trendlines.forEach(function (trendline) {\n                trendline.visible = true;\n            });\n        }\n    };\n    Legend.prototype.isSecondaryAxis = function (axis) {\n        return (this.chart.axes.indexOf(axis) > -1);\n    };\n    Legend.prototype.redrawSeriesElements = function (series, chart) {\n        if (!chart.redraw) {\n            return null;\n        }\n        removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) +\n            '_DataLabelCollections');\n    };\n    Legend.prototype.refreshSeries = function (seriesCollection) {\n        for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n            var series = seriesCollection_1[_i];\n            if (series.type.indexOf('Spline') > -1) {\n                var isArea = (series.type.indexOf('Area') > -1 || series.drawType.indexOf('Area') > -1);\n                var isRange = series.type.indexOf('Range') > -1;\n                this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(series);\n            }\n            if (series.visible) {\n                series.position = undefined;\n            }\n        }\n    };\n    /**\n     * Handles the click event for showing tooltip on trimmed text in legend.\n     *\n     * @param {Event | PointerEvent} event - The click event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.click = function (event) {\n        var _this = this;\n        if (!this.chart.legendSettings.visible) {\n            return;\n        }\n        var pageX = this.chart.mouseX;\n        var pageY = this.chart.mouseY;\n        var legendRegion = [];\n        var targetId = event.target.id.indexOf('_chart_legend_g_') > -1 ?\n            event.target.firstChild['id'] : event.target.id;\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n            this.legendID + '_shape_'];\n        var seriesIndex;\n        for (var _i = 0, legendItemsId_2 = legendItemsId; _i < legendItemsId_2.length; _i++) {\n            var id = legendItemsId_2[_i];\n            if (targetId.indexOf(id) > -1) {\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\n                this.LegendClick(seriesIndex, event);\n                break;\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        if (this.chart.enableCanvas && this.pagingRegions.length) {\n            this.checkWithinBounds(pageX, pageY);\n        }\n        legendRegion = this.legendRegions.filter(function (region) {\n            return (withInBounds(pageX, (pageY + (_this.isPaging ? (_this.currentPageNumber - 1) *\n                _this.translatePage(_this.chart.enableCanvas, null, 1, 2) : 0)), region.rect));\n        });\n        if (legendRegion.length && this.chart.enableCanvas) {\n            this.LegendClick(legendRegion[0].index, event);\n        }\n    };\n    /**\n     * Checks whether the provided coordinates are within the bounds.\n     *\n     * @param {number} pageX - The x-coordinate of the mouse pointer.\n     * @param {number} pageY - The y-coordinate of the mouse pointer.\n     * @returns {void}\n     * @protected\n     */\n    Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n        var cRender = this.chart.renderer;\n        var bounds = this.legendBounds;\n        var borderWidth = this.chart.legendSettings.border.width;\n        var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        canvasRect.x = canvasRect.x - borderWidth / 2;\n        canvasRect.y = canvasRect.y - borderWidth / 2;\n        canvasRect.width = canvasRect.width + borderWidth;\n        canvasRect.height = canvasRect.height + borderWidth;\n        if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n            // pageDown calculations are performing here\n            if (!this.isRtlEnable) {\n                this.canvasPageDown(cRender, canvasRect, bounds);\n            }\n            else {\n                this.canvasPageUp(cRender, canvasRect, bounds);\n            }\n            return null;\n        }\n        if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n            // pageUp calculations are performing here\n            if (!this.isRtlEnable) {\n                this.canvasPageUp(cRender, canvasRect, bounds);\n            }\n            else {\n                this.canvasPageDown(cRender, canvasRect, bounds);\n            }\n            return null;\n        }\n    };\n    Legend.prototype.canvasPageDown = function (cRender, canvasRect, bounds) {\n        if (--this.currentPageNumber > 0) {\n            this.legendRegions = [];\n            cRender.clearRect(canvasRect);\n            cRender.canvasClip(new RectOption('legendClipPath', 'transparent', { width: 0, color: '' }, null, canvasRect));\n            this.renderLegend(this.chart, this.legend, bounds);\n            cRender.canvasRestore();\n        }\n        else {\n            ++this.currentPageNumber;\n        }\n    };\n    Legend.prototype.canvasPageUp = function (cRender, canvasRect, bounds) {\n        if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n            this.legendRegions = [];\n            cRender.clearRect(canvasRect);\n            cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', { width: 0, color: '' }, null, canvasRect));\n            this.renderLegend(this.chart, this.legend, bounds);\n            cRender.canvasRestore();\n        }\n        else {\n            --this.currentPageNumber;\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Legend;\n}(BaseLegend));\nexport { Legend };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACJ;AACA;AACA;AACA,SAASI,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,iBAAiB,QAAQ,sBAAsB;AACjF,SAASC,aAAa,EAAEC,UAAU,QAAQ,4BAA4B;AACtE,SAASC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,EAAEC,YAAY,EAAEC,oBAAoB,QAAQ,2BAA2B;AACnH,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,WAAW,EAAEC,IAAI,EAAEC,UAAU,QAAQ,0BAA0B;AACxE,SAASC,YAAY,EAAEC,WAAW,EAAEC,MAAM,EAAEC,MAAM,QAAQ,8BAA8B;AACxF,SAASC,QAAQ,QAAQ,2BAA2B;AACpD;AACA;AACA;AACA,IAAIC,MAAM,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC1CnC,SAAS,CAACkC,MAAM,EAAEC,MAAM,CAAC;EACzB,SAASD,MAAMA,CAACE,KAAK,EAAE;IACnB,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,EAAEF,KAAK,CAAC,IAAI,IAAI;IAC5CC,KAAK,CAACE,OAAO,GAAGF,KAAK;IACrBA,KAAK,CAACG,gBAAgB,CAAC,CAAC;IACxB,OAAOH,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;EACIH,MAAM,CAACtB,SAAS,CAAC4B,gBAAgB,GAAG,YAAY;IAC5C,IAAI,IAAI,CAACJ,KAAK,CAACK,WAAW,EAAE;MACxB;IACJ;IACA,IAAI,CAACL,KAAK,CAACM,EAAE,CAAC3B,OAAO,CAAC4B,cAAc,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAAC;IAC3D,IAAI,CAACR,KAAK,CAACM,EAAE,CAAC,OAAO,EAAE,IAAI,CAACG,KAAK,EAAE,IAAI,CAAC;IACxC,IAAI,CAACT,KAAK,CAACM,EAAE,CAAC3B,OAAO,CAAC+B,aAAa,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAAC;EAC7D,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIb,MAAM,CAACtB,SAAS,CAACoC,mBAAmB,GAAG,YAAY;IAC/C,IAAI,IAAI,CAACZ,KAAK,CAACK,WAAW,EAAE;MACxB;IACJ;IACA,IAAI,CAACL,KAAK,CAACa,GAAG,CAAClC,OAAO,CAAC4B,cAAc,EAAE,IAAI,CAACC,SAAS,CAAC;IACtD,IAAI,CAACR,KAAK,CAACa,GAAG,CAAC,OAAO,EAAE,IAAI,CAACJ,KAAK,CAAC;IACnC,IAAI,CAACT,KAAK,CAACa,GAAG,CAAClC,OAAO,CAAC+B,aAAa,EAAE,IAAI,CAACC,QAAQ,CAAC;EACxD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIb,MAAM,CAACtB,SAAS,CAACgC,SAAS,GAAG,UAAUM,CAAC,EAAE;IACtC,IAAI,IAAI,CAACd,KAAK,CAACe,cAAc,CAACC,OAAO,IAAI,CAAC,IAAI,CAAChB,KAAK,CAACiB,OAAO,EAAE;MAC1D,IAAI,CAACC,IAAI,CAACJ,CAAC,CAAC;MACZ,IAAI,IAAI,CAACd,KAAK,CAACmB,eAAe,KAAK,IAAI,CAACnB,KAAK,CAACoB,aAAa,KAAK,MAAM,IAAI,IAAI,CAACpB,KAAK,CAACe,cAAc,CAACM,eAAe,CAAC,EAAE;QAClH,IAAIC,aAAa,GAAG,CAAC,IAAI,CAACC,QAAQ,GAAG,QAAQ,EAAE,IAAI,CAACA,QAAQ,GAAG,gBAAgB,EAC3E,IAAI,CAACA,QAAQ,GAAG,SAAS,EAAE,IAAI,CAACA,QAAQ,GAAG,KAAK,CAAC;QACrD,IAAIC,QAAQ,GAAGV,CAAC,CAACW,MAAM,CAACC,EAAE;QAC1B,IAAIC,KAAK,GAAG,KAAK,CAAC;QAClB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,eAAe,GAAGP,aAAa,EAAEM,EAAE,GAAGC,eAAe,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;UACjF,IAAIF,EAAE,GAAGG,eAAe,CAACD,EAAE,CAAC;UAC5B,IAAIJ,QAAQ,CAACO,OAAO,CAACL,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YAC3BC,KAAK,GAAGK,QAAQ,CAACR,QAAQ,CAACS,KAAK,CAACP,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC3C,IAAI,CAAC1B,KAAK,CAACmB,eAAe,CAACe,eAAe,CAAC,IAAI,CAAClC,KAAK,EAAE2B,KAAK,EAAEb,CAAC,CAACW,MAAM,EAAEX,CAAC,CAACqB,IAAI,CAAC;YAC/E;UACJ;QACJ;QACA;MACJ;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrC,MAAM,CAACtB,SAAS,CAACmC,QAAQ,GAAG,UAAUG,CAAC,EAAE;IACrC,IAAI,IAAI,CAACd,KAAK,CAACe,cAAc,CAACC,OAAO,IAAI,IAAI,CAAChB,KAAK,CAACiB,OAAO,EAAE;MACzD,IAAI,CAACC,IAAI,CAACJ,CAAC,CAAC;IAChB;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIhB,MAAM,CAACtB,SAAS,CAAC4D,gBAAgB,GAAG,UAAUC,uBAAuB,EAAErC,KAAK,EAAE;IAC1E,IAAI,CAACsC,iBAAiB,GAAG,EAAE;IAC3B,IAAIC,UAAU;IACd,IAAIC,IAAI;IACR,IAAIC,SAAS;IACb,IAAIC,MAAM,GAAG,EAAE;IACf,IAAI,CAACC,WAAW,GAAG3C,KAAK,CAAC4C,SAAS;IAClC,IAAI,CAACC,SAAS,GAAG,CAAC,IAAI,CAACF,WAAW,IAAI3C,KAAK,CAACe,cAAc,CAAC+B,OAAO;IAClE,IAAIT,uBAAuB,CAACP,MAAM,GAAG,CAAC,EAAE;MACpC,IAAI,CAACiB,MAAM,CAACC,IAAI,GAAG,QAAQ;IAC/B;IACA,KAAK,IAAIpB,EAAE,GAAG,CAAC,EAAEqB,yBAAyB,GAAGZ,uBAAuB,EAAET,EAAE,GAAGqB,yBAAyB,CAACnB,MAAM,EAAEF,EAAE,EAAE,EAAE;MAC/G,IAAIsB,MAAM,GAAGD,yBAAyB,CAACrB,EAAE,CAAC;MAC1C,IAAI,IAAI,CAACmB,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;QAC/B,IAAIE,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;UACjCZ,UAAU,GAAIvC,KAAK,CAACoD,aAAa,KAAK,YAAY,GAAIF,MAAM,CAACG,QAAQ,GACjEH,MAAM,CAACf,IAAI;UACfM,SAAS,GAAG,CAACS,MAAM,CAACI,MAAM,CAACtC,OAAO,IAAKuB,UAAU,CAACR,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAIQ,UAAU,CAACR,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAE,GAAGmB,MAAM,CAACT,SAAS,GAAG,EAAE;UACpID,IAAI,GAAGU,MAAM,CAACK,QAAQ;UACtB,IAAI,CAACjB,iBAAiB,CAACkB,IAAI,CAAC,IAAI1E,aAAa,CAACoE,MAAM,CAACO,IAAI,EAAEjB,IAAI,EAAEU,MAAM,CAACQ,WAAW,EAAGR,MAAM,CAACC,QAAQ,KAAK,WAAW,GACjH,IAAI,CAACnD,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAACC,UAAU,CAACV,MAAM,CAACvB,KAAK,CAAC,CAACX,OAAO,GAAGkC,MAAM,CAAClC,OAAO,EAAGuB,UAAU,EAAEW,MAAM,CAACW,cAAc,GAAGX,MAAM,CAACW,cAAc,GAAIX,MAAM,CAACf,IAAI,KAAK,SAAS,IAAIe,MAAM,CAACI,MAAM,CAACQ,KAAK,KAAK,OAAO,GACnNZ,MAAM,CAACI,MAAM,CAACS,QAAQ,GAAG,EAAG,EAAEb,MAAM,CAACI,MAAM,CAACQ,KAAK,EAAEZ,MAAM,CAACI,MAAM,CAACtC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAEyB,SAAS,CAAC,CAAC;QACzG;MACJ,CAAC,MACI,IAAI,IAAI,CAACM,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;QACnC,KAAK,IAAIgB,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGf,MAAM,CAACgB,MAAM,EAAEF,EAAE,GAAGC,EAAE,CAACnC,MAAM,EAAEkC,EAAE,EAAE,EAAE;UACvD,IAAIE,MAAM,GAAGD,EAAE,CAACD,EAAE,CAAC;UACnBzB,UAAU,GAAIvC,KAAK,CAACoD,aAAa,KAAK,YAAY,GAAIF,MAAM,CAACG,QAAQ,GACjEH,MAAM,CAACf,IAAI;UACfK,IAAI,GAAG0B,MAAM,CAACX,QAAQ,GAAGW,MAAM,CAACX,QAAQ,GAAGL,MAAM,CAACK,QAAQ;UAC1D,IAAI,CAACjB,iBAAiB,CAACkB,IAAI,CAAC,IAAI1E,aAAa,CAACoF,MAAM,CAACC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE5B,IAAI,EAAEU,MAAM,CAACQ,WAAW,EAAGR,MAAM,CAACC,QAAQ,KAAK,WAAW,GACzH,IAAI,CAACnD,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAACC,UAAU,CAACV,MAAM,CAACvB,KAAK,CAAC,CAACX,OAAO,GAAGkD,MAAM,CAAClD,OAAO,EAAGuB,UAAU,EAAGW,MAAM,CAACf,IAAI,KAAK,SAAS,IAAIe,MAAM,CAACI,MAAM,CAACQ,KAAK,KAAK,OAAO,GAAIZ,MAAM,CAACI,MAAM,CAACS,QAAQ,GAAG,EAAE,EAAEb,MAAM,CAACI,MAAM,CAACQ,KAAK,EAAEZ,MAAM,CAACI,MAAM,CAACtC,OAAO,CAAC,CAAC;QACxP;MACJ,CAAC,MACI,IAAI,IAAI,CAAC+B,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;QACnC,KAAK,IAAIqB,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGpB,MAAM,CAACgB,MAAM,EAAEG,EAAE,GAAGC,EAAE,CAACxC,MAAM,EAAEuC,EAAE,EAAE,EAAE;UACvD,IAAIH,MAAM,GAAGI,EAAE,CAACD,EAAE,CAAC;UACnB9B,UAAU,GAAIvC,KAAK,CAACoD,aAAa,KAAK,YAAY,GAAIF,MAAM,CAACG,QAAQ,GACjEH,MAAM,CAACf,IAAI;UACfK,IAAI,GAAG0B,MAAM,CAACX,QAAQ,GAAGW,MAAM,CAACX,QAAQ,GAAGL,MAAM,CAACK,QAAQ;UAC1D,IAAIgB,WAAW,GAAG,QAAQ;UAC1B,IAAI7B,MAAM,CAACX,OAAO,CAACS,IAAI,CAAC,GAAG,CAAC,EAAE;YAC1BE,MAAM,CAACc,IAAI,CAAChB,IAAI,CAAC;YACjB,IAAIxC,KAAK,CAACwE,kBAAkB,CAAC1C,MAAM,IAAI,CAAC,IAAI9B,KAAK,CAACwE,kBAAkB,CAAC,CAAC,CAAC,CAAC9B,MAAM,CAACZ,MAAM,KAAK,CAAC,EAAE;cACzF,KAAK,IAAI2C,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG1E,KAAK,CAACwE,kBAAkB,EAAEC,EAAE,GAAGC,EAAE,CAAC5C,MAAM,EAAE2C,EAAE,EAAE,EAAE;gBAClE,IAAIE,QAAQ,GAAGD,EAAE,CAACD,EAAE,CAAC;gBACrB,IAAIE,QAAQ,CAACjC,MAAM,CAAC,CAAC,CAAC,KAAKF,IAAI,EAAE;kBAC7B+B,WAAW,GAAGI,QAAQ,CAACC,KAAK;gBAChC;cACJ;cACA,IAAI,CAACtC,iBAAiB,CAACkB,IAAI,CAAC,IAAI1E,aAAa,CAACyF,WAAW,EAAE/B,IAAI,EAAEU,MAAM,CAACQ,WAAW,EAAGR,MAAM,CAACC,QAAQ,KAAK,WAAW,GACjH,IAAI,CAACnD,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAACC,UAAU,CAACV,MAAM,CAACvB,KAAK,CAAC,CAACX,OAAO,GAAGkD,MAAM,CAAClD,OAAO,EAAGuB,UAAU,EAAGW,MAAM,CAACf,IAAI,KAAK,SAAS,IAAIe,MAAM,CAACI,MAAM,CAACQ,KAAK,KAAK,OAAO,GAAIZ,MAAM,CAACI,MAAM,CAACS,QAAQ,GAAG,EAAE,EAAEb,MAAM,CAACI,MAAM,CAACQ,KAAK,EAAEZ,MAAM,CAACI,MAAM,CAACtC,OAAO,CAAC,CAAC;YACxP;UACJ;QACJ;MACJ,CAAC,MACI;QACD,IAAI,IAAI,CAACsB,iBAAiB,CAACR,MAAM,KAAK,CAAC,IAAI9B,KAAK,CAACwE,kBAAkB,CAAC1C,MAAM,GAAG,CAAC,EAAE;UAC5E,IAAI+C,UAAU,GAAG7E,KAAK,CAACwE,kBAAkB,CAAC,CAAC,CAAC,CAACM,KAAK,CAACV,QAAQ,CAAC,CAAC;UAC7D,IAAIW,QAAQ,GAAG/E,KAAK,CAACwE,kBAAkB,CAACxE,KAAK,CAACwE,kBAAkB,CAAC1C,MAAM,GAAG,CAAC,CAAC,CAACkD,GAAG,CAACZ,QAAQ,CAAC,CAAC;UAC3F,IAAI,CAAC9B,iBAAiB,CAACkB,IAAI,CAAC,IAAI1E,aAAa,CAAC+F,UAAU,EAAE3B,MAAM,CAACK,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAEhB,UAAU,EAAE,EAAE,EAAEW,MAAM,CAACI,MAAM,CAACQ,KAAK,EAAEZ,MAAM,CAACI,MAAM,CAACtC,OAAO,CAAC,CAAC;UAC1J,IAAI,CAACsB,iBAAiB,CAACkB,IAAI,CAAC,IAAI1E,aAAa,CAACiG,QAAQ,EAAE7B,MAAM,CAACK,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAEhB,UAAU,EAAE,EAAE,EAAEW,MAAM,CAACI,MAAM,CAACQ,KAAK,EAAEZ,MAAM,CAACI,MAAM,CAACtC,OAAO,CAAC,CAAC;QAC5J;MACJ;IACJ;IACA,IAAI,IAAI,CAAC6B,SAAS,IAAI7C,KAAK,CAACe,cAAc,CAACiC,IAAI,KAAK,UAAU,EAAE;MAC5D,IAAI,CAACV,iBAAiB,CAACQ,OAAO,CAAC,CAAC;IACpC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIhD,MAAM,CAACtB,SAAS,CAACyG,eAAe,GAAG,UAAUC,aAAa,EAAEC,YAAY,EAAEpC,MAAM,EAAE;IAC9E,IAAI,CAACqC,oBAAoB,CAACrC,MAAM,EAAEoC,YAAY,CAAC;IAC/C,IAAI,CAACE,OAAO,GAAGtC,MAAM,CAACuC,KAAK,GAAG,IAAI,GAAG,KAAK;IAC1C,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAIC,OAAO,GAAG5C,MAAM,CAAC4C,OAAO;IAC5B,IAAIC,aAAa,GAAG7C,MAAM,CAAC6C,aAAa;IACxC,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,YAAY;IAChB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,UAAU,GAAG,IAAI,CAACA,UAAU;IAChC,IAAIC,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIC,kBAAkB,GAAG,IAAI,CAACC,UAAU,IAAI,CAACpD,MAAM,CAACqD,WAAW,GAAGH,WAAW,GAAG,CAAC;IACjF,IAAII,UAAU,GAAG,IAAI,CAAChB,OAAO,IAAIO,aAAa,KAAK,KAAK,GAAG,IAAI,CAACU,eAAe,CAACC,MAAM,GAAG,IAAI,CAACC,SAAS,GAAG,CAAC;IAC3GH,UAAU,GAAG,IAAI,CAAChB,OAAO,IAAI,IAAI,CAACc,UAAU,IAAIP,aAAa,KAAK,KAAK,GAAG,IAAI,CAACU,eAAe,CAACC,MAAM,GAAG,IAAI,CAACC,SAAS,GAAGH,UAAU;IACnI,IAAI,CAAC,IAAI,CAACF,UAAU,EAAE;MAClBN,WAAW,GAAG,CAAC9C,MAAM,CAACwD,MAAM,GAAKrB,aAAa,CAACqB,MAAM,GAAG,GAAG,GAAI,CAAC,GAAI,CAAC;IACzE,CAAC,MACI;MACDR,UAAU,GAAG,CAAChD,MAAM,CAAC0D,KAAK,GAAKvB,aAAa,CAACuB,KAAK,GAAG,GAAG,GAAI,CAAC,GAAI,CAAC;IACtE;IACAtB,YAAY,CAACoB,MAAM,IAAKV,WAAY;IACpCV,YAAY,CAACsB,KAAK,IAAIV,UAAU;IAChC,IAAIW,UAAU,GAAG3D,MAAM,CAAC2D,UAAU;IAClC,IAAIC,YAAY,GAAG5D,MAAM,CAAC4D,YAAY;IACtC,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,mBAAmB,GAAG,CAAC;IAC3B,IAAIC,eAAe;IACnB,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAI,CAACC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACjI,WAAW,CAAC,aAAa,EAAEyD,MAAM,CAACyE,SAAS,EAAE,IAAI,CAACxH,KAAK,CAACyH,UAAU,CAACC,eAAe,CAAC,CAACnB,MAAM,EAAExD,MAAM,CAAC4E,WAAW,CAAC;IAC7I,IAAIC,SAAS,GAAG7E,MAAM,CAAC8E,MAAM,KAAK,MAAM,IAAI9E,MAAM,CAAC+E,cAAc,GAAG,CAAC;IACrE,IAAI/E,MAAM,CAACgF,UAAU,EAAE;MACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC1F,iBAAiB,CAACR,MAAM,EAAEkG,CAAC,EAAE,EAAE;QACpD,IAAIC,SAAS,GAAGvB,UAAU,GAAGC,YAAY,IAAI,CAAC,IAAI,CAACR,UAAU,GAAI6B,CAAC,KAAK,CAAC,GAAIrC,OAAO,GAAG,IAAI,CAACuC,WAAW,GAChGvC,OAAO,CAAC,IAAI5C,MAAM,CAACoF,iBAAiB,GAAGpF,MAAM,CAACoF,iBAAiB,GACjE7I,WAAW,CAAC,IAAI,CAACgD,iBAAiB,CAAC0F,CAAC,CAAC,CAACI,IAAI,EAAErF,MAAM,CAACyE,SAAS,EAAE,IAAI,CAACxH,KAAK,CAACyH,UAAU,CAACC,eAAe,CAAC,CAACjB,KAAK,CAAC;QAC/G,IAAI,CAAC4B,QAAQ,GAAGf,IAAI,CAACC,GAAG,CAAC,IAAI,CAACc,QAAQ,EAAEJ,SAAS,CAAC;MACtD;IACJ;IACA,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC1F,iBAAiB,CAACR,MAAM,EAAEkG,CAAC,EAAE,EAAE;MACpDlC,YAAY,GAAG,IAAI,CAACxD,iBAAiB,CAAC0F,CAAC,CAAC;MACxC,IAAIrI,MAAM,CAAC2I,IAAI,CAACxC,YAAY,CAACsC,IAAI,CAAC,EAAE;QAChCtC,YAAY,CAACsC,IAAI,GAAG/I,cAAc,CAACyG,YAAY,CAACsC,IAAI,EAAEzI,MAAM,CAAC;MACjE;MACA,IAAIC,MAAM,CAAC0I,IAAI,CAACxC,YAAY,CAACsC,IAAI,CAAC,EAAE;QAChCtC,YAAY,CAACsC,IAAI,GAAG/I,cAAc,CAACyG,YAAY,CAACsC,IAAI,EAAExI,MAAM,CAAC;MACjE;MACAuH,eAAe,GAAG;QACd3E,IAAI,EAAEsD,YAAY,CAACtD,IAAI;QAAE4F,IAAI,EAAEtC,YAAY,CAACsC,IAAI;QAAEtE,KAAK,EAAEgC,YAAY,CAAChC,KAAK;QAC3EyE,WAAW,EAAEzC,YAAY,CAACyC,WAAW;QAAE9E,IAAI,EAAEhE,YAAY;QAAE+I,MAAM,EAAE;MACvE,CAAC;MACD,IAAI,CAACxI,KAAK,CAACyI,OAAO,CAAChJ,YAAY,EAAE0H,eAAe,CAAC;MACjDrB,YAAY,CAACsB,MAAM,GAAG,CAACD,eAAe,CAACqB,MAAM;MAC7C1C,YAAY,CAACsC,IAAI,GAAGjB,eAAe,CAACiB,IAAI;MACxCtC,YAAY,CAACtD,IAAI,GAAG2E,eAAe,CAAC3E,IAAI;MACxCsD,YAAY,CAAChC,KAAK,GAAGqD,eAAe,CAACrD,KAAK;MAC1CgC,YAAY,CAACyC,WAAW,GAAGpB,eAAe,CAACoB,WAAW;MACtDzC,YAAY,CAAC4C,QAAQ,GAAGpJ,WAAW,CAACwG,YAAY,CAACsC,IAAI,EAAErF,MAAM,CAACyE,SAAS,EAAE,IAAI,CAACxH,KAAK,CAACyH,UAAU,CAACC,eAAe,CAAC;MAC/GhB,UAAU,GAAGZ,YAAY,CAACsC,IAAI,GAAGrF,MAAM,CAAC2D,UAAU,GAAG,CAAC;MACtDC,YAAY,GAAGb,YAAY,CAACsC,IAAI,GAAGrF,MAAM,CAAC4D,YAAY,GAAG,CAAC;MAC1D,IAAIb,YAAY,CAACsB,MAAM,IAAItB,YAAY,CAACsC,IAAI,EAAE;QAC1ChB,MAAM,GAAG,IAAI;QACbN,WAAW,GAAG/D,MAAM,CAACgF,UAAU,GAAG,IAAI,CAACM,QAAQ,GAAG3B,UAAU,GAAGC,YAAY,IACtE5D,MAAM,CAACoF,iBAAiB,GAAGpF,MAAM,CAACoF,iBAAiB,GAAGrC,YAAY,CAAC4C,QAAQ,CAACjC,KAAK,CAAC,IACjF,CAAC,IAAI,CAACN,UAAU,IAAIpD,MAAM,CAAC8E,MAAM,KAAK,YAAY,GAAKG,CAAC,KAAK,CAAC,IAAKhB,WAAW,KAAK,CAAC,IAAIC,QAAQ,GAAG,CAAC,IAAIlE,MAAM,CAAC8E,MAAM,KAAK,YAAa,GAAIlC,OAAO,GAAG,IAAI,CAACuC,WAAW,GAAGvC,OAAO,CAAC;QACtLkB,QAAQ,GAAGA,QAAQ,GAAGC,WAAW;QACjC,IAAI,CAAC/D,MAAM,CAACqD,WAAW,IAAI,CAAC,IAAI,CAACD,UAAU,EAAE;UACzCe,mBAAmB,GAAG,IAAI,CAAC7B,OAAO,IAAIO,aAAa,KAAK,KAAK,GAAG,IAAI,CAACU,eAAe,CAACG,KAAK,GAAG,IAAI,CAACD,SAAS,GAAG,CAAC;UAC/GU,mBAAmB,IAAIlB,UAAU;QACrC;QACA,IAAI,CAAC2C,eAAe,CAAC7C,YAAY,EAAE/C,MAAM,EAAEoC,YAAY,EAAE0B,QAAQ,EAAE,IAAI,CAACQ,aAAa,EAAE1B,OAAO,CAAC;QAC/F,IAAIiC,SAAS,GAAGZ,WAAW,KAAKjE,MAAM,CAAC+E,cAAc,GAAG/E,MAAM,CAAC8E,MAAM,KAAK,UAAU,IAAK1C,YAAY,CAACsB,KAAK,GAAId,OAAO,GAAGkB,QAAQ,GAAGK,mBAAqB,IAAK,IAAI,CAACf,UAAU,IAAIpD,MAAM,CAAC8E,MAAM,KAAK,MAAO,EAAE;UACxMjB,YAAY,GAAGU,IAAI,CAACC,GAAG,CAACX,YAAY,EAAGC,QAAQ,GAAGlB,OAAO,GAAGuB,mBAAmB,IAAI,IAAI,CAACf,UAAU,IAC9F,IAAI,CAACpD,MAAM,CAAC8E,MAAM,KAAK,MAAM,GAAG,CAAC,GAAGf,WAAW,CAAE,CAAC;UACtD,IAAIG,QAAQ,KAAK,CAAC,IAAKH,WAAW,KAAKD,QAAS,EAAE;YAC9CI,QAAQ,GAAG,CAAC;UAChB;UACAJ,QAAQ,GAAG,IAAI,CAACV,UAAU,IAAI,IAAI,CAACpD,MAAM,CAAC8E,MAAM,KAAK,MAAM,GAAG,CAAC,GAAGf,WAAW;UAC7EG,QAAQ,EAAE;UACVD,WAAW,GAAG,CAAC;UACfD,YAAY,GAAGb,kBAAkB;UACjC;QACJ;QACA,IAAI0C,GAAG,GAAI3B,QAAQ,GAAG,CAAC,GAAIA,QAAQ,GAAG,CAAC,GAAI,CAAE;QAC7C,IAAI,CAACzB,UAAU,CAACoD,GAAG,CAAC,GAAGtB,IAAI,CAACC,GAAG,CAAE,IAAI,CAAC/B,UAAU,CAACoD,GAAG,CAAC,GACjD,IAAI,CAACpD,UAAU,CAACoD,GAAG,CAAC,GAAG,CAAC,EAAGtB,IAAI,CAACC,GAAG,CAACzB,YAAY,CAAC4C,QAAQ,CAACnC,MAAM,EAAExD,MAAM,CAAC4E,WAAW,CAAC,CAAC;QAC1F;QACA,IAAI,CAAClC,aAAa,CAACuB,WAAW,CAAC,GAAG,CAAC,IAAI,CAACvB,aAAa,CAACuB,WAAW,CAAC,GAC9D,IAAI,CAACvB,aAAa,CAACuB,WAAW,CAAC,GAAG,CAAC,IAAIM,IAAI,CAACC,GAAG,CAACzB,YAAY,CAAC4C,QAAQ,CAACnC,MAAM,EAAExD,MAAM,CAAC4E,WAAW,CAAC,IAC/F,IAAI,CAACxB,UAAU,IAAKc,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAClE,MAAM,CAACmF,WAAY,GAAKF,CAAC,KAAK,CAAC,GAAIrC,OAAO,GAAG,IAAI,CAACuC,WAAW,GAAGvC,OAAO,CAAC;QACvHqB,WAAW,EAAE;MACjB;IACJ;IACAD,YAAY,GAAGO,IAAI,CAACC,GAAG,CAACsB,KAAK,CAAC,IAAI,EAAE,IAAI,CAACpD,aAAa,CAAC,GAAGE,OAAO,GAAGU,UAAU;IAC9EU,YAAY,GAAGO,IAAI,CAACC,GAAG,CAACR,YAAY,EAAG,IAAI,CAACM,aAAa,GAAG1B,OAAO,GAAIA,OAAO,GAAGU,UAAU,CAAC;IAC5F,IAAItD,MAAM,CAAC8E,MAAM,KAAK,YAAY,EAAE;MAChCd,YAAY,GAAG,IAAI,CAACM,aAAa,GAAI1B,OAAO,GAAG,CAAE,GAAGU,UAAU,GAAG,IAAI,CAACyC,cAAc,GAAG/F,MAAM,CAACgG,MAAM,CAACtC,KAAK;IAC9G;IACA,IAAI,CAACuC,QAAQ,GAAG,CAAC7D,YAAY,CAACoB,MAAM,GAAGQ,YAAY,IAAKhE,MAAM,CAAC8E,MAAM,KAAK,YAAY,IAAI,IAAI,CAACrC,UAAU,CAAC1D,MAAM,GAAG,CAAE,KAAK,CAAC8F,SAAS;IACpI,IAAI,IAAI,CAACoB,QAAQ,IAAI,CAACjG,MAAM,CAACqD,WAAW,EAAE;MACtC,IAAI,CAAC,IAAI,CAACD,UAAU,EAAE;QAClBY,YAAY,GAAI,IAAI,CAACM,aAAa,GAAG1B,OAAO,GAAIA,OAAO,IAAIC,aAAa,KAAK,KAAK,GAAGS,UAAU,GAAG,CAAC,CAAC;MACxG;IACJ;IACA,IAAI,CAAC4C,UAAU,GAAGhC,QAAQ;IAC1B,IAAIW,SAAS,IAAI,IAAI,CAACS,QAAQ,IAAItF,MAAM,CAACgF,UAAU,EAAE;MACjDlB,QAAQ,GAAG,IAAI,CAACwB,QAAQ,GAAGtF,MAAM,CAAC+E,cAAc;MAChD,IAAI,CAACkB,QAAQ,GAAG,KAAK;IACzB;IACA,IAAI,CAAC,CAAC,IAAI,CAACA,QAAQ,IAAI,IAAI,CAACjG,MAAM,CAAC8E,MAAM,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC1B,UAAU,EAAE;MACvEU,QAAQ,IAAI,IAAI,CAACxB,OAAO,IAAIO,aAAa,KAAK,KAAK,GAAI,IAAI,CAACY,SAAS,GAAG,IAAI,CAACF,eAAe,CAACG,KAAK,GAAG,IAAI,CAACD,SAAS,GAAI,CAAC;IAC5H;IACA,IAAIY,MAAM,EAAE;MACR,IAAI,CAAC8B,SAAS,CAAC5B,IAAI,CAACC,GAAG,CAAEV,QAAQ,GAAGlB,OAAO,EAAGiB,YAAY,CAAC,EAAEG,YAAY,EAAEhE,MAAM,EAAEoC,YAAY,CAAC;IACpG,CAAC,MACI;MACD,IAAI,CAAC+D,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEnG,MAAM,EAAEoC,YAAY,CAAC;IAC9C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIrF,MAAM,CAACtB,SAAS,CAACmK,eAAe,GAAG,UAAU7C,YAAY,EAAE/C,MAAM,EAAEoC,YAAY,EAAE0B,QAAQ,EAAEsC,YAAY,EAAExD,OAAO,EAAE;IAC9G,IAAImB,WAAW,GAAGhB,YAAY,CAAC4C,QAAQ,CAACjC,KAAK;IAC7C,IAAI2C,WAAW,GAAGrG,MAAM,CAAC4D,YAAY,GAAIhB,OAAO,GAAG,CAAE,GAAG5C,MAAM,CAAC2D,UAAU;IACzE,QAAQ3D,MAAM,CAAClD,QAAQ;MACnB,KAAK,MAAM;MACX,KAAK,UAAU;QACX,IAAIiH,WAAW,GAAG/D,MAAM,CAACoF,iBAAiB,IAAIrB,WAAW,GAAGD,QAAQ,GAAG1B,YAAY,CAACsB,KAAK,EAAE;UACvFX,YAAY,CAACuD,cAAc,GAAGxJ,QAAQ,CAACiG,YAAY,CAACsC,IAAI,EAAGrF,MAAM,CAACoF,iBAAiB,GAAGb,IAAI,CAACgC,GAAG,CAACvG,MAAM,CAACoF,iBAAiB,EAAGhD,YAAY,CAACsB,KAAK,GAAG2C,WAAY,CAAC,GACvJjE,YAAY,CAACsB,KAAK,GAAG2C,WAAY,EAAGrG,MAAM,CAACyE,SAAS,EAAE,IAAI,CAACxH,KAAK,CAAC4C,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC5C,KAAK,CAACyH,UAAU,CAACC,eAAe,CAAC;QACvI,CAAC,MACI;UACD5B,YAAY,CAACuD,cAAc,CAAC7F,IAAI,CAACsC,YAAY,CAACsC,IAAI,CAAC;QACvD;QACAtC,YAAY,CAAC4C,QAAQ,CAACnC,MAAM,GAAI4C,YAAY,GAAGrD,YAAY,CAACuD,cAAc,CAACvH,MAAO;QAClF;IACR;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIhC,MAAM,CAACtB,SAAS,CAAC+K,cAAc,GAAG,UAAUzD,YAAY,EAAEhB,KAAK,EAAEsE,WAAW,EAAEI,cAAc,EAAEC,IAAI,EAAEC,KAAK,EAAEC,WAAW,EAAE;IACpH,IAAIhE,OAAO,GAAG,IAAI,CAAC5C,MAAM,CAAC4C,OAAO;IACjC,IAAIsC,SAAS,GAAG,IAAI,CAAClF,MAAM,CAACgF,UAAU,GAAG,IAAI,CAACM,QAAQ,GAAGe,WAAW,IAAI,IAAI,CAACrG,MAAM,CAACoF,iBAAiB,GACjG,IAAI,CAACpF,MAAM,CAACoF,iBAAiB,GAAGqB,cAAc,CAACd,QAAQ,CAACjC,KAAK,CAAC;IAClE,IAAImD,aAAa,GAAGJ,cAAc,CAACK,QAAQ,CAAC1F,CAAC,IAAK,CAAC,IAAI,CAACxB,WAAW,GAAIsF,SAAS,GAAG,CAACA,SAAS,CAAC;IAC9F,IAAI,IAAI,CAAClF,MAAM,CAAC8E,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC9E,MAAM,CAAC+E,cAAc,GAAG,CAAC,GAAG4B,KAAK,GAAG,IAAI,CAAC3G,MAAM,CAAC+E,cAAc,KAAK,CAAC,GAAG,IAAI,CAAC/E,MAAM,CAAC8E,MAAM,KAAK,UAAU,IAAI,IAAI,CAACiC,cAAc,CAACF,aAAa,EAAE,CAAC,IAAI,CAAC7G,MAAM,CAACoF,iBAAiB,GACnN,IAAI,CAACpF,MAAM,CAACoF,iBAAiB,GAAGrC,YAAY,CAAC4C,QAAQ,CAACjC,KAAK,IAAI2C,WAAW,GAAG,IAAI,CAAClB,WAAW,EAAEuB,IAAI,CAAC,IAAK,IAAI,CAACtD,UAAU,IAAI,IAAI,CAACpD,MAAM,CAAC8E,MAAM,KAAK,MAAO,EAAE;MAC5J/B,YAAY,CAAC+D,QAAQ,CAAC1F,CAAC,GAAGW,KAAK,CAACX,CAAC;MACjC,IAAIuF,KAAK,KAAKC,WAAW,EAAE;QACvB,IAAI,CAACpE,aAAa,EAAE;MACxB;MACAO,YAAY,CAAC+D,QAAQ,CAACE,CAAC,GAAIL,KAAK,KAAKC,WAAW,GAAIH,cAAc,CAACK,QAAQ,CAACE,CAAC,GACzEP,cAAc,CAACK,QAAQ,CAACE,CAAC,IAAI,IAAI,CAAC5D,UAAU,IAAI,IAAI,CAACpD,MAAM,CAAC8E,MAAM,KAAK,YAAY,IAAI,EAAE,IAAI,CAAC9E,MAAM,CAAC+E,cAAc,GAAG,CAAC,CAAC,GAAGR,IAAI,CAACC,GAAG,CAACiC,cAAc,CAACd,QAAQ,CAACnC,MAAM,EAAE,IAAI,CAACxD,MAAM,CAAC4E,WAAW,CAAC,GACxL,IAAI,CAACnC,UAAU,CAAE,IAAI,CAACD,aAAa,GAAG,CAAC,CAAE,CAAC,IAAK,IAAI,CAACY,UAAU,IAAK,IAAI,CAACZ,aAAa,GAAG,CAAC,IACzF,IAAI,CAACxC,MAAM,CAACmF,WAAY,GAAI,IAAI,CAACA,WAAW,GAAGvC,OAAO,CAAC;IACnE,CAAC,MACI;MACDG,YAAY,CAAC+D,QAAQ,CAAC1F,CAAC,GAAIuF,KAAK,KAAKC,WAAW,GAAIH,cAAc,CAACK,QAAQ,CAAC1F,CAAC,GAAGyF,aAAa;MAC7F9D,YAAY,CAAC+D,QAAQ,CAACE,CAAC,GAAGP,cAAc,CAACK,QAAQ,CAACE,CAAC;IACvD;IACA,IAAIC,UAAU,GAAI,CAAC,IAAI,CAACrH,WAAW,GAAK,IAAI,CAACwC,YAAY,CAAChB,CAAC,GAAG,IAAI,CAACgB,YAAY,CAACsB,KAAK,IAAKX,YAAY,CAAC+D,QAAQ,CAAC1F,CAAC,GAC7GiF,WAAW,GAAG,IAAI,CAAClB,WAAW,GAAG,IAAI,CAACnF,MAAM,CAAC2D,UAAU,GAAG,CAAC,CAAC,GAAIZ,YAAY,CAAC+D,QAAQ,CAAC1F,CAAC,GAAGiF,WAAW,GAAG,IAAI,CAAClB,WAAW,GACvH,IAAI,CAACnF,MAAM,CAAC2D,UAAU,GAAG,CAAE,GAAI,IAAI,CAACvB,YAAY,CAAChB,CAAC;IACvD,IAAI,CAAC,IAAI,CAACgC,UAAU,IAAI,IAAI,CAAC6C,QAAQ,IAAI,CAAC,IAAI,CAACjG,MAAM,CAACqD,WAAW,EAAE;MAC/D4D,UAAU,GAAG,IAAI,CAAC7E,YAAY,CAACsB,KAAK,GAAGX,YAAY,CAAC+D,QAAQ,CAAC1F,CAAC,GAAG,IAAI,CAACqC,SAAS;IACnF;IACAwD,UAAU,GAAG,IAAI,CAACjH,MAAM,CAACoF,iBAAiB,GAAGb,IAAI,CAACgC,GAAG,CAAC,IAAI,CAACvG,MAAM,CAACoF,iBAAiB,EAAE6B,UAAU,CAAC,GAAGA,UAAU;IAC7G,IAAI,IAAI,CAACjH,MAAM,CAACkH,YAAY,KAAK,UAAU,IAAI,IAAI,CAAClH,MAAM,CAAClD,QAAQ,KAAK,QAAQ,EAAE;MAC9EiG,YAAY,CAACsC,IAAI,GAAGpJ,QAAQ,CAAC,CAACgL,UAAU,CAACE,OAAO,CAAC,CAAC,CAAC,EAAEpE,YAAY,CAACsC,IAAI,EAAE,IAAI,CAACrF,MAAM,CAACyE,SAAS,EAAE,IAAI,CAACxH,KAAK,CAAC4C,SAAS,EAAE,IAAI,CAAC5C,KAAK,CAACyH,UAAU,CAACC,eAAe,CAAC;IAC/J;EACJ,CAAC;EACD5H,MAAM,CAACtB,SAAS,CAACsL,cAAc,GAAG,UAAUF,aAAa,EAAE3B,SAAS,EAAEwB,IAAI,EAAE;IACxE,IAAI,CAAC,IAAI,CAAC9G,WAAW,EAAE;MACnB,OAAQiH,aAAa,GAAG3B,SAAS,GAAKwB,IAAI,CAACtF,CAAC,GAAGsF,IAAI,CAAChD,KAAK,GAAI,IAAI,CAAC1D,MAAM,CAAC2D,UAAU,GAAG,CAAG;IAC7F,CAAC,MACI;MACD,OAAQkD,aAAa,GAAG3B,SAAS,GAAKwB,IAAI,CAACtF,CAAC,GAAI,IAAI,CAACpB,MAAM,CAAC2D,UAAU,GAAG,CAAG;IAChF;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI5G,MAAM,CAACtB,SAAS,CAAC2L,WAAW,GAAG,UAAUxI,KAAK,EAAEyI,KAAK,EAAE;IACnD,IAAIpK,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAIqK,WAAW,GAAGrK,KAAK,CAACe,cAAc,CAACiC,IAAI,KAAK,QAAQ,GAAGrB,KAAK,GAAG,CAAC;IACpE,IAAI2I,WAAW,GAAG,CAAC,IAAI,CAACzH,SAAS,GAAGlB,KAAK,GAAI,IAAI,CAACW,iBAAiB,CAACR,MAAM,GAAG,CAAC,GAAIH,KAAK;IACvF,IAAIuB,MAAM,GAAGlD,KAAK,CAACuK,aAAa,CAACF,WAAW,CAAC;IAC7C,IAAItH,MAAM,GAAG,IAAI,CAACT,iBAAiB,CAACgI,WAAW,CAAC;IAChD,IAAIE,eAAe,GAAG,qBAAqB;IAC3C,IAAIxK,KAAK,CAACe,cAAc,CAACiC,IAAI,KAAK,QAAQ,EAAE;MACxC,IAAIyH,eAAe,GAAG;QAClBC,UAAU,EAAE3H,MAAM,CAACqF,IAAI;QAAE1E,WAAW,EAAEX,MAAM,CAACe,KAAK;QAClD9D,KAAK,EAAEA,KAAK,CAAC2K,QAAQ,GAAG,CAAC,CAAC,GAAG3K,KAAK;QAAEkD,MAAM,EAAEA,MAAM;QAAEgB,MAAM,EAAEhB,MAAM,CAACgB,MAAM;QAAET,IAAI,EAAE/D,WAAW;QAAE8I,MAAM,EAAE;MAC1G,CAAC;MACD,IAAI,CAACxI,KAAK,CAACyI,OAAO,CAAC/I,WAAW,EAAE+K,eAAe,CAAC;MAChDvH,MAAM,CAACQ,WAAW,GAAG+G,eAAe,CAAC/G,WAAW;MAChD,IAAI,CAAC+G,eAAe,CAACjC,MAAM,EAAE;QACzB,IAAItF,MAAM,CAACV,IAAI,KAAK,IAAI,EAAE;UACtBxC,KAAK,CAACuK,aAAa,CAAC5I,KAAK,CAAC,CAAC4B,QAAQ,GAAGL,MAAM,CAACV,IAAI;QACrD;QACA,IAAIxC,KAAK,CAACe,cAAc,CAAC6J,gBAAgB,EAAE;UACvC1H,MAAM,CAAClD,KAAK,CAACwK,eAAe,CAAC,GAAG,IAAI;UACpC,IAAItH,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;YACjC,IAAI,CAACnD,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAACC,UAAU,CAACV,MAAM,CAACvB,KAAK,CAAC,CAACX,OAAO,IAClEhB,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAAC3C,OAAO,EAAE;cAC1ChB,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAACC,UAAU,CAACV,MAAM,CAACvB,KAAK,CAAC,CAACX,OAAO,GAAG,IAAI;YAC5E,CAAC,MACI;cACDhB,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAACC,UAAU,CAACV,MAAM,CAACvB,KAAK,CAAC,CAACX,OAAO,GAAG,KAAK;YAC7E;UACJ,CAAC,MACI;YACD,IAAI,CAAC6J,qBAAqB,CAAC3H,MAAM,EAAEA,MAAM,CAAClC,OAAO,CAAC;UACtD;UACA+B,MAAM,CAAC/B,OAAO,GAAGkC,MAAM,CAACC,QAAQ,KAAK,WAAW,GAAGnD,KAAK,CAACkD,MAAM,CAACA,MAAM,CAACS,WAAW,CAAC,CAACC,UAAU,CAACV,MAAM,CAACvB,KAAK,CAAC,CAACX,OAAO,GAC/GkC,MAAM,CAAClC,OAAQ;UACpB,IAAI,CAAC8J,mBAAmB,CAAC9K,KAAK,EAAEkD,MAAM,CAAC;UACvC,IAAIlD,KAAK,CAACmB,eAAe,IAAInB,KAAK,CAACe,cAAc,CAACM,eAAe,EAAE;YAC/DrB,KAAK,CAACmB,eAAe,CAACe,eAAe,CAAClC,KAAK,EAAE2B,KAAK,EAAEyI,KAAK,CAAC3I,MAAM,EAAE,WAAW,CAAC;UAClF;QACJ,CAAC,MACI,IAAIzB,KAAK,CAACmB,eAAe,EAAE;UAC5BnB,KAAK,CAACmB,eAAe,CAACe,eAAe,CAAClC,KAAK,EAAE2B,KAAK,EAAEyI,KAAK,CAAC3I,MAAM,EAAE2I,KAAK,CAACjI,IAAI,CAAC;QACjF,CAAC,MACI,IAAInC,KAAK,CAAC+K,eAAe,EAAE;UAC5B/K,KAAK,CAAC+K,eAAe,CAAC7I,eAAe,CAAClC,KAAK,EAAE2B,KAAK,EAAEyI,KAAK,CAAC3I,MAAM,EAAE2I,KAAK,CAACjI,IAAI,CAAC;QACjF;QACAe,MAAM,CAAClD,KAAK,CAACwK,eAAe,CAAC,GAAG,KAAK;MACzC;IACJ,CAAC,MACI,IAAIxK,KAAK,CAACe,cAAc,CAACiC,IAAI,KAAK,OAAO,EAAE;MAC5C,IAAIgI,KAAK,GAAG9H,MAAM,CAACgB,MAAM,CAACvC,KAAK,CAAC;MAChC,IAAI8I,eAAe,GAAG;QAClBC,UAAU,EAAE3H,MAAM,CAACqF,IAAI;QAAE1E,WAAW,EAAEX,MAAM,CAACe,KAAK;QAClD9D,KAAK,EAAEA,KAAK,CAAC2K,QAAQ,GAAG,CAAC,CAAC,GAAG3K,KAAK;QAAEkD,MAAM,EAAEA,MAAM;QAAEgB,MAAM,EAAE,CAAC8G,KAAK,CAAC;QAAEvH,IAAI,EAAE/D,WAAW;QAAE8I,MAAM,EAAE;MACpG,CAAC;MACD,IAAI,CAACxI,KAAK,CAACyI,OAAO,CAAC/I,WAAW,EAAE+K,eAAe,CAAC;MAChD,IAAIzK,KAAK,CAACe,cAAc,CAAC6J,gBAAgB,IAAI,CAACH,eAAe,CAACjC,MAAM,EAAE;QAClEwC,KAAK,CAAChK,OAAO,GAAG,CAACgK,KAAK,CAAChK,OAAO;QAC9B,IAAI8E,YAAY,GAAG,IAAI,CAACxD,iBAAiB,CAACX,KAAK,CAAC;QAChDmE,YAAY,CAAC9E,OAAO,GAAGgK,KAAK,CAAChK,OAAO;QACpC,IAAI,CAAC8J,mBAAmB,CAAC9K,KAAK,EAAEkD,MAAM,CAAC;MAC3C;IACJ,CAAC,MACI,IAAIlD,KAAK,CAACe,cAAc,CAACiC,IAAI,KAAK,OAAO,EAAE;MAC5C,IAAIkB,MAAM,GAAG,EAAE;MACf,IAAI4B,YAAY,GAAG,IAAI,CAACxD,iBAAiB,CAACX,KAAK,CAAC;MAChD,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEoC,EAAE,GAAGd,MAAM,CAACgB,MAAM,EAAEtC,EAAE,GAAGoC,EAAE,CAAClC,MAAM,EAAEF,EAAE,EAAE,EAAE;QACvD,IAAIoJ,KAAK,GAAGhH,EAAE,CAACpC,EAAE,CAAC;QAClB,IAAIkE,YAAY,CAACtD,IAAI,MAAMwI,KAAK,CAACzH,QAAQ,IAAIL,MAAM,CAACK,QAAQ,CAAC,EAAE;UAC3DW,MAAM,CAACV,IAAI,CAACwH,KAAK,CAAC;QACtB;MACJ;MACA,IAAIP,eAAe,GAAG;QAClBC,UAAU,EAAE3H,MAAM,CAACqF,IAAI;QAAE1E,WAAW,EAAEX,MAAM,CAACe,KAAK;QAClD9D,KAAK,EAAEA,KAAK,CAAC2K,QAAQ,GAAG,CAAC,CAAC,GAAG3K,KAAK;QAAEkD,MAAM,EAAEA,MAAM;QAAEgB,MAAM,EAAEA,MAAM;QAAET,IAAI,EAAE/D,WAAW;QAAE8I,MAAM,EAAE;MACnG,CAAC;MACD,IAAI,CAACxI,KAAK,CAACyI,OAAO,CAAC/I,WAAW,EAAE+K,eAAe,CAAC;MAChD,IAAIzK,KAAK,CAACe,cAAc,CAAC6J,gBAAgB,IAAI,CAACH,eAAe,CAACjC,MAAM,EAAE;QAClE1C,YAAY,CAAC9E,OAAO,GAAG,CAAC8E,YAAY,CAAC9E,OAAO;QAC5C,KAAK,IAAIiD,EAAE,GAAG,CAAC,EAAEgH,QAAQ,GAAG/G,MAAM,EAAED,EAAE,GAAGgH,QAAQ,CAACnJ,MAAM,EAAEmC,EAAE,EAAE,EAAE;UAC5D,IAAI+G,KAAK,GAAGC,QAAQ,CAAChH,EAAE,CAAC;UACxB+G,KAAK,CAAChK,OAAO,GAAG,CAACgK,KAAK,CAAChK,OAAO;QAClC;QACA,IAAI,CAAC8J,mBAAmB,CAAC9K,KAAK,EAAEkD,MAAM,CAAC;MAC3C;IACJ;EACJ,CAAC;EACDpD,MAAM,CAACtB,SAAS,CAACsM,mBAAmB,GAAG,UAAU9K,KAAK,EAAEkD,MAAM,EAAE;IAC5D,IAAIgI,mBAAmB,GAAG,EAAE;IAC5B,IAAIlL,KAAK,CAAC+K,eAAe,EAAE;MACvBG,mBAAmB,GAAGtM,MAAM,CAAC,EAAE,EAAEoB,KAAK,CAAC+K,eAAe,CAACG,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC;IAC3F;IACA,IAAKlL,KAAK,CAACmL,SAAS,CAACC,UAAU,CAACtJ,MAAM,GAAG,CAAC,IAAK,CAAC9B,KAAK,CAACqL,eAAe,IAAI,CAACrL,KAAK,CAACsL,YAAY,EAAE;MAC1F,OAAOtL,KAAK,CAACmL,SAAS,CAACI,SAAS,EAAE;QAC9BvL,KAAK,CAACmL,SAAS,CAACK,WAAW,CAACxL,KAAK,CAACmL,SAAS,CAACI,SAAS,CAAC;MAC1D;MACA7M,MAAM,CAACsB,KAAK,CAACmL,SAAS,CAAC;IAC3B;IACAnL,KAAK,CAACyL,aAAa,GAAG,KAAK;IAC3BzL,KAAK,CAAC0L,MAAM,GAAG1L,KAAK,CAACqL,eAAe;IACpCnI,MAAM,CAACyI,eAAe,GAAG,IAAI;IAC7B3L,KAAK,CAAC4L,2BAA2B,GAAG,EAAE;IACtC3M,aAAa,CAACO,UAAU,CAACQ,KAAK,CAAC6L,OAAO,CAACnK,EAAE,GAAG,oBAAoB,CAAC,CAACoK,gBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IACvG1M,oBAAoB,CAACY,KAAK,CAAC;IAC3B,IAAI,CAAC+L,oBAAoB,CAAC7I,MAAM,EAAElD,KAAK,CAAC;IACxCA,KAAK,CAACgM,SAAS,CAAC,CAAC;IACjBhM,KAAK,CAACiM,WAAW,CAAC,CAAC;IACnB/I,MAAM,CAACgJ,gBAAgB,CAAC,CAAC;IACzB,IAAI,CAACC,aAAa,CAACnM,KAAK,CAACuK,aAAa,CAAC;IACvC,KAAK,IAAI3I,EAAE,GAAG,CAAC,EAAEoC,EAAE,GAAGhE,KAAK,CAACuK,aAAa,EAAE3I,EAAE,GAAGoC,EAAE,CAAClC,MAAM,EAAEF,EAAE,EAAE,EAAE;MAC7D,IAAIwK,QAAQ,GAAGpI,EAAE,CAACpC,EAAE,CAAC;MACrB,IAAI,CAAC/C,iBAAiB,CAACuN,QAAQ,CAAC,EAAE;QAC9BpM,KAAK,CAACqM,YAAY,CAACC,uBAAuB,CAACF,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC;MACpE;IACJ;IACApM,KAAK,CAACuM,YAAY,CAAC,CAAC;IACpBvM,KAAK,CAACyI,OAAO,CAAC,QAAQ,EAAE;MAAEzI,KAAK,EAAEA;IAAM,CAAC,CAAC;IACzC,IAAIkL,mBAAmB,CAACpJ,MAAM,GAAG,CAAC,EAAE;MAChC9B,KAAK,CAAC+K,eAAe,CAACG,mBAAmB,GAAGA,mBAAmB;MAC/DlL,KAAK,CAAC+K,eAAe,CAACyB,eAAe,CAACxM,KAAK,EAAEA,KAAK,CAACyM,aAAa,CAAC;IACrE;IACA,IAAI,CAACzM,KAAK,CAACsL,YAAY,IAAItL,KAAK,CAACmB,eAAe,KAAKnB,KAAK,CAACoB,aAAa,KAAK,MAAM,IAAIpB,KAAK,CAACe,cAAc,CAACM,eAAe,CAAC,EAAE;MAC1HrB,KAAK,CAACmB,eAAe,CAACqL,eAAe,CAACxM,KAAK,EAAEA,KAAK,CAACoB,aAAa,CAAC;IACrE;IACApB,KAAK,CAAC0L,MAAM,GAAG,KAAK;IACpBxI,MAAM,CAACyI,eAAe,GAAG,KAAK;EAClC,CAAC;EACD7L,MAAM,CAACtB,SAAS,CAACqM,qBAAqB,GAAG,UAAU3H,MAAM,EAAEwJ,UAAU,EAAE;IACnExJ,MAAM,CAAClC,OAAO,GAAG,CAAC0L,UAAU;IAC5B,IAAI,IAAI,CAACC,eAAe,CAACzJ,MAAM,CAAC0J,KAAK,CAAC,EAAE;MACpC1J,MAAM,CAAC0J,KAAK,CAACC,kBAAkB,GAAG3J,MAAM,CAAC0J,KAAK,CAAC1J,MAAM,CAAC4J,IAAI,CAAC,UAAUC,KAAK,EAAE;QAAE,OAAQA,KAAK,CAAC/L,OAAO;MAAG,CAAC,CAAC;IAC5G;IACA,IAAI,IAAI,CAAC2L,eAAe,CAACzJ,MAAM,CAAC8J,KAAK,CAAC,IAAK9J,MAAM,CAACC,QAAQ,KAAK,QAAQ,IAAID,MAAM,CAACf,IAAI,KAAK,MAAO,EAAE;MAChGe,MAAM,CAAC8J,KAAK,CAACH,kBAAkB,GAAG3J,MAAM,CAAC8J,KAAK,CAAC9J,MAAM,CAAC4J,IAAI,CAAC,UAAUC,KAAK,EAAE;QAAE,OAAQA,KAAK,CAAC/L,OAAO;MAAG,CAAC,CAAC;IAC5G;IACA,IAAIkC,MAAM,CAACU,UAAU,CAAC9B,MAAM,IAAIoB,MAAM,CAAClC,OAAO,EAAE;MAC5CkC,MAAM,CAACU,UAAU,CAACqJ,OAAO,CAAC,UAAUC,SAAS,EAAE;QAC3CA,SAAS,CAAClM,OAAO,GAAG,IAAI;MAC5B,CAAC,CAAC;IACN;EACJ,CAAC;EACDlB,MAAM,CAACtB,SAAS,CAACmO,eAAe,GAAG,UAAUQ,IAAI,EAAE;IAC/C,OAAQ,IAAI,CAACnN,KAAK,CAACoN,IAAI,CAACrL,OAAO,CAACoL,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9C,CAAC;EACDrN,MAAM,CAACtB,SAAS,CAACuN,oBAAoB,GAAG,UAAU7I,MAAM,EAAElD,KAAK,EAAE;IAC7D,IAAI,CAACA,KAAK,CAAC0L,MAAM,EAAE;MACf,OAAO,IAAI;IACf;IACAzM,aAAa,CAACe,KAAK,CAAC6L,OAAO,CAACnK,EAAE,GAAG,UAAU,IAAIwB,MAAM,CAACvB,KAAK,KAAK0L,SAAS,GAAGnK,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAACvB,KAAK,CAAC,GACvG,uBAAuB,CAAC;EAChC,CAAC;EACD7B,MAAM,CAACtB,SAAS,CAAC2N,aAAa,GAAG,UAAUmB,gBAAgB,EAAE;IACzD,KAAK,IAAI1L,EAAE,GAAG,CAAC,EAAE2L,kBAAkB,GAAGD,gBAAgB,EAAE1L,EAAE,GAAG2L,kBAAkB,CAACzL,MAAM,EAAEF,EAAE,EAAE,EAAE;MAC1F,IAAIsB,MAAM,GAAGqK,kBAAkB,CAAC3L,EAAE,CAAC;MACnC,IAAIsB,MAAM,CAACf,IAAI,CAACJ,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;QACpC,IAAIyL,MAAM,GAAItK,MAAM,CAACf,IAAI,CAACJ,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAImB,MAAM,CAACG,QAAQ,CAACtB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAE;QACvF,IAAI0L,OAAO,GAAGvK,MAAM,CAACf,IAAI,CAACJ,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC/B,KAAK,CAAC,QAAQ,IAAIwN,MAAM,GAAGC,OAAO,GAAG,WAAW,GAAG,MAAM,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC,CAACC,eAAe,CAACxK,MAAM,CAAC;MAClH;MACA,IAAIA,MAAM,CAAClC,OAAO,EAAE;QAChBkC,MAAM,CAACyK,QAAQ,GAAGN,SAAS;MAC/B;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIvN,MAAM,CAACtB,SAAS,CAACiC,KAAK,GAAG,UAAU2J,KAAK,EAAE;IACtC,IAAInK,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAACD,KAAK,CAACe,cAAc,CAACC,OAAO,EAAE;MACpC;IACJ;IACA,IAAI4M,KAAK,GAAG,IAAI,CAAC5N,KAAK,CAAC6N,MAAM;IAC7B,IAAIC,KAAK,GAAG,IAAI,CAAC9N,KAAK,CAAC+N,MAAM;IAC7B,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIxM,QAAQ,GAAG4I,KAAK,CAAC3I,MAAM,CAACC,EAAE,CAACK,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAC3DqI,KAAK,CAAC3I,MAAM,CAACwM,UAAU,CAAC,IAAI,CAAC,GAAG7D,KAAK,CAAC3I,MAAM,CAACC,EAAE;IACnD,IAAIJ,aAAa,GAAG,CAAC,IAAI,CAACC,QAAQ,GAAG,QAAQ,EAAE,IAAI,CAACA,QAAQ,GAAG,gBAAgB,EAC3E,IAAI,CAACA,QAAQ,GAAG,SAAS,CAAC;IAC9B,IAAI8I,WAAW;IACf,KAAK,IAAIzI,EAAE,GAAG,CAAC,EAAEsM,eAAe,GAAG5M,aAAa,EAAEM,EAAE,GAAGsM,eAAe,CAACpM,MAAM,EAAEF,EAAE,EAAE,EAAE;MACjF,IAAIF,EAAE,GAAGwM,eAAe,CAACtM,EAAE,CAAC;MAC5B,IAAIJ,QAAQ,CAACO,OAAO,CAACL,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;QAC3B2I,WAAW,GAAGrI,QAAQ,CAACR,QAAQ,CAACS,KAAK,CAACP,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACjD,IAAI,CAACyI,WAAW,CAACE,WAAW,EAAED,KAAK,CAAC;QACpC;MACJ;IACJ;IACA,IAAI5I,QAAQ,CAACO,OAAO,CAAC,IAAI,CAACR,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;MAClD,IAAI,CAAC4M,UAAU,CAAC/D,KAAK,EAAE,IAAI,CAAC;IAChC,CAAC,MACI,IAAI5I,QAAQ,CAACO,OAAO,CAAC,IAAI,CAACR,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;MACzD,IAAI,CAAC4M,UAAU,CAAC/D,KAAK,EAAE,KAAK,CAAC;IACjC;IACA,IAAI,IAAI,CAACpK,KAAK,CAACsL,YAAY,IAAI,IAAI,CAAC8C,aAAa,CAACtM,MAAM,EAAE;MACtD,IAAI,CAACuM,iBAAiB,CAACT,KAAK,EAAEE,KAAK,CAAC;IACxC;IACAE,YAAY,GAAG,IAAI,CAACM,aAAa,CAACC,MAAM,CAAC,UAAUC,MAAM,EAAE;MACvD,OAAQrP,YAAY,CAACyO,KAAK,EAAGE,KAAK,IAAI7N,KAAK,CAAC+I,QAAQ,GAAG,CAAC/I,KAAK,CAACwO,iBAAiB,GAAG,CAAC,IAC/ExO,KAAK,CAACyO,aAAa,CAACzO,KAAK,CAACD,KAAK,CAACsL,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAGkD,MAAM,CAAC/E,IAAI,CAAC;IACrF,CAAC,CAAC;IACF,IAAIuE,YAAY,CAAClM,MAAM,IAAI,IAAI,CAAC9B,KAAK,CAACsL,YAAY,EAAE;MAChD,IAAI,CAACnB,WAAW,CAAC6D,YAAY,CAAC,CAAC,CAAC,CAACrM,KAAK,EAAEyI,KAAK,CAAC;IAClD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACItK,MAAM,CAACtB,SAAS,CAAC6P,iBAAiB,GAAG,UAAUT,KAAK,EAAEE,KAAK,EAAE;IACzD,IAAIa,OAAO,GAAG,IAAI,CAAC3O,KAAK,CAAC4O,QAAQ;IACjC,IAAIC,MAAM,GAAG,IAAI,CAAC1J,YAAY;IAC9B,IAAI2J,WAAW,GAAG,IAAI,CAAC9O,KAAK,CAACe,cAAc,CAACgI,MAAM,CAACtC,KAAK;IACxD,IAAIsI,UAAU,GAAG,IAAIxP,IAAI,CAACsP,MAAM,CAAC1K,CAAC,EAAE0K,MAAM,CAAC9E,CAAC,EAAE8E,MAAM,CAACpI,KAAK,EAAEoI,MAAM,CAACtI,MAAM,CAAC;IAC1EwI,UAAU,CAAC5K,CAAC,GAAG4K,UAAU,CAAC5K,CAAC,GAAG2K,WAAW,GAAG,CAAC;IAC7CC,UAAU,CAAChF,CAAC,GAAGgF,UAAU,CAAChF,CAAC,GAAG+E,WAAW,GAAG,CAAC;IAC7CC,UAAU,CAACtI,KAAK,GAAGsI,UAAU,CAACtI,KAAK,GAAGqI,WAAW;IACjDC,UAAU,CAACxI,MAAM,GAAGwI,UAAU,CAACxI,MAAM,GAAGuI,WAAW;IACnD,IAAI3P,YAAY,CAACyO,KAAK,EAAEE,KAAK,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;MACnD;MACA,IAAI,CAAC,IAAI,CAACzL,WAAW,EAAE;QACnB,IAAI,CAACqM,cAAc,CAACL,OAAO,EAAEI,UAAU,EAAEF,MAAM,CAAC;MACpD,CAAC,MACI;QACD,IAAI,CAACI,YAAY,CAACN,OAAO,EAAEI,UAAU,EAAEF,MAAM,CAAC;MAClD;MACA,OAAO,IAAI;IACf;IACA,IAAI1P,YAAY,CAACyO,KAAK,EAAEE,KAAK,EAAE,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;MACnD;MACA,IAAI,CAAC,IAAI,CAACzL,WAAW,EAAE;QACnB,IAAI,CAACsM,YAAY,CAACN,OAAO,EAAEI,UAAU,EAAEF,MAAM,CAAC;MAClD,CAAC,MACI;QACD,IAAI,CAACG,cAAc,CAACL,OAAO,EAAEI,UAAU,EAAEF,MAAM,CAAC;MACpD;MACA,OAAO,IAAI;IACf;EACJ,CAAC;EACD/O,MAAM,CAACtB,SAAS,CAACwQ,cAAc,GAAG,UAAUL,OAAO,EAAEI,UAAU,EAAEF,MAAM,EAAE;IACrE,IAAI,EAAE,IAAI,CAACJ,iBAAiB,GAAG,CAAC,EAAE;MAC9B,IAAI,CAACH,aAAa,GAAG,EAAE;MACvBK,OAAO,CAACO,SAAS,CAACH,UAAU,CAAC;MAC7BJ,OAAO,CAACQ,UAAU,CAAC,IAAIjQ,UAAU,CAAC,gBAAgB,EAAE,aAAa,EAAE;QAAEuH,KAAK,EAAE,CAAC;QAAE2I,KAAK,EAAE;MAAG,CAAC,EAAE,IAAI,EAAEL,UAAU,CAAC,CAAC;MAC9G,IAAI,CAACM,YAAY,CAAC,IAAI,CAACrP,KAAK,EAAE,IAAI,CAAC+C,MAAM,EAAE8L,MAAM,CAAC;MAClDF,OAAO,CAACW,aAAa,CAAC,CAAC;IAC3B,CAAC,MACI;MACD,EAAE,IAAI,CAACb,iBAAiB;IAC5B;EACJ,CAAC;EACD3O,MAAM,CAACtB,SAAS,CAACyQ,YAAY,GAAG,UAAUN,OAAO,EAAEI,UAAU,EAAEF,MAAM,EAAE;IACnE,IAAI,EAAE,IAAI,CAACJ,iBAAiB,GAAG,CAAC,IAAI,IAAI,CAACA,iBAAiB,IAAI,IAAI,CAACc,cAAc,EAAE;MAC/E,IAAI,CAACjB,aAAa,GAAG,EAAE;MACvBK,OAAO,CAACO,SAAS,CAACH,UAAU,CAAC;MAC7BJ,OAAO,CAACQ,UAAU,CAAC,IAAIjQ,UAAU,CAAC,gBAAgB,EAAE,YAAY,EAAE;QAAEuH,KAAK,EAAE,CAAC;QAAE2I,KAAK,EAAE;MAAG,CAAC,EAAE,IAAI,EAAEL,UAAU,CAAC,CAAC;MAC7G,IAAI,CAACM,YAAY,CAAC,IAAI,CAACrP,KAAK,EAAE,IAAI,CAAC+C,MAAM,EAAE8L,MAAM,CAAC;MAClDF,OAAO,CAACW,aAAa,CAAC,CAAC;IAC3B,CAAC,MACI;MACD,EAAE,IAAI,CAACb,iBAAiB;IAC5B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI3O,MAAM,CAACtB,SAAS,CAACgR,aAAa,GAAG,YAAY;IACzC,OAAO,QAAQ;EACnB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1P,MAAM,CAACtB,SAAS,CAACiR,OAAO,GAAG,YAAY;IACnC,IAAI,CAAC7O,mBAAmB,CAAC,CAAC;EAC9B,CAAC;EACD,OAAOd,MAAM;AACjB,CAAC,CAACf,UAAU,CAAE;AACd,SAASe,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}