{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Animation, compile as templateComplier, Browser } from '@syncfusion/ej2-base';\nimport { merge, extend, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { createElement, remove } from '@syncfusion/ej2-base';\nimport { Index } from '../../common/model/base';\nimport { VisibleLabels } from '../../chart/axis/axis';\nimport { axisLabelRender, regSub } from '../model/constants';\nimport { measureText, Rect, TextOption, Size, PathOption, SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to sort the dataSource, by default it sort the data in ascending order.\n *\n * @param  {Object} data chart data\n * @param  {string} fields date fields\n * @param  {boolean} isDescending boolean values of descending\n * @returns {Object[]} It returns chart data which be sorted.\n */\nexport function sort(data, fields, isDescending) {\n  var sortData = extend([], data, null);\n  for (var i = 0; i < sortData.length; i++) {\n    for (var j = 0; j < fields.length; j++) {\n      if (sortData[i][fields[j]] instanceof Date) {\n        sortData[i][fields[j]] = sortData[i][fields[j]].getTime();\n      }\n    }\n  }\n  sortData.sort(function (a, b) {\n    var first = 0;\n    var second = 0;\n    for (var i = 0; i < fields.length; i++) {\n      first += a[fields[i]];\n      second += b[fields[i]];\n    }\n    if (!isDescending && first < second || isDescending && first > second) {\n      return -1;\n    } else if (first === second) {\n      return 0;\n    }\n    return 1;\n  });\n  return sortData;\n}\n/**\n * Checks if a label contains a line break.\n *\n * @param {string} label - The label to check.\n * @returns {boolean} - True if the label contains a line break, otherwise false.\n */\nexport function isBreakLabel(label) {\n  return label.indexOf('<br>') !== -1;\n}\n/**\n * Retrieves the visible data points from a series.\n *\n * @param {Series | Chart3DSeries} series - The series to retrieve the visible data points.\n * @returns {Points[]} - An array containing the visible data points.\n */\nexport function getVisiblePoints(series) {\n  var points = extend([], series.points, null, true);\n  var tempPoints = [];\n  var tempPoint;\n  var pointIndex = 0;\n  for (var i = 0; i < points.length; i++) {\n    tempPoint = points[i];\n    if (isNullOrUndefined(tempPoint.x)) {\n      continue;\n    } else {\n      tempPoint.index = pointIndex++;\n      tempPoints.push(tempPoint);\n    }\n  }\n  return tempPoints;\n}\n/**\n * Calculates the offset for positioning a scrollbar on a chart axis.\n *\n * @param {ScrollBar} scrollbar - The scrollbar object to position.\n * @param {boolean} isHorizontalAxis - Indicates whether the axis is horizontal.\n * @returns {number} An object containing the calculated top and left offsets for the scrollbar.\n */\nexport function calculateScrollbarOffset(scrollbar, isHorizontalAxis) {\n  var scrollbarPadding = 5;\n  var chart = scrollbar.component;\n  var titleHeight = 0;\n  var subTitleHeight = 0;\n  var titlePadding = chart.titleStyle.position === 'Top' || chart.titleStyle.position === 'Bottom' && !chart.legendSettings.visible ? 15 : 5;\n  if (chart.title) {\n    titleHeight = measureText(chart.title, chart.titleStyle, chart.themeStyle.chartTitleFont).height * chart.titleCollection.length + titlePadding;\n    if (chart.subTitle) {\n      subTitleHeight = measureText(chart.subTitle, chart.subTitleStyle, chart.themeStyle.chartSubTitleFont).height * chart.subTitleCollection.length;\n    }\n  }\n  var scrollbarOffsetValue;\n  if (isHorizontalAxis) {\n    if (scrollbar.axis.scrollbarSettings.position === 'Top') {\n      scrollbarOffsetValue = chart.margin.top + scrollbarPadding + (scrollbar.height + scrollbarPadding) * chart.scrollBarModule.topScrollBarCount + (chart.titleStyle.position === 'Top' ? titleHeight + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Top' ? chart.subTitleStyle.border.width + subTitleHeight : 0);\n      chart.scrollBarModule.topScrollBarCount++;\n    } else if (scrollbar.axis.scrollbarSettings.position === 'Bottom') {\n      scrollbarOffsetValue = chart.availableSize.height - ((scrollbar.height + scrollbarPadding) * chart.scrollBarModule.bottomScrollBarCount + scrollbar.height + chart.margin.bottom + scrollbarPadding + (chart.titleStyle.position === 'Bottom' ? titleHeight + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Bottom' ? chart.subTitleStyle.border.width + subTitleHeight : 0));\n      chart.scrollBarModule.bottomScrollBarCount++;\n    }\n  } else {\n    if (scrollbar.axis.scrollbarSettings.position === 'Right') {\n      scrollbarOffsetValue = chart.availableSize.width - ((scrollbar.height + scrollbarPadding) * chart.scrollBarModule.rightScrollBarCount + scrollbar.height + scrollbarPadding + chart.margin.right + (chart.titleStyle.position === 'Right' ? titleHeight + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Right' ? chart.subTitleStyle.border.width + subTitleHeight : 0));\n      chart.scrollBarModule.rightScrollBarCount++;\n    } else if (scrollbar.axis.scrollbarSettings.position === 'Left') {\n      scrollbarOffsetValue = chart.margin.left + scrollbarPadding + (scrollbar.height + scrollbarPadding) * chart.scrollBarModule.leftScrollBarCount + (chart.titleStyle.position === 'Left' ? titleHeight + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Left' ? chart.subTitleStyle.border.width + subTitleHeight : 0);\n      chart.scrollBarModule.leftScrollBarCount++;\n    }\n  }\n  return scrollbarOffsetValue;\n}\n/**\n * Rotates the size of text based on the provided angle.\n *\n * @param {FontModel} font - The font style of the text.\n * @param {string} text - The text to be rotated.\n * @param {number} angle - The angle of rotation.\n * @param {Chart | Chart3D} chart - The chart instance.\n * @param {FontModel} themeFontStyle - The font style based on the theme.\n * @returns {Size} - The rotated size of the text.\n */\nexport function rotateTextSize(font, text, angle, chart, themeFontStyle) {\n  var transformValue = chart.element.style.transform;\n  if (transformValue) {\n    chart.element.style.transform = '';\n  }\n  var renderer = new SvgRenderer(chart.element.id);\n  var labelText;\n  var textCollection = [];\n  var height;\n  var dy;\n  var label;\n  var tspanElement;\n  var options = {\n    id: 'rotate_text',\n    x: chart.initialClipRect.x,\n    y: chart.initialClipRect.y,\n    'font-size': font.size || themeFontStyle.size,\n    'font-style': font.fontStyle || themeFontStyle.fontStyle,\n    'font-family': font.fontFamily,\n    'font-weight': font.fontWeight || themeFontStyle.fontWeight,\n    'transform': 'rotate(' + angle + ', 0, 0)',\n    'text-anchor': 'middle'\n  };\n  if (isBreakLabel(text)) {\n    textCollection = text.split('<br>');\n    labelText = textCollection[0];\n  } else {\n    labelText = text;\n  }\n  var htmlObject = renderer.createText(options, labelText);\n  if (!chart.delayRedraw && !chart.redraw && !chart.stockChart) {\n    chart.element.appendChild(chart.svgObject);\n  }\n  // for line break label\n  if (typeof textCollection !== 'string' && textCollection.length > 1) {\n    for (var i = 1, len = textCollection.length; i < len; i++) {\n      height = measureText(textCollection[i], font, chart.themeStyle.axisLabelFont).height;\n      dy = options.y + i * height;\n      label = textCollection[i];\n      tspanElement = renderer.createTSpan({\n        'x': options.x,\n        'id': options.id,\n        'y': dy\n      }, label);\n      htmlObject.appendChild(tspanElement);\n    }\n  }\n  var axisSvgObject = chart.svgRenderer.createSvg({\n    id: 'AxisLabelMax_svg',\n    width: chart.availableSize.width,\n    height: chart.availableSize.height\n  });\n  document.body.appendChild(axisSvgObject);\n  axisSvgObject.appendChild(htmlObject);\n  var box = htmlObject.getBoundingClientRect();\n  if (transformValue) {\n    chart.element.style.transform = transformValue;\n  }\n  remove(axisSvgObject);\n  if (!chart.delayRedraw && !chart.redraw && !chart.stockChart && !chart.pointsAdded) {\n    remove(chart.svgObject);\n  }\n  if (chart.enableCanvas) {\n    var textWidth = measureText(text, font, chart.themeStyle.axisLabelFont).width;\n    var textHeight = measureText(text, font, chart.themeStyle.axisLabelFont).height;\n    var angleInRadians = angle * Math.PI / 180; // Convert the rotation angle to radians\n    var rotatedTextWidth = Math.abs(Math.cos(angleInRadians) * textWidth) + Math.abs(Math.sin(angleInRadians) * textHeight);\n    var rotatedTextHeight = Math.abs(Math.sin(angleInRadians) * textWidth) + Math.abs(Math.cos(angleInRadians) * textHeight);\n    return new Size(rotatedTextWidth, rotatedTextHeight);\n  }\n  return new Size(box.right - box.left, box.bottom - box.top);\n}\n/**\n * Removes the specified element.\n *\n * @param {string | Element} id - The id or reference of the element to be removed.\n * @returns {void}\n */\nexport function removeElement(id) {\n  if (!id) {\n    return null;\n  }\n  var element = typeof id === 'string' ? getElement(id) : id;\n  if (element) {\n    remove(element);\n  }\n}\n/**\n * Calculates the logarithm of a specified value with respect to a specified base.\n *\n * @param {number} value - The value for which to calculate the logarithm.\n * @param {number} base - The base of the logarithm.\n * @returns {number} - The logarithm of the value with respect to the specified base.\n */\nexport function logBase(value, base) {\n  return Math.log(value) / Math.log(base);\n}\n/**\n * Displays a tooltip at the specified coordinates with the given text.\n *\n * @param {string} text - The text content of the tooltip.\n * @param {number} x - The x-coordinate where the tooltip should be displayed.\n * @param {number} y - The y-coordinate where the tooltip should be displayed.\n * @param {number} areaWidth - The width of the area where the tooltip is displayed.\n * @param {string} id - The id of the tooltip element.\n * @param {Element} element - The element to which the tooltip is appended.\n * @param {boolean} isTouch - Indicates whether the tooltip is displayed on a touch device.\n * @param {boolean} isTitleOrLegendEnabled - Indicates whether the tooltip is enabled for title or legend.\n * @param {Rect} bound - The bounding rectangle in which the tooltip should be confined.\n * @returns {void}\n * @private\n */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, isTitleOrLegendEnabled, bound) {\n  //let id1: string = 'EJ2_legend_tooltip';\n  var tooltip = document.getElementById(id);\n  var size = measureText(text, {\n    fontFamily: 'Segoe UI',\n    size: '12px',\n    fontStyle: 'Normal',\n    fontWeight: 'Regular'\n  });\n  var width = size.width + 5;\n  x = x + width > areaWidth ? x - (width + 15) : x;\n  if (bound && x < bound.x) {\n    x = bound.x;\n  }\n  y = isTitleOrLegendEnabled ? y - size.height / 2 : y + 15;\n  if (!tooltip) {\n    tooltip = createElement('div', {\n      id: id,\n      styles: 'top:' + y.toString() + 'px;left:' + (x + 15).toString() + 'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' + 'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' + 'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n    });\n    tooltip.innerText = text;\n    element.appendChild(tooltip);\n    var left = parseInt(tooltip.style.left.replace('px', ''), 10);\n    if (left < 0) {\n      tooltip.style.left = '0px';\n    }\n  } else {\n    tooltip.innerText = text;\n    tooltip.style.top = y.toString() + 'px';\n    tooltip.style.left = (x + 15).toString() + 'px';\n  }\n  if (isTouch) {\n    setTimeout(function () {\n      removeElement(id);\n    }, 1500);\n  }\n}\n/**\n * Checks if a value is within the specified range.\n *\n * @param {number} value - The value to check.\n * @param {VisibleRangeModel} range - The range to check against.\n * @returns {boolean} - True if the value is inside the range, otherwise false.\n */\nexport function inside(value, range) {\n  return value < range.max && value > range.min;\n}\n/**\n * Checks if a value is within the specified range.\n *\n * @param {number} value - The value to check.\n * @param {VisibleRangeModel} range - The range to check against.\n * @returns {boolean} - True if the value is inside the range, otherwise false.\n */\nexport function withIn(value, range) {\n  return value <= range.max && value >= range.min;\n}\n/**\n * Adjusts the value based on the axis type.\n *\n * @param {number} value - The value to adjust.\n * @param {Axis} axis - The axis used for adjustment.\n * @returns {number} - The adjusted value.\n */\nexport function logWithIn(value, axis) {\n  return axis.valueType === 'Logarithmic' ? logBase(value, axis.logBase) : value;\n}\n/**\n * Checks if a point is within the range of the previous and next points in a series.\n *\n * @param {Points} previousPoint - The previous point in the series.\n * @param {Points} currentPoint - The current point to check.\n * @param {Points} nextPoint - The next point in the series.\n * @param {Series} series - The series to which the points belong.\n * @returns {boolean} - A boolean indicating if the point is within the range.\n * @private\n */\nexport function withInRange(previousPoint, currentPoint, nextPoint, series) {\n  if (series.chart.zoomModule && series.chart.zoomSettings.enableAnimation) {\n    return true;\n  }\n  var mX2 = logWithIn(currentPoint.xValue, series.xAxis);\n  var mX1 = previousPoint ? logWithIn(previousPoint.xValue, series.xAxis) : mX2;\n  var mX3 = nextPoint ? logWithIn(nextPoint.xValue, series.xAxis) : mX2;\n  var xStart = Math.floor(series.xAxis.visibleRange.min);\n  var xEnd = Math.ceil(series.xAxis.visibleRange.max);\n  return mX1 >= xStart && mX1 <= xEnd || mX2 >= xStart && mX2 <= xEnd || mX3 >= xStart && mX3 <= xEnd || xStart >= mX1 && xStart <= mX3;\n}\n/**\n * Calculates the sum of an array of numbers.\n *\n * @param {number[]} values - An array of numbers.\n * @returns {number} - The sum of the numbers in the array.\n */\nexport function sum(values) {\n  var sum = 0;\n  for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n    var value = values_1[_i];\n    sum += value;\n  }\n  return sum;\n}\n/**\n * Calculates the sum of elements in a subarray.\n *\n * @param {Object[]} values - The array containing elements.\n * @param {number} first - The index of the first element in the subarray.\n * @param {number} last - The index of the last element in the subarray.\n * @param {number[]} index - The array of indices.\n * @param {Series} series - The series object.\n * @returns {number} - The sum of elements in the subarray.\n * @private\n */\nexport function subArraySum(values, first, last, index, series) {\n  var sum = 0;\n  var sumIndex = 0;\n  var isFirst = true;\n  if (index !== null) {\n    for (var i = first + 1; i < last; i++) {\n      if (index.indexOf(i) === -1 && (i === series.intermediateSumIndexes[sumIndex] || series.intermediateSumIndexes[series.intermediateSumIndexes.length - 1] < i)) {\n        sum += values[i][series.yName];\n        if (i === series.intermediateSumIndexes[sumIndex]) {\n          isFirst = false;\n          sumIndex += 1;\n        }\n      }\n    }\n  } else {\n    for (var i = first + 1; i < last; i++) {\n      if (!isNullOrUndefined(values[i][series.yName]) && !isNullOrUndefined(series.sumIndexes) && series.sumIndexes.indexOf(i) === -1) {\n        sum += values[i][series.yName];\n      }\n    }\n  }\n  return sum;\n}\n/**\n * Subtracts thickness from the given rectangle.\n *\n * @param {Rect} rect - The rectangle from which to subtract thickness.\n * @param {Thickness} thickness - The thickness to subtract.\n * @returns {Rect} - The resulting rectangle after subtracting thickness.\n */\nexport function subtractThickness(rect, thickness) {\n  rect.x += thickness.left;\n  rect.y += thickness.top;\n  rect.width -= thickness.left + thickness.right;\n  rect.height -= thickness.top + thickness.bottom;\n  return rect;\n}\n/**\n * Subtracts a rectangle representing thickness from the given rectangle.\n *\n * @param {Rect} rect - The rectangle from which to subtract the thickness rectangle.\n * @param {Thickness} thickness - The rectangle representing the thickness to subtract.\n * @returns {Rect} - The resulting rectangle after subtracting the thickness rectangle.\n */\nexport function subtractRect(rect, thickness) {\n  rect.x += thickness.x;\n  rect.y += thickness.y;\n  rect.width -= thickness.x + thickness.width;\n  rect.height -= thickness.y + thickness.height;\n  return rect;\n}\n/**\n * Converts a degree value to a location on the chart based on the provided radius and center point.\n *\n * @param {number} degree - The degree value to convert.\n * @param {number} radius - The radius from the center point.\n * @param {ChartLocation} center - The center point of the chart.\n * @returns {ChartLocation} - The location on the chart corresponding to the degree value.\n */\nexport function degreeToLocation(degree, radius, center) {\n  var radian = degree * Math.PI / 180;\n  return new ChartLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Converts a degree value to radians.\n *\n * @param {number} degree - The degree value to convert.\n * @returns {number} - The equivalent value in radians.\n */\nexport function degreeToRadian(degree) {\n  return degree * (Math.PI / 180);\n}\n/**\n * Get the coordinates of a rotated rectangle.\n *\n * @param {ChartLocation[]} actualPoints - The coordinates of the original rectangle.\n * @param {number} centerX - The x-coordinate of the center of rotation.\n * @param {number} centerY - The y-coordinate of the center of rotation.\n * @param {number} angle - The angle of rotation in degrees.\n * @returns {ChartLocation[]} - The coordinates of the rotated rectangle.\n */\nexport function getRotatedRectangleCoordinates(actualPoints, centerX, centerY, angle) {\n  var coordinatesAfterRotation = [];\n  for (var i = 0; i < 4; i++) {\n    var point = actualPoints[i];\n    // translate point to origin\n    var tempX = point.x - centerX;\n    var tempY = point.y - centerY;\n    // now apply rotation\n    var rotatedX = tempX * Math.cos(degreeToRadian(angle)) - tempY * Math.sin(degreeToRadian(angle));\n    var rotatedY = tempX * Math.sin(degreeToRadian(angle)) + tempY * Math.cos(degreeToRadian(angle));\n    // translate back\n    point.x = rotatedX + centerX;\n    point.y = rotatedY + centerY;\n    coordinatesAfterRotation.push(new ChartLocation(point.x, point.y));\n  }\n  return coordinatesAfterRotation;\n}\n/**\n * Helper function to determine whether there is an intersection between the two polygons described\n * by the lists of vertices. Uses the Separating Axis Theorem.\n *\n * @param {ChartLocation[]} a an array of connected points [{x:, y:}, {x:, y:},...] that form a closed polygon.\n * @param {ChartLocation[]} b an array of connected points [{x:, y:}, {x:, y:},...] that form a closed polygon.\n * @returns {boolean} if there is any intersection between the 2 polygons, false otherwise.\n */\nexport function isRotatedRectIntersect(a, b) {\n  var polygons = [a, b];\n  var minA;\n  var maxA;\n  var projected;\n  var i;\n  var i1;\n  var j;\n  var minB;\n  var maxB;\n  for (i = 0; i < polygons.length; i++) {\n    // for each polygon, look at each edge of the polygon, and determine if it separates\n    // the two shapes\n    var polygon = polygons[i];\n    for (i1 = 0; i1 < polygon.length; i1++) {\n      // grab 2 vertices to create an edge\n      var i2 = (i1 + 1) % polygon.length;\n      var p1 = polygon[i1];\n      var p2 = polygon[i2];\n      // find the line perpendicular to this edge\n      var normal = new ChartLocation(p2.y - p1.y, p1.x - p2.x);\n      minA = maxA = undefined;\n      // for each vertex in the first shape, project it onto the line perpendicular to the edge\n      // and keep track of the min and max of these values\n      for (j = 0; j < a.length; j++) {\n        projected = normal.x * a[j].x + normal.y * a[j].y;\n        if (isNullOrUndefined(minA) || projected < minA) {\n          minA = projected;\n        }\n        if (isNullOrUndefined(maxA) || projected > maxA) {\n          maxA = projected;\n        }\n      }\n      // for each vertex in the second shape, project it onto the line perpendicular to the edge\n      // and keep track of the min and max of these values\n      minB = maxB = undefined;\n      for (j = 0; j < b.length; j++) {\n        projected = normal.x * b[j].x + normal.y * b[j].y;\n        if (isNullOrUndefined(minB) || projected < minB) {\n          minB = projected;\n        }\n        if (isNullOrUndefined(maxB) || projected > maxB) {\n          maxB = projected;\n        }\n      }\n      // if there is no overlap between the projects, the edge we are looking at separates the two\n      // polygons, and we know there is no overlap\n      if (maxA < minB || maxB < minA) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n/**\n * Generates the legend for accumulation chart.\n *\n * @param {number} locX - The x-coordinate of the legend position.\n * @param {number} locY - The y-coordinate of the legend position.\n * @param {number} r - The radius of the chart.\n * @param {number} height - The height of the legend.\n * @param {number} width - The width of the legend.\n * @returns {string} - The generated legend.\n */\nfunction getAccumulationLegend(locX, locY, r, height, width) {\n  var cartesianlarge = degreeToLocation(270, r, new ChartLocation(locX, locY));\n  var cartesiansmall = degreeToLocation(270, r, new ChartLocation(locX + width / 10, locY));\n  return 'M' + ' ' + locX + ' ' + locY + ' ' + 'L' + ' ' + (locX + r) + ' ' + locY + ' ' + 'A' + ' ' + r + ' ' + r + ' ' + 0 + ' ' + 1 + ' ' + 1 + ' ' + cartesianlarge.x + ' ' + cartesianlarge.y + ' ' + 'Z' + ' ' + 'M' + ' ' + (locX + width / 10) + ' ' + (locY - height / 10) + ' ' + 'L' + (locX + r) + ' ' + (locY - height / 10) + ' ' + 'A' + ' ' + r + ' ' + r + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + cartesiansmall.x + ' ' + cartesiansmall.y + ' ' + 'Z';\n}\n/**\n * Calculates the angle between two points.\n *\n * @param {ChartLocation} center - The center point.\n * @param {ChartLocation} point - The point to calculate the angle from the center.\n * @returns {number} - The angle in degrees.\n */\nexport function getAngle(center, point) {\n  var angle = Math.atan2(point.y - center.y, point.x - center.x);\n  angle = angle < 0 ? 6.283 + angle : angle;\n  return angle * (180 / Math.PI);\n}\n/**\n * Returns a sub-array of values starting from the specified index.\n *\n * @param {number[]} values - The array of numbers.\n * @param {number} index - The index from which the sub-array starts.\n * @returns {number[]} - The sub-array of values.\n */\nexport function subArray(values, index) {\n  var subArray = [];\n  for (var i = 0; i <= index - 1; i++) {\n    subArray.push(values[i]);\n  }\n  return subArray;\n}\n/**\n * Converts a value to its corresponding coefficient based on the axis range.\n *\n * @param {number} value - The value to be converted.\n * @param {Axis} axis - The axis object containing range information.\n * @returns {number} - The coefficient value corresponding to the input value.\n */\nexport function valueToCoefficient(value, axis) {\n  var range = axis.visibleRange;\n  var result = (value - range.min) / range.delta;\n  var isInverse = axis.isChart ? axis.isAxisInverse : axis.isInversed;\n  return isInverse ? 1 - result : result;\n}\n/**\n * Transforms a point to its visible position based on the axes range and inversion.\n *\n * @param {number} x - The x-coordinate of the point.\n * @param {number} y - The y-coordinate of the point.\n * @param {Axis} xAxis - The x-axis object containing range information.\n * @param {Axis} yAxis - The y-axis object containing range information.\n * @param {boolean} [isInverted=false] - Specifies if the chart is inverted.\n * @param {Series} [series] - The series object for additional information (optional).\n * @returns {ChartLocation} - The transformed visible position of the point.\n */\nexport function TransformToVisible(x, y, xAxis, yAxis, isInverted, series) {\n  x = xAxis.valueType === 'Logarithmic' ? logBase(x > 1 ? x : 1, xAxis.logBase) : x;\n  y = yAxis.valueType === 'Logarithmic' ? logBase(y > 1 ? y : 1, yAxis.logBase) : y;\n  x += xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks' && series.type !== 'Radar' ? 0.5 : 0;\n  var radius = series.chart.radius * valueToCoefficient(y, yAxis);\n  var point = CoefficientToVector(valueToPolarCoefficient(x, xAxis), series.chart.primaryXAxis.startAngle);\n  return {\n    x: series.clipRect.width / 2 + series.clipRect.x + radius * point.x,\n    y: series.clipRect.height / 2 + series.clipRect.y + radius * point.y\n  };\n}\n/**\n * Finds the index from the given id.\n *\n * @param {string} id - The id to search for.\n * @param {boolean} [isPoint=false] - Specifies if the id represents a data point (optional).\n * @returns {Index} - The index found from the id.\n */\nexport function indexFinder(id, isPoint) {\n  if (isPoint === void 0) {\n    isPoint = false;\n  }\n  var ids = ['NaN', 'NaN'];\n  if (id.indexOf('_polygon') > -1) {\n    ids = ['NaN', 'NaN'];\n  } else if (id.indexOf('_Point_') > -1) {\n    ids = id.split('_Series_')[1].split('_Point_');\n  } else if (id.indexOf('_shape_') > -1 && (!isPoint || isPoint && id.indexOf('_legend_') === -1)) {\n    ids = id.split('_shape_');\n    ids[0] = '0';\n  } else if (id.indexOf('_text_') > -1 && (!isPoint || isPoint && id.indexOf('_legend_') === -1)) {\n    ids = id.split('_text_');\n    ids[0] = '0';\n  } else if (id.indexOf('_datalabel_') > -1) {\n    ids = id.split('_datalabel_')[1].split('_g_');\n    ids[0] = ids[0].replace('Series_', '');\n  } else if (id.indexOf('TextGroup') > -1) {\n    ids = id.split('TextGroup');\n    ids[0] = ids[1];\n  } else if (id.indexOf('ShapeGroup') > -1) {\n    ids = id.split('ShapeGroup');\n    ids[0] = ids[1];\n  }\n  return new Index(parseInt(ids[0], 10), parseInt(ids[1], 10));\n}\n/**\n * Converts a coefficient value to a vector representing a point on the circumference of a circle.\n *\n * @param {number} coefficient - The coefficient value to convert.\n * @param {number} startAngle - The starting angle of the circle.\n * @returns {ChartLocation} - The vector representing the point on the circle.\n */\nexport function CoefficientToVector(coefficient, startAngle) {\n  startAngle = startAngle < 0 ? startAngle + 360 : startAngle;\n  var angle = Math.PI * (1.5 - 2 * coefficient);\n  angle = angle + startAngle * Math.PI / 180;\n  return {\n    x: Math.cos(angle),\n    y: Math.sin(angle)\n  };\n}\n/**\n * Converts a value to a polar coefficient value based on the axis.\n *\n * @param {number} value - The value to convert.\n * @param {Axis} axis - The axis object.\n * @returns {number} - The polar coefficient value.\n */\nexport function valueToPolarCoefficient(value, axis) {\n  var range = axis.visibleRange;\n  var delta;\n  var length;\n  if (axis.valueType !== 'Category') {\n    delta = range.max - (axis.valueType === 'DateTime' ? axis.dateTimeInterval : range.interval) - range.min;\n    length = axis.visibleLabels.length - 1;\n    delta = delta === 0 ? 1 : delta;\n  } else {\n    // To split an interval equally based on visible labels count\n    delta = axis.visibleLabels.length === 1 ? 1 : axis.visibleLabels[axis.visibleLabels.length - 1].value - axis.visibleLabels[0].value;\n    length = axis.visibleLabels.length;\n  }\n  return axis.isAxisInverse ? (value - range.min) / delta * (1 - 1 / length) : 1 - (value - range.min) / delta * (1 - 1 / length);\n}\n/** @private */\nvar Mean = /** @class */function () {\n  function Mean(verticalStandardMean, verticalSquareRoot, horizontalStandardMean, horizontalSquareRoot, verticalMean, horizontalMean) {\n    this.verticalStandardMean = verticalStandardMean;\n    this.horizontalStandardMean = horizontalStandardMean;\n    this.verticalSquareRoot = verticalSquareRoot;\n    this.horizontalSquareRoot = horizontalSquareRoot;\n    this.verticalMean = verticalMean;\n    this.horizontalMean = horizontalMean;\n  }\n  return Mean;\n}();\nexport { Mean };\n/** @private */\nvar PolarArc = /** @class */function () {\n  function PolarArc(startAngle, endAngle, innerRadius, radius, currentXPosition) {\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    this.innerRadius = innerRadius;\n    this.radius = radius;\n    this.currentXPosition = currentXPosition;\n  }\n  return PolarArc;\n}();\nexport { PolarArc };\n/**\n * Creates a tooltip element with the specified id, text, position, and font size.\n *\n * @param {string} id - The id of the tooltip element.\n * @param {string} text - The text content of the tooltip.\n * @param {number} top - The top position of the tooltip.\n * @param {number} left - The left position of the tooltip.\n * @param {string} fontSize - The font size of the tooltip text.\n * @returns {void}\n */\nexport function createTooltip(id, text, top, left, fontSize) {\n  var tooltip = getElement(id);\n  var style = 'top:' + top.toString() + 'px;' + 'left:' + left.toString() + 'px;' + 'color:black !important; ' + 'background:#FFFFFF !important; ' + 'position:absolute;border:1px solid #707070;font-size:' + fontSize + ';border-radius:2px; z-index:1';\n  if (!tooltip) {\n    tooltip = createElement('div', {\n      id: id,\n      innerHTML: '&nbsp;' + text + '&nbsp;',\n      styles: style\n    });\n    document.body.appendChild(tooltip);\n  } else {\n    tooltip.setAttribute('innerHTML', '&nbsp;' + text + '&nbsp;');\n    tooltip.style.cssText = style;\n  }\n}\n/**\n * Creates zooming labels for the specified axis and adds them to the parent element.\n *\n * @param {Chart} chart - The chart instance.\n * @param {Axis} axis - The axis for which to create zooming labels.\n * @param {Element} parent - The parent element to which the labels will be appended.\n * @param {number} index - The index of the label.\n * @param {boolean} isVertical - Indicates whether the axis is vertical.\n * @param {Rect} rect - The bounding rectangle of the label.\n * @returns {Element} - The created zooming label element.\n */\nexport function createZoomingLabels(chart, axis, parent, index, isVertical, rect) {\n  var margin = 5;\n  var opposedPosition = axis.isAxisOpposedPosition;\n  var anchor = chart.enableRtl ? 'end' : isVertical ? 'start' : 'auto';\n  var size;\n  var chartRect = chart.availableSize.width;\n  var pathElement;\n  var x;\n  var y;\n  var rx = 3;\n  var arrowLocation;\n  var direction;\n  var scrollBarHeight = axis.scrollbarSettings.enable || axis.zoomingScrollBar && axis.zoomingScrollBar.svgObject ? axis.scrollBarHeight : 0;\n  var isRtlEnabled = chart.enableRtl && !isVertical && !axis.isInversed || axis.isInversed && !(chart.enableRtl && !isVertical);\n  for (var i = 0; i < 2; i++) {\n    size = measureText(i ? isRtlEnabled ? axis.startLabel : axis.endLabel : isRtlEnabled ? axis.endLabel : axis.startLabel, axis.labelStyle, chart.themeStyle.axisLabelFont);\n    if (isVertical) {\n      arrowLocation = i ? new ChartLocation(rect.x - scrollBarHeight, rect.y + rx) : new ChartLocation(axis.rect.x - scrollBarHeight, rect.y + rect.height - rx);\n      x = rect.x + (opposedPosition ? rect.width + margin + scrollBarHeight : -(size.width + margin + margin + scrollBarHeight));\n      y = rect.y + (i ? 0 : rect.height - size.height - margin);\n      x += x < 0 || chartRect < x + size.width + margin ? opposedPosition ? -(size.width / 2) : size.width / 2 : 0;\n      direction = findCrosshairDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, false, false, !opposedPosition, arrowLocation.x, arrowLocation.y + (i ? -rx : rx));\n    } else {\n      arrowLocation = i ? new ChartLocation(rect.x + rect.width - rx, rect.y + rect.height + scrollBarHeight) : new ChartLocation(rect.x + rx, rect.y + rect.height + scrollBarHeight);\n      x = rect.x + (i ? rect.width - size.width - margin : 0);\n      y = opposedPosition ? rect.y - size.height - 10 - scrollBarHeight : rect.y + rect.height + margin + scrollBarHeight;\n      direction = findCrosshairDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, opposedPosition, !opposedPosition, false, arrowLocation.x + (i ? rx : -rx), arrowLocation.y);\n    }\n    x = x + margin / 2;\n    y = y + 3 * (size.height / 4) + margin / 2;\n    pathElement = chart.renderer.drawPath({\n      'id': chart.element.id + '_Zoom_' + index + '_AxisLabel_Shape_' + i,\n      'fill': chart.themeStyle.crosshairFill,\n      'width': 2,\n      'color': chart.themeStyle.crosshairFill,\n      'opacity': 1,\n      'stroke-dasharray': null,\n      'd': direction\n    }, null);\n    parent.appendChild(pathElement);\n    if (chart.theme === 'Fluent' || chart.theme === 'FluentDark') {\n      var shadowId = chart.element.id + '_shadow';\n      pathElement.setAttribute('filter', Browser.isIE ? '' : 'url(#' + shadowId + ')');\n      var shadow = '<filter id=\"' + shadowId + '\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/>';\n      shadow += '<feOffset dx=\"3\" dy=\"3\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.5\"/>';\n      shadow += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n      var defElement = chart.renderer.createDefs();\n      defElement.setAttribute('id', chart.element.id + 'SVG_tooltip_definition');\n      parent.appendChild(defElement);\n      defElement.innerHTML = shadow;\n      pathElement.setAttribute('stroke', '#cccccc');\n      pathElement.setAttribute('stroke-width', '0.5');\n    }\n    textElement(chart.renderer, new TextOption(chart.element.id + '_Zoom_' + index + '_AxisLabel_' + i, x, y, anchor, i ? isRtlEnabled ? axis.startLabel : axis.endLabel : isRtlEnabled ? axis.endLabel : axis.startLabel), {\n      color: chart.themeStyle.crosshairLabelFont.color,\n      fontFamily: 'Segoe UI',\n      fontWeight: 'Regular',\n      size: '11px'\n    }, chart.themeStyle.crosshairLabelFont.color, parent, null, null, null, null, null, null, null, null, null, null, chart.themeStyle.crosshairLabelFont);\n  }\n  return parent;\n}\n/**\n * Finds the direction of the crosshair based on the provided parameters.\n *\n * @param {number} rX - The x-coordinate of the crosshair line.\n * @param {number} rY - The y-coordinate of the crosshair line.\n * @param {Rect} rect - The bounding rectangle of the crosshair.\n * @param {ChartLocation} arrowLocation - The location of the arrow in the crosshair.\n * @param {number} arrowPadding - The padding for the arrow.\n * @param {boolean} top - Indicates whether the crosshair is positioned at the top.\n * @param {boolean} bottom - Indicates whether the crosshair is positioned at the bottom.\n * @param {boolean} left - Indicates whether the crosshair is positioned at the left.\n * @param {number} tipX - The x-coordinate of the crosshair tip.\n * @param {number} tipY - The y-coordinate of the crosshair tip.\n * @returns {string} - The direction of the crosshair ('Top', 'Bottom', 'Left', 'Right', 'Center').\n */\nexport function findCrosshairDirection(rX, rY, rect, arrowLocation, arrowPadding, top, bottom, left, tipX, tipY) {\n  var direction = '';\n  var startX = rect.x;\n  var startY = rect.y;\n  var width = rect.x + rect.width;\n  var height = rect.y + rect.height;\n  if (top) {\n    direction = direction.concat('M' + ' ' + startX + ' ' + (startY + rY) + ' Q ' + startX + ' ' + startY + ' ' + (startX + rX) + ' ' + startY);\n    direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + startY + ' Q ' + width + ' ' + startY + ' ' + width + ' ' + (startY + rY));\n    direction = direction.concat(' L' + ' ' + width + ' ' + (height - rY) + ' Q ' + width + ' ' + height + ' ' + (width - rX) + ' ' + height);\n    if (arrowPadding !== 0) {\n      direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + height);\n      direction = direction.concat(' L' + ' ' + tipX + ' ' + (height + arrowPadding) + ' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + height);\n    }\n    if (arrowLocation.x - arrowPadding / 2 > startX) {\n      direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' ' + height + ' ' + startX + ' ' + (height - rY) + ' z');\n    } else {\n      if (arrowPadding === 0) {\n        direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' ' + height + ' ' + startX + ' ' + (height - rY) + ' z');\n      } else {\n        direction = direction.concat(' L' + ' ' + startX + ' ' + (height + rY) + ' z');\n      }\n    }\n  } else if (bottom) {\n    direction = direction.concat('M' + ' ' + startX + ' ' + (startY + rY) + ' Q ' + startX + ' ' + startY + ' ' + (startX + rX) + ' ' + startY + ' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + startY);\n    direction = direction.concat(' L' + ' ' + tipX + ' ' + arrowLocation.y);\n    direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + startY);\n    direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + startY + ' Q ' + width + ' ' + startY + ' ' + width + ' ' + (startY + rY));\n    direction = direction.concat(' L' + ' ' + width + ' ' + (height - rY) + ' Q ' + width + ' ' + height + ' ' + (width - rX) + ' ' + height);\n    direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' ' + height + ' ' + startX + ' ' + (height - rY) + ' z');\n  } else if (left) {\n    direction = direction.concat('M' + ' ' + startX + ' ' + (startY + rY) + ' Q ' + startX + ' ' + startY + ' ' + (startX + rX) + ' ' + startY);\n    direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + startY + ' Q ' + width + ' ' + startY + ' ' + width + ' ' + (startY + rY) + ' L' + ' ' + width + ' ' + (arrowLocation.y - arrowPadding / 2));\n    direction = direction.concat(' L' + ' ' + (width + arrowPadding) + ' ' + tipY);\n    direction = direction.concat(' L' + ' ' + width + ' ' + (arrowLocation.y + arrowPadding / 2));\n    direction = direction.concat(' L' + ' ' + width + ' ' + (height - rY) + ' Q ' + width + ' ' + height + ' ' + (width - rX) + ' ' + height);\n    direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' ' + height + ' ' + startX + ' ' + (height - rY) + ' z');\n  } else {\n    direction = direction.concat('M' + ' ' + (startX + rX) + ' ' + startY + ' Q ' + startX + ' ' + startY + ' ' + startX + ' ' + (startY + rY) + ' L' + ' ' + startX + ' ' + (arrowLocation.y - arrowPadding / 2));\n    direction = direction.concat(' L' + ' ' + (startX - arrowPadding) + ' ' + tipY);\n    direction = direction.concat(' L' + ' ' + startX + ' ' + (arrowLocation.y + arrowPadding / 2));\n    direction = direction.concat(' L' + ' ' + startX + ' ' + (height - rY) + ' Q ' + startX + ' ' + height + ' ' + (startX + rX) + ' ' + height);\n    direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + height + ' Q ' + width + ' ' + height + ' ' + width + ' ' + (height - rY));\n    direction = direction.concat(' L' + ' ' + width + ' ' + (startY + rY) + ' Q ' + width + ' ' + startY + ' ' + (width - rX) + ' ' + startY + ' z');\n  }\n  return direction;\n}\n//Within bounds\n/**\n * Checks if the provided coordinates are within the bounds of the rectangle.\n *\n * @param {number} x - The x-coordinate to check.\n * @param {number} y - The y-coordinate to check.\n * @param {Rect} bounds - The bounding rectangle.\n * @param {number} width - The width of the area to include in the bounds check.\n * @param {number} height - The height of the area to include in the bounds check.\n * @returns {boolean} - Returns true if the coordinates are within the bounds; otherwise, false.\n */\nexport function withInBounds(x, y, bounds, width, height) {\n  if (width === void 0) {\n    width = 0;\n  }\n  if (height === void 0) {\n    height = 0;\n  }\n  return x >= bounds.x - width && x <= bounds.x + bounds.width + width && y >= bounds.y - height && y <= bounds.y + bounds.height + height;\n}\n/**\n * Gets the x-coordinate value for a given point value on the axis.\n *\n * @param {number} value - The point value.\n * @param {number} size - The size of the axis.\n * @param {Axis} axis - The axis.\n * @returns {number} - Returns the x-coordinate value.\n */\nexport function getValueXByPoint(value, size, axis) {\n  var actualValue = !axis.isAxisInverse ? value / size : 1 - value / size;\n  return actualValue * axis.visibleRange.delta + axis.visibleRange.min;\n}\n/**\n * Gets the y-coordinate value for a given point value on the axis.\n *\n * @param {number} value - The point value.\n * @param {number} size - The size of the axis.\n * @param {Axis} axis - The axis.\n * @returns {number} - Returns the y-coordinate value.\n */\nexport function getValueYByPoint(value, size, axis) {\n  var actualValue = axis.isAxisInverse ? value / size : 1 - value / size;\n  return actualValue * axis.visibleRange.delta + axis.visibleRange.min;\n}\n/**\n * Finds the clip rectangle for a series.\n *\n * @param {Series} series - The series for which to find the clip rectangle.\n * @param {boolean} isCanvas - Indicates whether the rendering is on a canvas.\n * @returns {void}\n */\nexport function findClipRect(series, isCanvas) {\n  if (isCanvas === void 0) {\n    isCanvas = false;\n  }\n  var rect = series.clipRect;\n  if (isCanvas && (series.type === 'Polar' || series.type === 'Radar')) {\n    if (series.drawType === 'Scatter') {\n      rect.x = series.xAxis.rect.x;\n      rect.y = series.yAxis.rect.y;\n      rect.width = series.xAxis.rect.width;\n      rect.height = series.yAxis.rect.height;\n    } else {\n      rect.x = series.xAxis.rect.x / 2;\n      rect.y = series.yAxis.rect.y / 2;\n      rect.width = series.xAxis.rect.width;\n      rect.height = series.yAxis.rect.height;\n    }\n  } else {\n    if (series.chart.requireInvertedAxis) {\n      rect.x = series.yAxis.rect.x;\n      rect.y = series.xAxis.rect.y;\n      rect.width = series.yAxis.rect.width;\n      rect.height = series.xAxis.rect.height;\n    } else {\n      rect.x = series.xAxis.rect.x;\n      rect.y = series.yAxis.rect.y;\n      rect.width = series.xAxis.rect.width;\n      rect.height = series.yAxis.rect.height;\n    }\n  }\n}\n/**\n * Converts the first character of a string to lowercase.\n *\n * @param {string} str - The string to convert.\n * @returns {string} The converted string.\n */\nexport function firstToLowerCase(str) {\n  return str.substr(0, 1).toLowerCase() + str.substr(1);\n}\n/**\n * Gets the transformation of the chart area based on the provided axes and inverted axis state.\n *\n * @param {Axis} xAxis - The X-axis of the chart.\n * @param {Axis} yAxis - The Y-axis of the chart.\n * @param {boolean} invertedAxis - Indicates whether the chart axis is inverted.\n * @returns {Rect} The transformed chart area.\n */\nexport function getTransform(xAxis, yAxis, invertedAxis) {\n  var x;\n  var y;\n  var width;\n  var height;\n  if (invertedAxis) {\n    x = yAxis.rect.x;\n    y = xAxis.rect.y;\n    width = yAxis.rect.width;\n    height = xAxis.rect.height;\n  } else {\n    x = xAxis.rect.x;\n    y = yAxis.rect.y;\n    width = xAxis.rect.width;\n    height = yAxis.rect.height;\n  }\n  return new Rect(x, y, width, height);\n}\n/**\n * Calculates the minimum points delta between data points on the provided axis.\n *\n * @param {Axis | Chart3DAxis} axis - The axis for which to calculate the minimum points delta.\n * @param {Series[]} seriesCollection - The collection of series in the chart.\n * @returns {number} The minimum points delta.\n */\nexport function getMinPointsDelta(axis, seriesCollection) {\n  var minDelta = Number.MAX_VALUE;\n  var xValues;\n  var minVal;\n  var seriesMin;\n  var stackingGroups = [];\n  for (var index = 0; index < seriesCollection.length; index++) {\n    var series = seriesCollection[index];\n    xValues = [];\n    if (series.visible && (axis.name === series.xAxisName || axis.name === 'primaryXAxis' && series.xAxisName === null || axis.name === series.chart.primaryXAxis.name && !series.xAxisName)) {\n      if (series.type.indexOf('Stacking') > -1 && stackingGroups.indexOf(series.stackingGroup) === -1) {\n        stackingGroups.push(series.stackingGroup);\n      }\n      xValues = series.points.map(function (point) {\n        return point.xValue;\n      });\n      xValues.sort(function (first, second) {\n        return first - second;\n      });\n      if (xValues.length === 1) {\n        if (axis.valueType === 'Category') {\n          var minValue = series.xAxis.visibleRange.min;\n          var delta = xValues[0] - minValue;\n          if (delta !== 0) {\n            minDelta = Math.min(minDelta, delta);\n          }\n        } else if (axis.valueType.indexOf('DateTime') > -1) {\n          var timeOffset = seriesCollection.length === 1 ? 25920000 : 2592000000;\n          seriesMin = series.xMin === series.xMax ? series.xMin - timeOffset : series.xMin;\n          minVal = xValues[0] - (!isNullOrUndefined(seriesMin) ? seriesMin : axis.visibleRange.min);\n          if (minVal !== 0) {\n            minDelta = Math.min(minDelta, minVal);\n          }\n        } else {\n          seriesMin = series.xMin;\n          minVal = xValues[0] - (!isNullOrUndefined(seriesMin) ? seriesMin : axis.visibleRange.min);\n          if (minVal !== 0) {\n            minDelta = Math.min(minDelta, minVal);\n          }\n        }\n      } else {\n        for (var index_1 = 0; index_1 < xValues.length; index_1++) {\n          var value = xValues[index_1];\n          if (index_1 > 0 && value) {\n            minVal = series.type.indexOf('Stacking') > -1 && axis.valueType === 'Category' ? stackingGroups.length : value - xValues[index_1 - 1];\n            if (minVal !== 0) {\n              minDelta = Math.min(minDelta, minVal);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (minDelta === Number.MAX_VALUE) {\n    minDelta = 1;\n  }\n  return minDelta;\n}\n/**\n * Retrieves the animation function based on the specified effect.\n *\n * @param {string} effect - The name of the animation effect.\n * @returns {Function} The animation function corresponding to the effect.\n */\nexport function getAnimationFunction(effect) {\n  var functionName;\n  switch (effect) {\n    case 'Linear':\n      functionName = linear;\n      break;\n  }\n  return functionName;\n}\n/**\n * Linear animation function.\n *\n * @param {number} currentTime - The current time of the animation.\n * @param {number} startValue - The starting value of the animation.\n * @param {number} endValue - The ending value of the animation.\n * @param {number} duration - The duration of the animation.\n * @returns {number} The interpolated value at the current time.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n  return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Animates the marker element.\n *\n * @param {Element} element - The marker element to animate.\n * @param {number} delay - The delay before starting the animation.\n * @param {number} duration - The duration of the animation.\n * @param {Series | AccumulationSeries} series - The series associated with the marker.\n * @param {number} pointIndex - The index of the point in the series.\n * @param {ChartLocation} point - The location of the point.\n * @param {boolean} isLabel - Specifies whether the marker is a data label.\n * @returns {void}\n */\nexport function markerAnimate(element, delay, duration, series, pointIndex, point, isLabel) {\n  var isAccumulation = series.accumulation ? true : false;\n  element.style.visibility = 'hidden';\n  var transform = element.getAttribute('transform');\n  new Animation({}).animate(element, {\n    duration: duration,\n    delay: delay,\n    progress: function (args) {\n      if (args.timeStamp > args.delay) {\n        args.element.style.visibility = 'visible';\n      }\n      if (isAccumulation ? args.element.id.indexOf('_datalabel_Series_') > -1 : args.element.parentElement.parentElement.id.indexOf('DataLabel') > -1 && !(series.chart.stackLabels.visible && element.getAttribute('data-collide'))) {\n        args.element.style.visibility = 'visible';\n        var dataLabelOpacity = isAccumulation ? series.opacity : series.marker.dataLabel.opacity;\n        var calculatedOpacity = args.timeStamp / 500 * dataLabelOpacity;\n        if (isAccumulation) {\n          element.setAttribute('opacity', Math.min(calculatedOpacity, dataLabelOpacity).toString());\n        } else {\n          series.textElement.setAttribute('opacity', Math.min(calculatedOpacity, dataLabelOpacity).toString());\n          series.shapeElement.setAttribute('opacity', Math.min(calculatedOpacity, dataLabelOpacity).toString());\n        }\n      }\n    },\n    end: function () {\n      var annotations = document.getElementById(series.chart.element.id + '_Annotation_Collections');\n      if (annotations && series.type !== 'Line') {\n        annotations.style.visibility = 'visible';\n      }\n      if (element.parentElement.parentElement.id.indexOf('DataLabel') > -1 || element.id.indexOf('_datalabel_Series_') > -1) {\n        if (isAccumulation) {\n          element.setAttribute('opacity', series.opacity.toString());\n        } else {\n          series.textElement.setAttribute('opacity', series.marker.dataLabel.opacity.toString());\n          series.shapeElement.setAttribute('opacity', series.marker.dataLabel.opacity.toString());\n        }\n      }\n      if (!(series.chart.stackLabels.visible && element.getAttribute('data-collide'))) {\n        element.style.visibility = '';\n      }\n      element.setAttribute('transform', transform ? transform : '');\n      if ((series.type === 'Scatter' || series.type === 'Bubble') && !isLabel && pointIndex === series.points.length - 1) {\n        series.chart.trigger('animationComplete', {\n          series: series.chart.isBlazor ? {} : series\n        });\n      }\n    }\n  });\n}\n/**\n * Animates the rectangle element.\n *\n * @param {Element} element - The rectangle element to animate.\n * @param {number} delay - The delay before starting the animation.\n * @param {number} duration - The duration of the animation.\n * @param {Rect} currentRect - The current rectangle dimensions.\n * @param {Rect} previousRect - The previous rectangle dimensions.\n * @returns {void}\n */\nexport function animateRectElement(element, delay, duration, currentRect, previousRect) {\n  var setStyle = function (rect) {\n    element.setAttribute('x', rect.x + '');\n    element.setAttribute('y', rect.y + '');\n    element.setAttribute('width', rect.width + '');\n    element.setAttribute('height', rect.height + '');\n  };\n  new Animation({}).animate(createElement('div'), {\n    duration: duration,\n    delay: delay,\n    //name: name,\n    progress: function (args) {\n      setStyle(new Rect(linear(args.timeStamp, previousRect.x, currentRect.x - previousRect.x, args.duration), linear(args.timeStamp, previousRect.y, currentRect.y - previousRect.y, args.duration), linear(args.timeStamp, previousRect.width, currentRect.width - previousRect.width, args.duration), linear(args.timeStamp, previousRect.height, currentRect.height - previousRect.height, args.duration)));\n    },\n    end: function () {\n      setStyle(currentRect);\n    }\n  });\n}\n/**\n * Animation after legend click a path.\n *\n * @param {Element} element - element to be animated\n * @param {string} direction - current direction of the path\n * @param {boolean} redraw - chart redraw\n * @param {string} previousDirection - previous direction of the path\n * @param {number} animateDuration - animateDuration of the path\n * @returns {void}\n */\nexport function pathAnimation(element, direction, redraw, previousDirection, animateDuration) {\n  if (!redraw || !previousDirection && !element) {\n    return null;\n  }\n  var duration = 300;\n  if (!isNullOrUndefined(animateDuration)) {\n    duration = animateDuration;\n  }\n  var startDirections = previousDirection || element.getAttribute('d');\n  var splitDirections = startDirections.split(/(?=[LMCZAQ])/);\n  var endDirections = direction.split(/(?=[LMCZAQ])/);\n  var currentDireciton;\n  var startPath = [];\n  var endPath = [];\n  var c;\n  var end;\n  element.setAttribute('d', startDirections);\n  new Animation({}).animate(createElement('div'), {\n    duration: duration,\n    progress: function (args) {\n      currentDireciton = '';\n      splitDirections.map(function (directions, index) {\n        startPath = directions.split(' ');\n        endPath = endDirections[index] ? endDirections[index].split(' ') : startPath;\n        if (startPath[0] === 'Z') {\n          currentDireciton += 'Z' + ' ';\n        } else if (startPath[0] === '') {\n          currentDireciton = '';\n        } else {\n          currentDireciton += startPath[0] + ' ' + linear(args.timeStamp, +startPath[1], +endPath[1] - +startPath[1], args.duration) + ' ' + linear(args.timeStamp, +startPath[2], +endPath[2] - +startPath[2], args.duration) + ' ';\n        }\n        if (startPath[0] === 'C' || startPath[0] === 'Q') {\n          c = 3;\n          end = startPath[0] === 'Q' ? 4 : 6;\n          while (c < end) {\n            currentDireciton += linear(args.timeStamp, +startPath[c], +endPath[c] - +startPath[c], args.duration) + ' ' + linear(args.timeStamp, +startPath[++c], +endPath[c] - +startPath[c], args.duration) + ' ';\n            ++c;\n          }\n        }\n        if (startPath[0] === 'A') {\n          currentDireciton += 0 + ' ' + 0 + ' ' + 1 + ' ' + linear(args.timeStamp, +startPath[6], +endPath[6] - +startPath[6], args.duration) + ' ' + linear(args.timeStamp, +startPath[7], +endPath[7] - +startPath[7], args.duration) + ' ';\n        }\n      });\n      element.setAttribute('d', currentDireciton);\n    },\n    end: function () {\n      element.setAttribute('d', direction);\n    }\n  });\n}\n/**\n * Point based animation in chart series.\n *\n * @param {Element} element element to be animated.\n * @param {string} direction current direction of the path.\n * @param {boolean} redraw chart redraw.\n * @param {string} previousDirection previous direction of the path.\n * @param {number} animateDuration animateDuration of the path.\n * @param {string} removeDirection removeDirection of the path.\n * @param {boolean} isSpline gets true for splline series.\n * @returns {void}\n */\nexport function animateAddPoints(element, direction, redraw, previousDirection, animateDuration, removeDirection, isSpline) {\n  if (!redraw || !previousDirection && !element) {\n    return null;\n  }\n  var duration = 300;\n  if (!isNullOrUndefined(animateDuration)) {\n    duration = animateDuration;\n  }\n  var startDirections = previousDirection || element.getAttribute('d');\n  var endDirections = direction;\n  var currentDirection = '';\n  element.setAttribute('d', startDirections);\n  new Animation({}).animate(createElement('div'), {\n    duration: duration,\n    progress: function (args) {\n      currentDirection = '';\n      var startPathCommands = startDirections.match(/[MLHVCSQTAZ][^MLHVCSQTAZ]*/g);\n      var endPathCommands = endDirections.match(/[MLHVCSQTAZ][^MLHVCSQTAZ]*/g);\n      var maxLength = Math.max(startPathCommands.length, endPathCommands.length);\n      for (var i = 0; i < maxLength; i++) {\n        var startPathCommand = startPathCommands[i] || '';\n        var endPathCommand = endPathCommands[i] || '';\n        var startCoords = startPathCommand.trim().split(/\\s+/);\n        var endCoords = endPathCommand.trim().split(/\\s+/);\n        var interpolatedCoords = [];\n        for (var j = 1; j < startCoords.length; j++) {\n          var startCoord = parseFloat(startCoords[j]);\n          var endCoord = parseFloat(endCoords[j]);\n          if (!isNaN(startCoord) && !isNaN(endCoord) && (startCoords.length === endCoords.length || isSpline)) {\n            var interpolatedValue = linear(args.timeStamp, startCoord, endCoord - startCoord, duration);\n            if (i === maxLength - 1) {\n              interpolatedCoords.push(interpolatedValue);\n            } else {\n              interpolatedCoords.push(interpolatedValue);\n            }\n          }\n        }\n        if (startCoords.length !== endCoords.length) {\n          currentDirection += 'L';\n        } else {\n          currentDirection += startCoords[0];\n        }\n        currentDirection += ' ' + interpolatedCoords.join(' ');\n        currentDirection += ' ';\n      }\n      element.setAttribute('d', currentDirection);\n    },\n    end: function () {\n      element.setAttribute('d', removeDirection || direction);\n    }\n  });\n}\n/**\n * To append the clip rect element.\n *\n * @param {boolean} redraw - chart redraw value.\n * @param {BaseAttibutes} options - element options.\n * @param {SvgRenderer} renderer - svg renderer values.\n * @param {string} clipPath - clipPath of the element.\n * @returns {Element} - Returns clip rect element.\n */\nexport function appendClipElement(redraw, options, renderer, clipPath) {\n  if (clipPath === void 0) {\n    clipPath = 'drawClipPath';\n  }\n  var clipElement = redrawElement(redraw, options.id, options, renderer);\n  if (clipElement) {\n    var def = renderer.createDefs();\n    def.appendChild(clipElement);\n    return def;\n  } else {\n    return renderer[clipPath](options);\n  }\n}\n/**\n * Triggers the label render event.\n *\n * @param {Chart | RangeNavigator | Chart3D} chart - The chart or range navigator instance.\n * @param {number} tempInterval - The temporary interval value.\n * @param {string} text - The label text.\n * @param {FontModel} labelStyle - The style of the label.\n * @param {Axis | Chart3DAxis} axis - The axis associated with the label.\n * @returns {void}\n */\nexport function triggerLabelRender(chart, tempInterval, text, labelStyle, axis) {\n  var argsData = {\n    cancel: false,\n    name: axisLabelRender,\n    axis: axis,\n    text: text,\n    value: tempInterval,\n    labelStyle: labelStyle\n  };\n  chart.trigger(axisLabelRender, argsData);\n  if (!argsData.cancel) {\n    var isLineBreakLabels = argsData.text.indexOf('<br>') !== -1;\n    var text_1 = axis.enableTrim ? isLineBreakLabels ? lineBreakLabelTrim(axis.maximumLabelWidth, argsData.text, axis.labelStyle, chart.themeStyle.axisLabelFont) : textTrim(axis.maximumLabelWidth, argsData.text, axis.labelStyle, chart.enableRtl, chart.themeStyle.axisLabelFont) : argsData.text;\n    axis.visibleLabels.push(new VisibleLabels(text_1, argsData.value, argsData.labelStyle, argsData.text));\n  }\n}\n/**\n * The function used to find whether the range is set.\n *\n * @param {Axis | Chart3DAxis} axis - The axis to check.\n * @returns {boolean} - It returns true if the axis range is set otherwise false.\n * @private\n */\nexport function setRange(axis) {\n  return axis.minimum != null && axis.maximum != null;\n}\n/**\n * Checks if zooming is enabled for the axis.\n *\n * @param {Axis} axis - The axis to check for zooming.\n * @returns {boolean} - Returns true if zooming is enabled for the axis, otherwise false.\n */\nexport function isZoomSet(axis) {\n  return axis.zoomFactor < 1 && axis.zoomPosition >= 0;\n}\n/**\n * Calculates the actual desired intervals count based on the available size and axis.\n *\n * @param {Size} availableSize - The available size for rendering.\n * @param {Axis | Chart3DAxis} axis - The axis for which to calculate the intervals count.\n * @returns {number} - The actual desired intervals count.\n */\nexport function getActualDesiredIntervalsCount(availableSize, axis) {\n  var size = axis.orientation === 'Horizontal' ? availableSize.width : availableSize.height;\n  if (isNullOrUndefined(axis.desiredIntervals)) {\n    var desiredIntervalsCount = (axis.orientation === 'Horizontal' ? 0.533 : 1) * axis.maximumLabels;\n    desiredIntervalsCount = Math.max(size * (desiredIntervalsCount / 100), 1);\n    return desiredIntervalsCount;\n  } else {\n    return axis.desiredIntervals;\n  }\n}\n/**\n * Animates the template element.\n *\n * @param {Element} element - The element to animate.\n * @param {number} delay - The delay before starting the animation.\n * @param {number} duration - The duration of the animation.\n * @param {Effect} name - The name of the animation effect.\n * @param {boolean} [isRemove] - Indicates whether to remove the element after animation completion.\n * @returns {void}\n */\nexport function templateAnimate(element, delay, duration, name, isRemove) {\n  new Animation({}).animate(element, {\n    duration: duration,\n    delay: delay,\n    name: name,\n    progress: function (args) {\n      args.element.style.visibility = 'visible';\n    },\n    end: function (args) {\n      if (isRemove) {\n        remove(args.element);\n      } else {\n        args.element.style.visibility = 'visible';\n      }\n    }\n  });\n}\n/**\n * Draws a symbol at the specified location.\n *\n * @param {ChartLocation} location - The location to draw the symbol.\n * @param {string} shape - The shape of the symbol.\n * @param {Size} size - The size of the symbol.\n * @param {string} url - The URL of the image symbol.\n * @param {PathOption} options - The options for drawing the symbol.\n * @param {string} label - The label for the symbol.\n * @param {SvgRenderer | CanvasRenderer} [renderer] - The renderer for drawing the symbol.\n * @param {Rect} [clipRect] - The clipping rectangle.\n * @param {boolean} [isChartControl] - Indicates whether it is a chart control.\n * @param {BulletChart} [control] - The bullet chart control.\n * @returns {Element} - The element representing the drawn symbol.\n */\nexport function drawSymbol(location, shape, size, url, options, label, renderer, clipRect, isChartControl, control) {\n  var chartRenderer = renderer ? renderer : new SvgRenderer('');\n  var shapeOption = calculateShapes(location, size, shape, options, url, isChartControl, control);\n  var drawElement = chartRenderer['draw' + shapeOption.functionName](shapeOption.renderOption, clipRect ? new Int32Array([clipRect.x, clipRect.y]) : null);\n  //drawElement.setAttribute('aria-label', label);\n  return drawElement;\n}\n/**\n * Calculates the shapes based on the specified parameters.\n *\n * @param {ChartLocation} location - The location for the shapes.\n * @param {Size} size - The size of the shapes.\n * @param {string} shape - The shape of the symbols.\n * @param {PathOption} options - The options for drawing the shapes.\n * @param {string} url - The URL of the image symbols.\n * @param {boolean} [isChart] - Indicates whether it is a chart.\n * @param {BulletChart} [control] - The bullet chart control.\n * @returns {IShapes} - The calculated shapes.\n */\nexport function calculateShapes(location, size, shape, options, url, isChart, control) {\n  var dir;\n  var functionName = 'Path';\n  var isBulletChart = isChart;\n  var width = isBulletChart && shape === 'Circle' ? size.width - 2 : size.width;\n  var height = isBulletChart && shape === 'Circle' ? size.height - 2 : size.height;\n  var sizeBullet = isBulletChart ? control.targetWidth : 0;\n  var lx = location.x;\n  var ly = location.y;\n  var y = location.y + -height / 2;\n  var x = location.x + -width / 2;\n  var eq = 72;\n  var xVal;\n  var yVal;\n  switch (shape) {\n    case 'Bubble':\n    case 'Circle':\n      functionName = 'Ellipse';\n      merge(options, {\n        'rx': width / 2,\n        'ry': height / 2,\n        'cx': lx,\n        'cy': ly\n      });\n      break;\n    case 'Plus':\n      dir = 'M' + ' ' + x + ' ' + ly + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + ly + ' ' + 'M' + ' ' + lx + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly + -height / 2);\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Cross':\n      dir = 'M' + ' ' + x + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + ' ' + 'M' + ' ' + x + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + -height / 2);\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Multiply':\n      dir = 'M ' + (lx - sizeBullet) + ' ' + (ly - sizeBullet) + ' L ' + (lx + sizeBullet) + ' ' + (ly + sizeBullet) + ' M ' + (lx - sizeBullet) + ' ' + (ly + sizeBullet) + ' L ' + (lx + sizeBullet) + ' ' + (ly - sizeBullet);\n      merge(options, {\n        'd': dir,\n        stroke: options.fill\n      });\n      break;\n    case 'HorizontalLine':\n      dir = 'M' + ' ' + x + ' ' + ly + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + ly;\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'VerticalLine':\n      dir = 'M' + ' ' + lx + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly + -height / 2);\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Diamond':\n      dir = 'M' + ' ' + x + ' ' + ly + ' ' + 'L' + ' ' + lx + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + ly + ' ' + 'L' + ' ' + lx + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + x + ' ' + ly + ' z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'ActualRect':\n      dir = 'M' + ' ' + x + ' ' + (ly + -height / 8) + ' ' + 'L' + ' ' + (lx + sizeBullet) + ' ' + (ly + -height / 8) + ' ' + 'L' + ' ' + (lx + sizeBullet) + ' ' + (ly + height / 8) + ' ' + 'L' + ' ' + x + ' ' + (ly + height / 8) + ' ' + 'L' + ' ' + x + ' ' + (ly + -height / 8) + ' z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'TargetRect':\n      dir = 'M' + ' ' + (x + sizeBullet) + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + sizeBullet / 2) + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + sizeBullet / 2) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (x + sizeBullet) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (x + sizeBullet) + ' ' + (ly + -height / 2) + ' z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Rectangle':\n    case 'Hilo':\n    case 'HiloOpenClose':\n    case 'Candle':\n    case 'Waterfall':\n    case 'BoxAndWhisker':\n    case 'StepArea':\n    case 'RangeStepArea':\n    case 'StackingStepArea':\n    case 'Square':\n    case 'Flag':\n      dir = 'M' + ' ' + x + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + x + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + x + ' ' + (ly + -height / 2) + ' z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Pyramid':\n    case 'Triangle':\n      dir = 'M' + ' ' + x + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + x + ' ' + (ly + height / 2) + ' z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Funnel':\n    case 'InvertedTriangle':\n      dir = 'M' + ' ' + (lx + width / 2) + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx - width / 2) + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly - height / 2) + ' z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Pentagon':\n      for (var i = 0; i <= 5; i++) {\n        xVal = width / 2 * Math.cos(Math.PI / 180 * (i * eq));\n        yVal = height / 2 * Math.sin(Math.PI / 180 * (i * eq));\n        if (i === 0) {\n          dir = 'M' + ' ' + (lx + xVal) + ' ' + (ly + yVal) + ' ';\n        } else {\n          dir = dir.concat('L' + ' ' + (lx + xVal) + ' ' + (ly + yVal) + ' ');\n        }\n      }\n      dir = dir.concat('Z');\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Image':\n      functionName = 'Image';\n      merge(options, {\n        'href': url,\n        'height': height,\n        'width': width,\n        x: x,\n        y: y\n      });\n      break;\n    case 'Star':\n      {\n        var cornerPoints = 5;\n        var outerRadius = Math.min(width, height) / 2;\n        var innerRadius = outerRadius / 2;\n        var angle = Math.PI / cornerPoints;\n        var starPath = '';\n        for (var i = 0; i < 2 * cornerPoints; i++) {\n          var radius = i % 2 === 0 ? outerRadius : innerRadius;\n          var currentX = lx + radius * Math.cos(i * angle - Math.PI / 2);\n          var currentY = ly + radius * Math.sin(i * angle - Math.PI / 2);\n          starPath += (i === 0 ? 'M' : 'L') + currentX + ',' + currentY;\n        }\n        starPath += 'Z';\n        merge(options, {\n          'd': starPath\n        });\n        break;\n      }\n  }\n  options = calculateLegendShapes(location, new Size(width, height), shape, options).renderOption;\n  return {\n    renderOption: options,\n    functionName: functionName\n  };\n}\n/**\n * Gets the location of the rectangle based on the specified start and end locations and the outer rectangle.\n *\n * @param {ChartLocation} startLocation - The start location.\n * @param {ChartLocation} endLocation - The end location.\n * @param {Rect} outerRect - The outer rectangle.\n * @returns {Rect} - The location of the rectangle.\n */\nexport function getRectLocation(startLocation, endLocation, outerRect) {\n  var x = endLocation.x < outerRect.x ? outerRect.x : endLocation.x > outerRect.x + outerRect.width ? outerRect.x + outerRect.width : endLocation.x;\n  var y = endLocation.y < outerRect.y ? outerRect.y : endLocation.y > outerRect.y + outerRect.height ? outerRect.y + outerRect.height : endLocation.y;\n  return new Rect(x > startLocation.x ? startLocation.x : x, y > startLocation.y ? startLocation.y : y, Math.abs(x - startLocation.x), Math.abs(y - startLocation.y));\n}\n/**\n * Returns the value constrained within the specified minimum and maximum limits.\n *\n * @param {number} value - The input value.\n * @param {number} min - The minimum limit.\n * @param {number} max - The maximum limit.\n * @returns {number} - The constrained value.\n */\nexport function minMax(value, min, max) {\n  return value > max ? max : value < min ? min : value;\n}\n/**\n * Retrieves the DOM element with the specified ID.\n *\n * @param {string} id - The ID of the element to retrieve.\n * @returns {Element} - The DOM element.\n */\nexport function getElement(id) {\n  return document.getElementById(id);\n}\n/**\n * Gets the template function from the provided template string or function.\n *\n * @param {string | Function} template - The template string or function.\n * @returns {Function} - The template function.\n */\nexport function getTemplateFunction(template) {\n  var templateFn = null;\n  try {\n    if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n      templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n    } else {\n      templateFn = templateComplier(template);\n    }\n  } catch (e) {\n    templateFn = templateComplier(template);\n  }\n  return templateFn;\n}\n/**\n * Renders the accumulation chart data labels using template.\n *\n * @param {HTMLElement} childElement - The child element.\n * @param {AccumulationChart} chart - The accumulation chart instance.\n * @param {boolean} isTemplate - Defines whether the template is applied or not.\n * @param {AccPoints[]} points - The accumulation chart points.\n * @param {IAccTextRenderEventArgs} argsData - The accumulation chart text render event arguments.\n * @param {AccPoints} [point] - The accumulation chart point.\n * @param {Element} [datalabelGroup] - The data label group element.\n * @param {string} [id] - The id of the element.\n * @param {AccumulationDataLabelSettingsModel} [dataLabel] - The accumulation chart data label settings.\n * @param {boolean} [redraw] - Defines whether to redraw the chart or not.\n * @returns {void}\n */\nexport function accReactTemplate(childElement, chart, isTemplate, points, argsData, point, datalabelGroup, id, dataLabel, redraw) {\n  var clientRect = childElement.getBoundingClientRect();\n  chart.accumulationDataLabelModule.calculateLabelSize(isTemplate, childElement, point, points, argsData, datalabelGroup, id, dataLabel, redraw, clientRect, true);\n}\n/**\n * Renders the chart data labels using template.\n *\n * @param {HTMLElement} childElement - The child element.\n * @param {Chart} chart - The chart instance.\n * @param {Points} point - The chart point.\n * @param {Series} series - The chart series.\n * @param {number} labelIndex - The index of the label.\n * @param {boolean} [redraw] - Defines whether to redraw the chart or not.\n * @returns {void}\n */\nexport function chartReactTemplate(childElement, chart, point, series, labelIndex, redraw) {\n  var parentElement = document.getElementById(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections');\n  if (parentElement) {\n    if (point.index === 0) {\n      chart.dataLabelCollections = []; // clear old datalabel bounds for react callback\n    }\n    chart.dataLabelModule.calculateTemplateLabelSize(parentElement, childElement, point, series, series.marker.dataLabel, labelIndex, series.clipRect, redraw, true);\n  }\n}\n/**\n * Creates a template.\n *\n * @param {HTMLElement} childElement - The child element of the template.\n * @param {number} pointIndex - The index of the point.\n * @param {string | Function} content - The content of the template.\n * @param {Chart | AccumulationChart | RangeNavigator} chart - The chart instance.\n * @param {Points | AccPoints} point - The chart or accumulation point.\n * @param {Series | AccumulationSeries} series - The chart or accumulation series.\n * @param {string} dataLabelId - The id of the data label.\n * @param {number} labelIndex - The index of the label.\n * @param {IAccTextRenderEventArgs} argsData - The event arguments for text rendering.\n * @param {boolean} isTemplate - Indicates whether it is a template.\n * @param {AccPoints[]} points - The accumulation points.\n * @param {Element} datalabelGroup - The group element of the data label.\n * @param {string} id - The id of the element.\n * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n * @param {boolean} redraw - Indicates whether to redraw.\n * @returns {HTMLElement} - The created template element.\n * @private\n */\nexport function createTemplate(childElement, pointIndex, content, chart, point, series, dataLabelId, labelIndex, argsData, isTemplate, points, datalabelGroup, id, dataLabel, redraw) {\n  var templateFn = getTemplateFunction(content);\n  var templateElement;\n  try {\n    var blazor = 'Blazor';\n    var tempObject = window[blazor] ? dataLabelId ? point : {\n      point: point\n    } : {\n      chart: chart,\n      series: series,\n      point: point\n    };\n    var templateId = dataLabelId ? dataLabelId + '_template' : 'template';\n    var elementData = templateFn ? templateFn(tempObject, chart, templateId, dataLabelId || childElement.id.replace(/[^a-zA-Z0-9]/g, '')) : [];\n    if (elementData.length) {\n      templateElement = Array.prototype.slice.call(elementData);\n      var len = templateElement.length;\n      for (var i = 0; i < len; i++) {\n        childElement.appendChild(templateElement[i]);\n      }\n    }\n    var reactCallback = void 0;\n    if (chart.getModuleName() === 'accumulationchart') {\n      reactCallback = points.length && points[pointIndex] ? accReactTemplate.bind(this, childElement, chart, isTemplate, points, argsData, points[pointIndex], datalabelGroup, id, dataLabel, redraw) : reactCallback;\n      if (chart.isReact) {\n        chart.renderReactTemplates(reactCallback);\n      }\n    } else if (chart.getModuleName() === 'chart') {\n      reactCallback = point && series ? chartReactTemplate.bind(this, childElement, chart, point, series, labelIndex, redraw) : reactCallback;\n      if (chart.isReact) {\n        chart.renderReactTemplates(reactCallback);\n      }\n    }\n  } catch (e) {\n    return childElement;\n  }\n  return childElement;\n}\n/**\n * Gets the font style.\n *\n * @param {FontModel} font - The font settings.\n * @param {FontModel} themeFontStyle - The theme font settings.\n * @returns {string} - The font style.\n * @private\n */\nexport function getFontStyle(font, themeFontStyle) {\n  var style = '';\n  style = 'font-size:' + (font.size || themeFontStyle.size) + '; font-style:' + (font.fontStyle || themeFontStyle.fontStyle) + '; font-weight:' + (font.fontWeight || themeFontStyle.fontWeight) + '; font-family:' + font.fontFamily + ';opacity:' + font.opacity + '; color:' + font.color + ';';\n  return style;\n}\n/**\n * Measures the bounding rectangle of an HTML element.\n *\n * @param {HTMLElement} element - The HTML element to measure.\n * @param {boolean} redraw - Indicates whether to redraw.\n * @param {boolean} isReactCallback - Indicates whether it's a React callback.\n * @returns {ClientRect} - The bounding rectangle of the element.\n * @private\n */\nexport function measureElementRect(element, redraw, isReactCallback) {\n  if (redraw === void 0) {\n    redraw = false;\n  }\n  if (!isReactCallback) {\n    // If the element is already in DOM, no need to append in the body.\n    document.body.appendChild(element);\n  }\n  var bounds = element.getBoundingClientRect();\n  if (redraw) {\n    remove(element);\n  } else if (!isReactCallback) {\n    // for react chart data label template - (callback function)\n    removeElement(element.id);\n  }\n  return bounds;\n}\n/**\n * Finds an element in a NodeList based on its id.\n *\n * @param {NodeList} elements - The NodeList to search.\n * @param {string} id - The id of the element to find.\n * @returns {Element} - The found element.\n * @private\n */\nexport function findlElement(elements, id) {\n  var element;\n  for (var i = 0, length_1 = elements.length; i < length_1; i++) {\n    if (elements[i].id.indexOf(id) > -1) {\n      element = elements[i];\n      continue;\n    }\n  }\n  return element;\n}\n/**\n * Gets the point on the chart based on the provided coordinates and axes.\n *\n * @param {number} x - The x-coordinate of the point.\n * @param {number} y - The y-coordinate of the point.\n * @param {Axis} xAxis - The x-axis of the chart.\n * @param {Axis} yAxis - The y-axis of the chart.\n * @param {boolean} isInverted - Indicates whether the chart is inverted.\n * @returns {ChartLocation} - The calculated point.\n * @private\n */\nexport function getPoint(x, y, xAxis, yAxis, isInverted) {\n  x = xAxis.valueType === 'Logarithmic' ? logBase(x > 0 ? x : Math.pow(xAxis.logBase, xAxis.visibleRange.min), xAxis.logBase) : x;\n  y = yAxis.valueType === 'Logarithmic' ? logBase(y > 0 ? y : Math.pow(yAxis.logBase, yAxis.visibleRange.min), yAxis.logBase) : y;\n  x = valueToCoefficient(x, xAxis);\n  y = valueToCoefficient(y, yAxis);\n  var xLength = isInverted ? xAxis.rect.height : xAxis.rect.width;\n  var yLength = isInverted ? yAxis.rect.width : yAxis.rect.height;\n  var locationX = isInverted ? y * yLength : x * xLength;\n  var locationY = isInverted ? (1 - x) * xLength : (1 - y) * yLength;\n  return new ChartLocation(locationX, locationY);\n}\n/**\n * Appends an element to a parent element.\n *\n * @param {Element} child - The child element to be appended.\n * @param {Element} parent - The parent element to which the child element will be appended.\n * @param {boolean} [redraw=false] - A boolean value indicating whether to redraw. Default is false.\n * @param {boolean} [animate=false] - A boolean value indicating whether to animate the appending operation. Default is false.\n * @param {string} [x='x'] - The x-coordinate for the position of the child element. Default is 'x'.\n * @param {string} [y='y'] - The y-coordinate for the position of the child element. Default is 'y'.\n * @param {number} duration - duration of the animation\n * @returns {void}\n */\nexport function appendElement(child, parent, redraw, animate, x, y, duration) {\n  if (redraw === void 0) {\n    redraw = false;\n  }\n  if (animate === void 0) {\n    animate = false;\n  }\n  if (x === void 0) {\n    x = 'x';\n  }\n  if (y === void 0) {\n    y = 'y';\n  }\n  if (child && child.hasChildNodes() && parent) {\n    appendChildElement(false, parent, child, redraw, animate, x, y, undefined, undefined, undefined, undefined, undefined, duration);\n  } else {\n    return null;\n  }\n}\n/**\n * Method to append child element.\n *\n * @param {boolean} isCanvas - canvas mode value\n * @param {Element | HTMLElement} parent - parent element\n * @param {Element | HTMLElement} childElement - childElement element\n * @param {boolean} redraw - chart redraw value\n * @param {boolean} isAnimate - animation value\n * @param {string} x - x position\n * @param {string} y - y position\n * @param {ChartLocation} start - start location value\n * @param {string} direction - direction of the element\n * @param {boolean} forceAnimate - forceAnimate\n * @param {boolean} isRect - isRect\n * @param {Rect} previousRect - previousRect\n * @param {number} animateDuration - duration of the animation\n * @param {boolean} scatterElement - The scatter element.\n * @param {number} angle - The angle of the element.\n * @param {ChartLocation} currentTransform - The current transform of the element.\n * @param {string} previousTranslate - The previous translate of the element.\n * @returns {void}\n * @private\n */\nexport function appendChildElement(isCanvas, parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration, scatterElement, angle, currentTransform, previousTranslate) {\n  if (isAnimate === void 0) {\n    isAnimate = false;\n  }\n  if (x === void 0) {\n    x = 'x';\n  }\n  if (y === void 0) {\n    y = 'y';\n  }\n  if (forceAnimate === void 0) {\n    forceAnimate = false;\n  }\n  if (isRect === void 0) {\n    isRect = false;\n  }\n  if (previousRect === void 0) {\n    previousRect = null;\n  }\n  if (scatterElement === void 0) {\n    scatterElement = false;\n  }\n  if (angle === void 0) {\n    angle = 0;\n  }\n  if (isCanvas) {\n    return null;\n  }\n  var existChild = scatterElement ? null : parent.querySelector('#' + childElement.id);\n  var element = existChild || getElement(childElement.id);\n  var child = childElement;\n  var duration = !isNullOrUndefined(animateDuration) ? animateDuration : 300;\n  if (redraw && isAnimate && element) {\n    start = start || (element.tagName === 'DIV' ? new ChartLocation(+element.style[x].split('px')[0], +element.style[y].split('px')[0]) : new ChartLocation(+element.getAttribute(x), +element.getAttribute(y)));\n    if (direction && direction !== 'undefined') {\n      pathAnimation(childElement, childElement.getAttribute('d'), redraw, direction, duration);\n    } else if (isRect && previousRect) {\n      animateRectElement(child, 0, duration, new Rect(+element.getAttribute('x'), +element.getAttribute('y'), +element.getAttribute('width'), +element.getAttribute('height')), previousRect);\n    } else {\n      var end = child.tagName === 'DIV' ? new ChartLocation(+child.style[x].split('px')[0], +child.style[y].split('px')[0]) : new ChartLocation(+child.getAttribute(x), +child.getAttribute(y));\n      var previousTranform = element.getAttribute('transform');\n      animateRedrawElement(child, duration, start, end, x, y, angle, currentTransform, previousTranslate !== undefined ? new ChartLocation(previousTranslate.match(/\\d+/g).map(Number)[0], previousTranslate.match(/\\d+/g).map(Number)[1]) : previousTranform ? new ChartLocation(parseFloat(previousTranform.split(',')[1]), parseFloat(previousTranform.split(',')[2])) : new ChartLocation(0, 0), previousTranslate !== undefined);\n    }\n  } else if (redraw && isAnimate && !element && forceAnimate) {\n    templateAnimate(child, 0, 600, 'FadeIn');\n  }\n  if (existChild) {\n    parent.replaceChild(child, element);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Calculates the location of the dragged rectangle.\n *\n * @param {number} x1 - The x-coordinate of the starting point.\n * @param {number} y1 - The y-coordinate of the starting point.\n * @param {number} x2 - The x-coordinate of the ending point.\n * @param {number} y2 - The y-coordinate of the ending point.\n * @param {Rect} outerRect - The outer rectangle containing the dragged rectangle.\n * @returns {Rect} - The location of the dragged rectangle.\n * @private\n */\nexport function getDraggedRectLocation(x1, y1, x2, y2, outerRect) {\n  var width = Math.abs(x1 - x2);\n  var height = Math.abs(y1 - y2);\n  var x = Math.max(checkBounds(Math.min(x1, x2), width, outerRect.x, outerRect.width), outerRect.x);\n  var y = Math.max(checkBounds(Math.min(y1, y2), height, outerRect.y, outerRect.height), outerRect.y);\n  return new Rect(x, y, Math.min(width, outerRect.width), Math.min(height, outerRect.height));\n}\n/**\n * Checks if a value is within bounds defined by minimum and maximum values.\n *\n * @param {number} start - The start value.\n * @param {number} size - The size of the value.\n * @param {number} min - The minimum value of the bound.\n * @param {number} max - The maximum value of the bound.\n * @returns {number} - The adjusted value within the bounds.\n * @private\n */\nexport function checkBounds(start, size, min, max) {\n  if (start < min) {\n    start = min;\n  } else if (start + size > max + min) {\n    start = max + min - size;\n  }\n  return start;\n}\n/**\n * Retrieves label text for a data point.\n *\n * @param {Points} currentPoint - The current data point.\n * @param {Series} series - The series to which the data point belongs.\n * @param {Chart} chart - The chart instance.\n * @returns {string[]} - The label text.\n * @private\n */\nexport function getLabelText(currentPoint, series, chart) {\n  var labelFormat = series.marker.dataLabel.format ? series.marker.dataLabel.format : series.yAxis.labelFormat;\n  var text = [];\n  var customLabelFormat = labelFormat.match('{value}') !== null;\n  switch (series.seriesType) {\n    case 'XY':\n      /**\n       * I255790\n       * For Polar radar series, the dataLabel appears out of range when axis range is given for yaxis\n       * Cause: Since symbol location for the points which did not lies in within range, lies outside of seriesRect.\n       * Fix: DataLabel rendered after checking WithIn for the points\n       */\n      if (series.chart.chartAreaType === 'PolarRadar') {\n        if (series.drawType.indexOf('Stacking') !== -1) {\n          if (series.yAxis.valueType === 'Logarithmic' && logWithIn(series.stackedValues.endValues[currentPoint.index], series.yAxis) || withIn(series.stackedValues.endValues[currentPoint.index], series.yAxis.visibleRange)) {\n            text.push(currentPoint.text || currentPoint.yValue.toString());\n          }\n        } else {\n          if (series.yAxis.valueType === 'Logarithmic' && logWithIn(currentPoint.yValue, series.yAxis) || withIn(currentPoint.yValue, series.yAxis.visibleRange)) {\n            text.push(currentPoint.text || currentPoint.yValue.toString());\n          }\n        }\n      } else {\n        text.push(currentPoint.text || currentPoint.yValue.toString());\n      }\n      break;\n    case 'HighLow':\n      text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n      text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n      break;\n    case 'HighLowOpenClose':\n      text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n      text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n      text.push(currentPoint.text || Math.max(currentPoint.open, currentPoint.close).toString());\n      text.push(currentPoint.text || Math.min(currentPoint.open, currentPoint.close).toString());\n      break;\n    case 'BoxPlot':\n      text.push(currentPoint.text || currentPoint.median.toString());\n      text.push(currentPoint.text || currentPoint.maximum.toString());\n      text.push(currentPoint.text || currentPoint.minimum.toString());\n      text.push(currentPoint.text || currentPoint.upperQuartile.toString());\n      text.push(currentPoint.text || currentPoint.lowerQuartile.toString());\n      for (var _i = 0, _a = currentPoint.outliers; _i < _a.length; _i++) {\n        var liers = _a[_i];\n        text.push(currentPoint.text || liers.toString());\n      }\n      break;\n  }\n  if ((labelFormat || chart.useGroupingSeparator) && !currentPoint.text) {\n    series.yAxis.format = chart.intl.getNumberFormat({\n      format: customLabelFormat ? '' : labelFormat,\n      useGrouping: chart.useGroupingSeparator\n    });\n    for (var i = 0; i < text.length; i++) {\n      text[i] = customLabelFormat ? labelFormat.replace('{value}', series.yAxis.format(parseFloat(text[i]))) : series.yAxis.format(parseFloat(text[i]));\n    }\n  }\n  return text;\n}\n/**\n * Stops the specified timer.\n *\n * @param {number} timer - The timer to stop.\n * @returns {void}\n */\nexport function stopTimer(timer) {\n  window.clearInterval(timer);\n}\n/**\n * Checks if the specified rect collides with any of the rect in the collection within the given clip rect.\n *\n * @param {Rect} rect - The rect to check for collision.\n * @param {Rect[]} collections - The collection of rect to check against.\n * @param {Rect} clipRect - The clip rect.\n * @returns {boolean} - Returns true if collision occurs; otherwise, false.\n */\nexport function isCollide(rect, collections, clipRect) {\n  var currentRect = new Rect(rect.x + clipRect.x, rect.y + clipRect.y, rect.width, rect.height);\n  var isCollide = collections.some(function (rect) {\n    return currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x && currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y;\n  });\n  return isCollide;\n}\n/**\n * Checks if the specified rect overlap each other.\n *\n * @param {Rect} currentRect - The first rect.\n * @param {Rect} rect - The second rect.\n * @returns {boolean} - Returns true if the rect overlap; otherwise, false.\n */\nexport function isOverlap(currentRect, rect) {\n  return currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x && currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y;\n}\n/**\n * Checks if the specified rect is completely contained within another rect.\n *\n * @param {Rect} currentRect - The rect to check if it's contained.\n * @param {Rect} rect - The containing rect.\n * @returns {boolean} - Returns true if the specified rect is completely contained within the containing rect; otherwise, false.\n */\nexport function containsRect(currentRect, rect) {\n  return currentRect.x <= rect.x && currentRect.x + currentRect.width >= rect.x + rect.width && currentRect.y <= rect.y && currentRect.height + currentRect.y >= rect.y + rect.height;\n}\n/**\n * Calculates the rect based on the specified location, text size, and margin.\n *\n * @param {ChartLocation} location - The location of the rect.\n * @param {Size} textSize - The size of the text.\n * @param {MarginModel} margin - The margin to be applied around the text.\n * @returns {Rect} - Returns the calculated rect.\n */\nexport function calculateRect(location, textSize, margin) {\n  return new Rect(location.x - textSize.width / 2 - margin.left, location.y - textSize.height / 2 - margin.top, textSize.width + margin.left + margin.right, textSize.height + margin.top + margin.bottom);\n}\n/**\n * Converts the color value to hexadecimal code.\n *\n * @param {ColorValue} value - The color value to convert.\n * @returns {string} - Returns the hexadecimal representation of the color.\n */\nexport function convertToHexCode(value) {\n  return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * Converts a component value to its hexadecimal representation.\n *\n * @param {number} value - The component value to convert.\n * @returns {string} - Returns the hexadecimal representation of the component.\n */\nexport function componentToHex(value) {\n  var hex = value.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * Converts a hexadecimal color code to its RedGreenBlue representation.\n *\n * @param {string} hex - The hexadecimal color code to convert.\n * @returns {ColorValue} - Returns the RedGreenBlue representation of the hexadecimal color code.\n */\nexport function convertHexToColor(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : new ColorValue(255, 255, 255);\n}\n/**\n * Converts a color name to its corresponding hexadecimal color code.\n *\n * @param {string} color - The color name to convert.\n * @returns {string} - Returns the hexadecimal color code.\n */\nexport function colorNameToHex(color) {\n  color = color === 'transparent' ? 'white' : color;\n  var element = document.getElementById('chartmeasuretext');\n  if (!element) {\n    element = createElement('text', {\n      id: 'chartmeasuretext'\n    });\n    document.body.appendChild(element);\n  }\n  element.style.color = color;\n  color = window.getComputedStyle(element).color;\n  element.style.color = '';\n  var isRGBValue;\n  if (color.indexOf('rgb') === 0 || color.indexOf('hsl') === 0) {\n    color = color.replace(/\\s/g, '').replace(/[()]/g, '');\n    isRGBValue = color.slice(3).split(',');\n  }\n  if (isRGBValue && isRGBValue.length) {\n    var _a = isRGBValue.map(function (value) {\n        return parseInt(value, 10);\n      }),\n      r = _a[0],\n      g = _a[1],\n      b = _a[2];\n    return convertToHexCode(new ColorValue(r, g, b));\n  }\n  return '';\n}\n/**\n * Checks if the provided color string is in a valid format.\n *\n * @param {string} color - The color string to check.\n * @returns {boolean} - Returns true if the color string is in a valid format, otherwise returns false.\n */\nexport function checkColorFormat(color) {\n  if (color.indexOf('rgba(') === 0 || color.indexOf('rgb(') === 0) {\n    var rgbaValues = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(',');\n    if (rgbaValues.length === 3 || rgbaValues.length === 4) {\n      return rgbaValues.every(function (val) {\n        var num = parseFloat(val);\n        return !isNaN(num) && num >= 0 && num <= 255;\n      });\n    }\n  } else if (color.indexOf('#') === 0) {\n    var hex = color.substring(1);\n    return (hex.length === 3 || hex.length === 6) && /^[0-9A-Fa-f]{3,6}$/.test(hex);\n  }\n  return false;\n}\n/**\n * Gets the color with adjusted saturation.\n *\n * @param {string} color - The input color string.\n * @param {number} factor - The factor by which to adjust the saturation.\n * @returns {string} - The modified color string.\n */\nexport function getSaturationColor(color, factor) {\n  color = colorNameToHex(color);\n  color = color.replace(/[^0-9a-f]/gi, '');\n  if (color.length < 6) {\n    color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n  }\n  factor = factor || 0;\n  // convert to decimal and change luminosity\n  var rgb = '#';\n  var colorCode;\n  for (var i = 0; i < 3; i++) {\n    colorCode = parseInt(color.substr(i * 2, 2), 16);\n    colorCode = Math.round(Math.min(Math.max(0, colorCode + colorCode * factor), 255));\n    rgb += ('00' + colorCode.toString(16)).substr(colorCode.toString(16).length);\n  }\n  return rgb;\n}\n/**\n * Applies a lightness adjustment to the given color.\n *\n * @param {string} color - The input color string.\n * @param {number} value - The value by which to adjust the lightness.\n * @returns {string} - The modified color string.\n */\nexport function applyZLight(color, value) {\n  var RGB = convertHexToColor(color);\n  RGB.r = parseInt(Math.floor(RGB.r * value).toString(), 10);\n  RGB.g = parseInt(Math.floor(RGB.g * value).toString(), 10);\n  RGB.b = parseInt(Math.floor(RGB.b * value).toString(), 10);\n  return '#' + componentToHex(RGB.r).toUpperCase() + componentToHex(RGB.g).toUpperCase() + componentToHex(RGB.b).toUpperCase();\n}\n/**\n * Calculates the median value of an array of numbers.\n *\n * @param {number[]} values - The array of numbers.\n * @returns {number} - The median value.\n */\nexport function getMedian(values) {\n  var half = Math.floor(values.length / 2);\n  return values.length % 2 ? values[half] : (values[half - 1] + values[half]) / 2.0;\n}\n/**\n * Calculates the legend shapes based on the provided parameters.\n *\n * @param {ChartLocation} location - The location to position the legend shape.\n * @param {Size} size - The size of the legend shape.\n * @param {string} shape - The shape of the legend.\n * @param {PathOption} options - The options for drawing the legend shape.\n * @returns {IShapes} - The calculated legend shape.\n */\nexport function calculateLegendShapes(location, size, shape, options) {\n  var padding = 10;\n  var dir = '';\n  var space = 2;\n  var height = size.height;\n  var width = size.width;\n  var lx = location.x;\n  var ly = location.y;\n  switch (shape) {\n    case 'MultiColoredLine':\n    case 'Line':\n    case 'StackingLine':\n    case 'StackingLine100':\n      dir = 'M' + ' ' + (lx + -width * (3 / 4)) + ' ' + ly + ' ' + 'L' + ' ' + (lx + width * (3 / 4)) + ' ' + ly;\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'StepLine':\n      options.fill = 'transparent';\n      dir = 'M' + ' ' + (lx + -width / 2 - padding / 4) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + -width / 2 + width / 10) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + -width / 2 + width / 10) + ' ' + ly + ' ' + 'L' + ' ' + (lx + -width / 10) + ' ' + ly + ' ' + 'L' + ' ' + (lx + -width / 10) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + width / 5) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + width / 5) + ' ' + (ly + -height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + -height / 2) + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + ' ' + 'L' + '' + (lx + width / 2 + padding / 4) + ' ' + (ly + height / 2);\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'UpArrow':\n      options.fill = options.stroke;\n      options.stroke = 'transparent';\n      dir = 'M' + ' ' + (lx + -width / 2) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + 'L' + ' ' + (lx + width / 2 - space) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly - height / 2 + 2 * space) + 'L' + (lx - width / 2 + space) + ' ' + (ly + height / 2) + ' Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'DownArrow':\n      dir = 'M' + ' ' + (lx - width / 2) + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly - height / 2) + 'L' + ' ' + (lx + width / 2 - space) + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly + height / 2 - 2 * space) + 'L' + (lx - width / 2 + space) + ' ' + (ly - height / 2) + ' Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'RightArrow':\n      dir = 'M' + ' ' + (lx + -width / 2) + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + ly + ' ' + 'L' + ' ' + (lx + -width / 2) + ' ' + (ly + height / 2) + ' L' + ' ' + (lx + -width / 2) + ' ' + (ly + height / 2 - space) + ' ' + 'L' + ' ' + (lx + width / 2 - 2 * space) + ' ' + ly + ' L' + (lx + -width / 2) + ' ' + (ly - height / 2 + space) + ' Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'LeftArrow':\n      options.fill = options.stroke;\n      options.stroke = 'transparent';\n      dir = 'M' + ' ' + (lx + width / 2) + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + (lx + -width / 2) + ' ' + ly + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2 - space) + ' L' + ' ' + (lx + -width / 2 + 2 * space) + ' ' + ly + ' L' + (lx + width / 2) + ' ' + (ly - height / 2 + space) + ' Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Column':\n    case 'Pareto':\n    case 'StackingColumn':\n    case 'StackingColumn100':\n    case 'RangeColumn':\n    case 'Histogram':\n      dir = 'M' + ' ' + (lx - 3 * (width / 5)) + ' ' + (ly - height / 5) + ' ' + 'L' + ' ' + (lx + 3 * (-width / 10)) + ' ' + (ly - height / 5) + ' ' + 'L' + ' ' + (lx + 3 * (-width / 10)) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx - 3 * (width / 5)) + ' ' + (ly + height / 2) + ' ' + 'Z' + ' ' + 'M' + ' ' + (lx + -width / 10 - width / 20) + ' ' + (ly - height / 4 - padding / 2) + ' ' + 'L' + ' ' + (lx + width / 10 + width / 20) + ' ' + (ly - height / 4 - padding / 2) + ' ' + 'L' + ' ' + (lx + width / 10 + width / 20) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + -width / 10 - width / 20) + ' ' + (ly + height / 2) + ' ' + 'Z' + ' ' + 'M' + ' ' + (lx + 3 * (width / 10)) + ' ' + ly + ' ' + 'L' + ' ' + (lx + 3 * (width / 5)) + ' ' + ly + ' ' + 'L' + ' ' + (lx + 3 * (width / 5)) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + 3 * (width / 10)) + ' ' + (ly + height / 2) + ' ' + 'Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Bar':\n    case 'StackingBar':\n    case 'StackingBar100':\n      dir = 'M' + ' ' + (lx + -width / 2 + -padding / 4) + ' ' + (ly - 3 * (height / 5)) + ' ' + 'L' + ' ' + (lx + 3 * (width / 10)) + ' ' + (ly - 3 * (height / 5)) + ' ' + 'L' + ' ' + (lx + 3 * (width / 10)) + ' ' + (ly - 3 * (height / 10)) + ' ' + 'L' + ' ' + (lx - width / 2 + -padding / 4) + ' ' + (ly - 3 * (height / 10)) + ' ' + 'Z' + ' ' + 'M' + ' ' + (lx + -width / 2 + -padding / 4) + ' ' + (ly - height / 5 + padding / 20) + ' ' + 'L' + ' ' + (lx + width / 2 + padding / 4) + ' ' + (ly - height / 5 + padding / 20) + ' ' + 'L' + ' ' + (lx + width / 2 + padding / 4) + ' ' + (ly + height / 10 + padding / 20) + ' ' + 'L' + ' ' + (lx - width / 2 + -padding / 4) + ' ' + (ly + height / 10 + padding / 20) + ' ' + 'Z' + ' ' + 'M' + ' ' + (lx - width / 2 + -padding / 4) + ' ' + (ly + height / 5 + padding / 10) + ' ' + 'L' + ' ' + (lx + -width / 4) + ' ' + (ly + height / 5 + padding / 10) + ' ' + 'L' + ' ' + (lx + -width / 4) + ' ' + (ly + height / 2 + padding / 10) + ' ' + 'L' + ' ' + (lx - width / 2 + -padding / 4) + ' ' + (ly + height / 2 + padding / 10) + ' ' + 'Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Spline':\n      options.fill = 'transparent';\n      dir = 'M' + ' ' + (lx - width / 2) + ' ' + (ly + height / 5) + ' ' + 'Q' + ' ' + lx + ' ' + (ly - height) + ' ' + lx + ' ' + (ly + height / 5) + ' ' + 'M' + ' ' + lx + ' ' + (ly + height / 5) + ' ' + 'Q' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + ' ' + (lx + width / 2) + ' ' + (ly - height / 2);\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Area':\n    case 'MultiColoredArea':\n    case 'RangeArea':\n    case 'StackingArea':\n    case 'StackingArea100':\n      dir = 'M' + ' ' + (lx - width / 2 - padding / 4) + ' ' + (ly + height / 2) + ' ' + 'L' + ' ' + (lx + -width / 4 + -padding / 8) + ' ' + (ly - height / 2) + ' ' + 'L' + ' ' + lx + ' ' + (ly + height / 4) + ' ' + 'L' + ' ' + (lx + width / 4 + padding / 8) + ' ' + (ly + -height / 2 + height / 4) + ' ' + 'L' + ' ' + (lx + height / 2 + padding / 4) + ' ' + (ly + height / 2) + ' ' + 'Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'SplineArea':\n    case 'SplineRangeArea':\n      dir = 'M' + ' ' + (lx - width / 2) + ' ' + (ly + height / 5) + ' ' + 'Q' + ' ' + lx + ' ' + (ly - height) + ' ' + lx + ' ' + (ly + height / 5) + ' ' + 'Z' + ' ' + 'M' + ' ' + lx + ' ' + (ly + height / 5) + ' ' + 'Q' + ' ' + (lx + width / 2) + ' ' + (ly + height / 2) + ' ' + (lx + width / 2) + ' ' + (ly - height / 2) + ' ' + ' Z';\n      merge(options, {\n        'd': dir\n      });\n      break;\n    case 'Pie':\n    case 'Doughnut':\n      {\n        options.stroke = 'transparent';\n        var r = Math.min(height, width) / 2;\n        dir = getAccumulationLegend(lx, ly, r, height, width);\n        merge(options, {\n          'd': dir\n        });\n        break;\n      }\n  }\n  return {\n    renderOption: options\n  };\n}\n/**\n * Trims the text to fit within the specified maximum width.\n *\n * @param {number} maxWidth - The maximum width for the text.\n * @param {string} text - The text to be trimmed.\n * @param {FontModel} font - The font settings for the text.\n * @param {boolean} isRtlEnabled - Indicates whether right-to-left text rendering is enabled.\n * @param {FontModel} [themeFontStyle] - The font style to be used for theme-specific settings.\n * @returns {string} - The trimmed text.\n */\nexport function textTrim(maxWidth, text, font, isRtlEnabled, themeFontStyle) {\n  var label = text;\n  var size = measureText(text, font, themeFontStyle).width;\n  if (size > maxWidth) {\n    var textLength = text.length;\n    for (var i = textLength - 1; i >= 0; --i) {\n      label = isRtlEnabled ? '...' + text.substring(0, i) : text.substring(0, i) + '...';\n      size = measureText(label, font, themeFontStyle).width;\n      if (size <= maxWidth) {\n        return label;\n      }\n    }\n  }\n  return label;\n}\n/**\n * Trims the text and performs line breaks based on the maximum width and font settings.\n *\n * @param {number} maxWidth - The maximum width allowed for the text.\n * @param {string} text - The text to be trimmed.\n * @param {FontModel} font - The font settings for the text.\n * @param {FontModel} [themeFontStyle] - Optional. The font style based on the theme.\n * @returns {string[]} - An array of trimmed text lines with line breaks.\n */\nexport function lineBreakLabelTrim(maxWidth, text, font, themeFontStyle) {\n  var labelCollection = [];\n  var breakLabels = text.split('<br>');\n  for (var i = 0; i < breakLabels.length; i++) {\n    text = breakLabels[i];\n    var size = measureText(text, font, themeFontStyle).width;\n    if (size > maxWidth) {\n      var textLength = text.length;\n      for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n        text = text.substring(0, i_1) + '...';\n        size = measureText(text, font, themeFontStyle).width;\n        if (size <= maxWidth) {\n          labelCollection.push(text);\n          break;\n        }\n      }\n    } else {\n      labelCollection.push(text);\n    }\n  }\n  return labelCollection;\n}\n/**\n * Converts a string value to a number, considering the container size for percentage values.\n *\n * @param {string} value - The string value to convert to a number.\n * @param {number} containerSize - The size of the container, used for percentage values.\n * @returns {number} - The converted numeric value.\n */\nexport function stringToNumber(value, containerSize) {\n  if (value !== null && value !== undefined) {\n    return value.indexOf('%') !== -1 ? containerSize / 100 * parseInt(value, 10) : parseInt(value, 10);\n  }\n  return null;\n}\n/**\n * Redraws the SVG or canvas element based on the provided options.\n *\n * @param {boolean} redraw - Specifies whether to redraw the element.\n * @param {string} id - The id of the element to redraw.\n * @param {PathAttributes | RectAttributes | CircleAttributes} [options] - The attributes of the element to redraw.\n * @param {SvgRenderer | CanvasRenderer} [renderer] - The renderer to use for redrawing.\n * @returns {Element} - The redrawn element.\n */\nexport function redrawElement(redraw, id, options, renderer) {\n  if (!redraw) {\n    return null;\n  }\n  var element = getElement(id);\n  if (element && options) {\n    renderer.setElementAttributes(options, element.tagName === 'clipPath' ? element.childNodes[0] : element);\n  }\n  return element;\n}\n/**\n * Animates the redrawn element from its start to end location over a specified duration.\n *\n * @param {Element | HTMLElement} element - The element to animate.\n * @param {number} duration - The duration of the animation in milliseconds.\n * @param {ChartLocation} start - The start location of the element.\n * @param {ChartLocation} end - The end location of the element.\n * @param {string} [x='x'] - The attribute representing the horizontal position of the element.\n * @param {string} [y='y'] - The attribute representing the vertical position of the element.\n * @param {number} [angle=0] - The angle of rotation for the element.\n * @param {ChartLocation} [newTransform=new ChartLocation(0, 0)] - The new transform location of the element.\n * @param {ChartLocation} [previousTransform=new ChartLocation(0, 0)] - The previous transform location of the element.\n * @param {boolean} [pointAnimation] - Specifies the animation based on points.\n * @returns {void}\n */\nexport function animateRedrawElement(element, duration, start, end, x, y, angle, newTransform, previousTransform, pointAnimation) {\n  if (x === void 0) {\n    x = 'x';\n  }\n  if (y === void 0) {\n    y = 'y';\n  }\n  if (angle === void 0) {\n    angle = 0;\n  }\n  if (newTransform === void 0) {\n    newTransform = new ChartLocation(0, 0);\n  }\n  if (previousTransform === void 0) {\n    previousTransform = new ChartLocation(0, 0);\n  }\n  var isDiv = element.tagName === 'DIV';\n  var setStyle = function (xValue, yValue, rotateX, rotateY) {\n    if (isDiv) {\n      element.style[x] = xValue + 'px';\n      element.style[y] = yValue + 'px';\n    } else {\n      element.setAttribute(x, xValue + '');\n      element.setAttribute(y, yValue + '');\n      if (angle && newTransform.x && newTransform.y && previousTransform.x && previousTransform.y && rotateX && rotateY) {\n        element.setAttribute('transform', 'rotate(' + angle + ',' + rotateX + ',' + rotateY + ')');\n      }\n      if (pointAnimation) {\n        element.setAttribute('transform', 'translate(' + rotateX + ',' + rotateY + ')');\n      }\n    }\n  };\n  setStyle(start.x, start.y, previousTransform.x, previousTransform.y);\n  new Animation({}).animate(createElement('div'), {\n    duration: duration,\n    progress: function (args) {\n      setStyle(linear(args.timeStamp, start.x, end.x - start.x, args.duration), linear(args.timeStamp, start.y, end.y - start.y, args.duration), linear(args.timeStamp, previousTransform.x, newTransform.x - previousTransform.x, args.duration), linear(args.timeStamp, previousTransform.y, newTransform.y - previousTransform.y, args.duration));\n    },\n    end: function () {\n      setStyle(end.x, end.y, newTransform.x, newTransform.y);\n    }\n  });\n}\n/**\n * Animates the text content of an HTML element from a start value to an end value over a specified duration.\n *\n * @param {HTMLElement} element - The HTML element whose text content will be animated.\n * @param {number} duration - The duration of the animation in milliseconds.\n * @param {number} start - The starting value of the animation.\n * @param {number} end - The ending value of the animation.\n * @param {string} customLabelFormat - A custom format string that includes a placeholder for the value.\n * @returns {void}\n */\nexport function animateTextElement(element, duration, start, end, customLabelFormat) {\n  if (element && start && end) {\n    var formatText_1 = function (value) {\n      return customLabelFormat ? customLabelFormat.replace('{value}', value.toString()) : value.toString();\n    };\n    new Animation({}).animate(createElement('div'), {\n      duration: duration,\n      progress: function (args) {\n        element.style.animation = '';\n        var progress = args.timeStamp / args.duration;\n        var currentValue = start + (end - start) * progress;\n        if (start % 1 !== 0 || end % 1 !== 0) {\n          currentValue = parseFloat(currentValue.toFixed(1));\n        } else {\n          currentValue = Math.round(currentValue);\n        }\n        element.textContent = formatText_1(currentValue);\n      },\n      end: function () {\n        element.textContent = formatText_1(end);\n      }\n    });\n  }\n}\n/**\n * Renders a text element using the specified renderer and options.\n *\n * @param {SvgRenderer | CanvasRenderer} renderer - The renderer used for rendering.\n * @param {TextOption} option - The options for the text element.\n * @param {FontModel} font - The font settings for the text.\n * @param {string} color - The color of the text.\n * @param {HTMLElement | Element} parent - The parent element to which the text element is appended.\n * @param {boolean} [isMinus=false] - Indicates whether the text represents a negative value.\n * @param {boolean} [redraw] - Indicates whether to redraw the element.\n * @param {boolean} [isAnimate] - Indicates whether to animate the element.\n * @param {boolean} [forceAnimate=false] - Indicates whether to force animation.\n * @param {number} [animateDuration] - The duration of the animation in milliseconds.\n * @param {Rect} [seriesClipRect] - The clipping rectangle for the series.\n * @param {Size} [labelSize] - The size of the label.\n * @param {boolean} [isRotatedLabelIntersect] - Indicates whether rotated labels intersect.\n * @param {boolean} [isCanvas] - Indicates whether the rendering is done on a canvas.\n * @param {boolean} [isDataLabelWrap] - Indicates whether data labels are wrapped.\n * @param {FontModel} [themeFontStyle] - The font settings based on the theme.\n * @param {ChartLocation} [transform] - The location to transform the text element.\n * @param {string} [previousTransform] - The previous transform of the text element.\n * @returns {Element} - The rendered text element.\n */\nexport function textElement(renderer, option, font, color, parent, isMinus, redraw, isAnimate, forceAnimate, animateDuration, seriesClipRect, labelSize, isRotatedLabelIntersect, isCanvas, isDataLabelWrap, themeFontStyle, transform, previousTransform) {\n  if (isMinus === void 0) {\n    isMinus = false;\n  }\n  if (forceAnimate === void 0) {\n    forceAnimate = false;\n  }\n  var renderOptions = {};\n  var tspanElement;\n  //let renderer: SvgRenderer = new SvgRenderer('');\n  var height;\n  var dy;\n  var label;\n  var width = 0;\n  var dx;\n  var maxWidth = 0;\n  if (option.text.length > 1 && isDataLabelWrap) {\n    for (var i = 0, len = option.text.length; i < len; i++) {\n      maxWidth = Math.max(maxWidth, measureText(option.text[i], font, themeFontStyle).width);\n    }\n    width = measureText(option.text[0], font, themeFontStyle).width;\n  }\n  dx = option.text.length > 1 && isDataLabelWrap ? option.x + maxWidth / 2 - width / 2 : option.x;\n  renderOptions = {\n    'id': option.id,\n    'x': dx,\n    'y': option.y,\n    'fill': color ? color : 'black',\n    'font-size': font.size || themeFontStyle.size,\n    'font-style': font.fontStyle || themeFontStyle.fontStyle,\n    'font-family': font.fontFamily || themeFontStyle.fontFamily,\n    'font-weight': font.fontWeight || themeFontStyle.fontWeight,\n    'text-anchor': option.anchor,\n    'labelRotation': option.labelRotation,\n    'transform': option.transform,\n    'opacity': font.opacity,\n    'dominant-baseline': option.baseLine\n  };\n  var text = typeof option.text === 'string' ? option.text : isMinus ? option.text[option.text.length - 1] : option.text[0];\n  var transX = seriesClipRect ? seriesClipRect.x : 0;\n  var transY = seriesClipRect ? seriesClipRect.y : 0;\n  var htmlObject = renderer.createText(renderOptions, text, transX, transY);\n  if (typeof option.text !== 'string' && option.text.length > 1) {\n    for (var i = 1, len = option.text.length; i < len; i++) {\n      height = measureText(option.text[i], font, themeFontStyle).height;\n      width = measureText(option.text[i], font, themeFontStyle).width;\n      dy = option.y + (isMinus ? -(i * height) : i * height);\n      dx = isDataLabelWrap ? option.x + maxWidth / 2 - width / 2 : option.x;\n      label = isMinus ? option.text[option.text.length - (i + 1)] : option.text[i];\n      if (isCanvas) {\n        tspanElement = renderer.createText(renderOptions, label, null, null, dy, true);\n      } else {\n        tspanElement = renderer.createTSpan({\n          'x': dx,\n          'id': option.id,\n          'y': dy\n        }, label);\n        htmlObject.appendChild(tspanElement);\n      }\n    }\n  }\n  if (!isRotatedLabelIntersect) {\n    appendChildElement(renderer instanceof CanvasRenderer, parent, htmlObject, redraw, isAnimate, 'x', 'y', null, null, forceAnimate, false, null, animateDuration, false, option.labelRotation, transform, previousTransform);\n  }\n  return htmlObject;\n}\n/**\n * Calculates the size of the chart.\n *\n * @param {Chart | AccumulationChart | RangeNavigator | StockChart | Chart3D | CircularChart3D} chart - The chart for which to calculate the size.\n * @returns {void}\n */\nexport function calculateSize(chart) {\n  // fix for Chart rendered with default width in IE issue\n  var containerWidth = chart.element.clientWidth || chart.element.offsetWidth;\n  var containerHeight = chart.element.clientHeight;\n  if (chart.stockChart) {\n    containerWidth = chart.stockChart.availableSize.width;\n    containerHeight = chart.stockChart.availableSize.height;\n  }\n  var height = 450;\n  var marginHeight;\n  if (chart.getModuleName() === 'rangeNavigator') {\n    var range = chart;\n    var tooltipSpace = range.tooltip.enable ? 35 : 0;\n    var periodHeight = range.periodSelectorSettings.periods.length ? range.periodSelectorSettings.height : 0;\n    marginHeight = range.margin.top + range.margin.bottom + tooltipSpace;\n    var labelSize = measureText('tempString', range.labelStyle, range.themeStyle.axisLabelFont).height;\n    var labelPadding = 15;\n    height = (chart.series.length ? Browser.isDevice ? 80 : 120 : (range.enableGrouping ? 40 + labelPadding + labelSize : 40) + marginHeight) + periodHeight;\n    if (range.disableRangeSelector) {\n      height = periodHeight;\n    }\n    if (chart.stockChart && chart.stockChart.chart && chart.stockChart.chart.axisCollections[1].labelPosition === 'Outside') {\n      var padding = chart.stockChart.chart.axisCollections[1].labelPadding + chart.stockChart.chart.axisCollections[1].lineStyle.width * 0.5;\n      chart.width = (chart.stockChart.availableSize.width - (chart.stockChart.chart.axisCollections[1].maxLabelSize.width + padding)).toString();\n    }\n  }\n  chart.availableSize = new Size(stringToNumber(chart.width, containerWidth) || containerWidth || 600, stringToNumber(chart.height, containerHeight || height) || containerHeight || height);\n  if (chart.getModuleName() === 'chart') {\n    chart.scaleX = 1;\n    chart.scaleY = 1;\n  }\n}\n/**\n * Creates an SVG element for the specified chart or chart element.\n *\n * @param {Chart | AccumulationChart | RangeNavigator | Chart3D | CircularChart3D} chart - The chart or chart element for which to create the SVG element.\n * @returns {void}\n */\nexport function createSvg(chart) {\n  chart.canvasRender = new CanvasRenderer(chart.element.id);\n  chart.renderer = chart.enableCanvas ? chart.canvasRender : new SvgRenderer(chart.element.id);\n  calculateSize(chart);\n  if (chart.stockChart && chart.getModuleName() === 'chart') {\n    chart.svgObject = chart.stockChart.chartObject;\n  } else if (chart.stockChart && chart.getModuleName() === 'rangeNavigator' && chart.stockChart.selectorObject) {\n    chart.svgObject = chart.stockChart.selectorObject;\n  } else {\n    if (chart.enableCanvas) {\n      chart.svgObject = chart.renderer.createCanvas({\n        id: chart.element.id + '_canvas',\n        width: chart.availableSize.width,\n        height: chart.availableSize.height\n      });\n    } else {\n      chart.svgObject = chart.renderer.createSvg({\n        id: chart.element.id + '_svg',\n        width: chart.availableSize.width,\n        height: chart.availableSize.height\n      });\n    }\n  }\n  if (chart.enableCanvas) {\n    chart.renderer.ctx.direction = chart.enableRtl ? 'rtl' : 'ltr';\n  }\n}\n/**\n * Gets the title text with specified style and width, and supports right-to-left rendering.\n *\n * @param {string} title - The title text.\n * @param {FontModel} style - The font style for the title.\n * @param {number} width - The width available for rendering the title.\n * @param {boolean} isRtlEnabled - Specifies whether right-to-left rendering is enabled.\n * @param {FontModel} [themeFontStyle] - The font style used for theme rendering.\n * @returns {string[]} An array of strings containing the title text with line breaks if needed.\n */\nexport function getTitle(title, style, width, isRtlEnabled, themeFontStyle) {\n  var titleCollection = [];\n  switch (style.textOverflow) {\n    case 'Wrap':\n      titleCollection = textWrap(title, width, style, isRtlEnabled, title.indexOf(' ') < 0 ? true : null, null, themeFontStyle);\n      break;\n    case 'Trim':\n      titleCollection.push(textTrim(width, title, style, isRtlEnabled, themeFontStyle));\n      break;\n    default:\n      titleCollection.push(title);\n      break;\n  }\n  return titleCollection;\n}\n/**\n * Calculates the x-coordinate position for rendering the title text within the specified rect.\n *\n * @param {Rect} rect - The rect within which the title text is to be rendered.\n * @param {FontModel} titleStyle - The font style used for rendering the title text.\n * @returns {number} The x-coordinate position for rendering the title text.\n */\nexport function titlePositionX(rect, titleStyle) {\n  var positionX;\n  if (titleStyle.textAlignment === 'Near') {\n    positionX = rect.x;\n  } else if (titleStyle.textAlignment === 'Center') {\n    positionX = rect.x + rect.width / 2;\n  } else {\n    positionX = rect.x + rect.width;\n  }\n  return positionX;\n}\n/**\n * Wraps the input text into multiple lines based on the specified maximum width and font style.\n *\n * @param {string} currentLabel - The text to be wrapped.\n * @param {number} maximumWidth - The maximum width allowed for each line of text.\n * @param {FontModel} font - The font style used for rendering the text.\n * @param {boolean} isRtlEnabled - Specifies whether right-to-left text direction is enabled.\n * @param {boolean} [wrapAnyWhere=false] - Indicates whether the text can be wrapped at any position.\n * @param {boolean} [clip=false] - Specifies whether text exceeding the maximum width should be clipped.\n * @param {FontModel} [themeFontStyle] - The font style used as the base for the text wrapping operation.\n * @param {number} [maximumLabelHeight] - The total height available for the wrapped text.\n * @returns {string[]} An array of strings representing the wrapped lines of text.\n */\nexport function textWrap(currentLabel, maximumWidth, font, isRtlEnabled, wrapAnyWhere, clip, themeFontStyle, maximumLabelHeight) {\n  if (wrapAnyWhere) {\n    return textWrapAnyWhere(currentLabel, maximumWidth, font, themeFontStyle);\n  }\n  var textCollection = currentLabel.split(' ');\n  var label = '';\n  var labelCollection = [];\n  var text;\n  var lineHeight = measureText('chartMeasureText', font, themeFontStyle).height;\n  var textHeight = 0;\n  for (var i = 0, len = textCollection.length; i < len; i++) {\n    text = textCollection[i];\n    if (measureText(label.concat(label === '' ? '' : ' ' + text), font, themeFontStyle).width < maximumWidth) {\n      label = label.concat((label === '' ? '' : ' ') + text);\n    } else {\n      if (label !== '') {\n        textHeight += lineHeight;\n        if (maximumLabelHeight && textHeight > maximumLabelHeight) {\n          labelCollection[labelCollection.length - 1] += '...';\n          return labelCollection;\n        }\n        labelCollection.push(clip ? label : textTrim(maximumWidth, label, font, isRtlEnabled, themeFontStyle));\n        label = text;\n      } else {\n        textHeight += lineHeight;\n        if (maximumLabelHeight && textHeight > maximumLabelHeight) {\n          labelCollection[labelCollection.length - 1] += '...';\n          return labelCollection;\n        }\n        labelCollection.push(clip ? text : textTrim(maximumWidth, text, font, isRtlEnabled, themeFontStyle));\n      }\n    }\n    if (label && i === len - 1) {\n      textHeight += lineHeight;\n      if (maximumLabelHeight && textHeight > maximumLabelHeight) {\n        labelCollection[labelCollection.length - 1] += '...';\n        return labelCollection;\n      }\n      labelCollection.push(clip ? label : textTrim(maximumWidth, label, font, isRtlEnabled, themeFontStyle));\n    }\n  }\n  return labelCollection;\n}\n/**\n * Wraps the input text into multiple lines, allowing wrapping at any position.\n *\n * @param {string} currentLabel - The text to be wrapped.\n * @param {number} maximumWidth - The maximum width allowed for each line of text.\n * @param {FontModel} font - The font style used for rendering the text.\n * @param {FontModel} [themeFontStyle] - The font style used as the base for the text wrapping operation.\n * @returns {string[]} An array of strings representing the wrapped lines of text.\n * @private\n */\nexport function textWrapAnyWhere(currentLabel, maximumWidth, font, themeFontStyle) {\n  var size = measureText(currentLabel, font, themeFontStyle).width;\n  var labelCollection = [];\n  if (size > maximumWidth) {\n    var label = '';\n    var startIndex = 0;\n    var labelIndex = 1;\n    while (labelIndex < currentLabel.length) {\n      label = currentLabel.substring(startIndex, labelIndex);\n      size = measureText(label, font, themeFontStyle).width;\n      if (size < maximumWidth) {\n        labelIndex++;\n      } else if (size === maximumWidth) {\n        startIndex = labelIndex;\n        labelCollection.push(label);\n        labelIndex++;\n        label = '';\n      } else if (size > maximumWidth) {\n        label = label.slice(0, -1);\n        startIndex = labelIndex - 1;\n        labelCollection.push(label);\n        label = '';\n      }\n    }\n    if (label.length > 0) {\n      labelCollection.push(label);\n    }\n  } else {\n    labelCollection.push(currentLabel);\n  }\n  return labelCollection;\n}\n/**\n * Gets the Unicode text from the input string based on the provided regular expression.\n *\n * @param {string} text - The input string.\n * @param {RegExp} regexp - The regular expression pattern to match Unicode characters.\n * @returns {string} The Unicode text extracted from the input string.\n */\nexport function getUnicodeText(text, regexp) {\n  var title = text.replace(regexp, ' ');\n  var digit = text.match(regexp);\n  var digitSpecific = ' ';\n  var convertedText = ' ';\n  var k = 0;\n  var unicodeSub = {\n    '0': '\\u2080',\n    '1': '\\u2081',\n    '2': '\\u2082',\n    '3': '\\u2083',\n    '4': '\\u2084',\n    '5': '\\u2085',\n    '6': '\\u2086',\n    '7': '\\u2087',\n    '8': '\\u2088',\n    '9': '\\u2089'\n  };\n  var unicodeSup = {\n    '0': '\\u2070',\n    '1': '\\u00B9',\n    '2': '\\u00B2',\n    '3': '\\u00B3',\n    '4': '\\u2074',\n    '5': '\\u2075',\n    '6': '\\u2076',\n    '7': '\\u2077',\n    '8': '\\u2078',\n    '9': '\\u2079'\n  };\n  for (var i = 0; i <= title.length - 1; i++) {\n    if (title[i] === ' ') {\n      digitSpecific = regexp === regSub ? digit[k].replace(/~/g, '') : digit[k].replace(/\\^/g, '');\n      for (var j = 0; j < digitSpecific.length; j++) {\n        convertedText += regexp === regSub ? unicodeSub[digitSpecific[j]] : unicodeSup[digitSpecific[j]];\n      }\n      k++;\n    } else {\n      convertedText += title[i];\n    }\n  }\n  return convertedText.trim();\n}\n/**\n * Resets the Blazor templates of the given control (Chart or AccumulationChart).\n *\n * @param {Chart | AccumulationChart} control - The control to reset Blazor templates for.\n * @returns {void}\n */\nexport function blazorTemplatesReset(control) {\n  for (var i = 0; i < control.annotations.length; i++) {\n    resetBlazorTemplate((control.element.id + '_Annotation_' + i).replace(/[^a-zA-Z0-9]/g, ''), 'ContentTemplate');\n  }\n  //This reset the tooltip templates\n  resetBlazorTemplate(control.element.id + '_tooltipparent_template' + '_blazorTemplate', 'Template');\n  //Datalabel templates reset\n  resetBlazorTemplate(control.element.id + '_DataLabel');\n}\n/** @private */\nvar CustomizeOption = /** @class */function () {\n  function CustomizeOption(id) {\n    this.id = id;\n  }\n  return CustomizeOption;\n}();\nexport { CustomizeOption };\n/** @private */\nvar StackValues = /** @class */function () {\n  function StackValues(startValue, endValue) {\n    this.startValues = startValue;\n    this.endValues = endValue;\n  }\n  return StackValues;\n}();\nexport { StackValues };\n/** @private */\nvar RectOption = /** @class */function (_super) {\n  __extends(RectOption, _super);\n  function RectOption(id, fill, border, opacity, rect, rx, ry, transform, dashArray) {\n    var _this = _super.call(this, id, fill, border.width, border.color, opacity, dashArray) || this;\n    _this.y = rect.y;\n    _this.x = rect.x;\n    _this.height = rect.height;\n    _this.width = rect.width;\n    _this.rx = rx ? rx : 0;\n    _this.ry = ry ? ry : 0;\n    _this.transform = transform ? transform : '';\n    _this.stroke = border.width !== 0 && _this.stroke !== '' ? border.color === null ? '' : border.color : 'transparent';\n    return _this;\n  }\n  return RectOption;\n}(PathOption);\nexport { RectOption };\n/** @private */\nvar ImageOption = /** @class */function () {\n  function ImageOption(height, width, href, x, y, id, visibility, preserveAspectRatio) {\n    this.height = height;\n    this.width = width;\n    this.href = href;\n    this.x = x;\n    this.y = y;\n    this.id = id;\n    this.visibility = visibility;\n    this.preserveAspectRatio = preserveAspectRatio;\n  }\n  return ImageOption;\n}();\nexport { ImageOption };\n/** @private */\nvar CircleOption = /** @class */function (_super) {\n  __extends(CircleOption, _super);\n  function CircleOption(id, fill, border, opacity, cx, cy, r) {\n    var _this = _super.call(this, id, fill, border.width, border.color, opacity) || this;\n    _this.cy = cy;\n    _this.cx = cx;\n    _this.r = r;\n    return _this;\n  }\n  return CircleOption;\n}(PathOption);\nexport { CircleOption };\n/** @private */\nvar PolygonOption = /** @class */function () {\n  function PolygonOption(id, points, fill) {\n    this.id = id;\n    this.points = points;\n    this.fill = fill;\n  }\n  return PolygonOption;\n}();\nexport { PolygonOption };\n/** @private */\nvar ChartLocation = /** @class */function () {\n  function ChartLocation(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  return ChartLocation;\n}();\nexport { ChartLocation };\n/** @private */\nvar LabelLocation = /** @class */function () {\n  function LabelLocation(x, y) {\n    this.x = 0;\n    this.y = 0;\n    this.x = x;\n    this.y = y;\n  }\n  return LabelLocation;\n}();\nexport { LabelLocation };\n/** @private */\nvar Thickness = /** @class */function () {\n  function Thickness(left, right, top, bottom) {\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n  }\n  return Thickness;\n}();\nexport { Thickness };\n/** @private */\nvar ColorValue = /** @class */function () {\n  function ColorValue(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n  return ColorValue;\n}();\nexport { ColorValue };\n/** @private */\nvar PointData = /** @class */function () {\n  function PointData(point, series, index) {\n    if (index === void 0) {\n      index = 0;\n    }\n    this.point = point;\n    this.series = series;\n    this.lierIndex = index;\n  }\n  return PointData;\n}();\nexport { PointData };\n/** @private */\nvar AccPointData = /** @class */function () {\n  function AccPointData(point, series, index) {\n    if (index === void 0) {\n      index = 0;\n    }\n    this.point = point;\n    this.series = series;\n    this.index = index;\n  }\n  return AccPointData;\n}();\nexport { AccPointData };\n/** @private */\nvar Point3D = /** @class */function () {\n  /**\n   * Initializes a new instance of the Chart3DData class.\n   *\n   * @param {Chart3DPoint} point - The 3D point object.\n   * @param {Chart3DSeries} series - The 3D series object.\n   * @private\n   */\n  function Point3D(point, series) {\n    this.point = point;\n    this.series = series;\n  }\n  return Point3D;\n}();\nexport { Point3D };\n/** @private */\nvar ControlPoints = /** @class */function () {\n  function ControlPoints(controlPoint1, controlPoint2) {\n    this.controlPoint1 = controlPoint1;\n    this.controlPoint2 = controlPoint2;\n  }\n  return ControlPoints;\n}();\nexport { ControlPoints };\n/**\n * Gets the color from the range color setting model based on the specified value.\n *\n * @param {RangeColorSettingModel} colorMap - The range color setting model.\n * @param {number} value - The value for which to get the color.\n * @returns {string} - The color corresponding to the specified value.\n */\nexport function getColorByValue(colorMap, value) {\n  var color = '';\n  var rbgColorValue;\n  if (Number(value) === colorMap.start) {\n    color = colorMap.colors[0];\n  } else if (Number(value) === colorMap.end) {\n    color = colorMap.colors[colorMap.colors.length - 1];\n  } else {\n    rbgColorValue = getGradientColor(Number(value), colorMap);\n    color = convertToHexCode(rbgColorValue);\n  }\n  return color;\n}\n/**\n * Gets the gradient color from the range color setting model based on the specified value.\n *\n * @param {number} value - The value for which to get the gradient color.\n * @param {RangeColorSettingModel} colorMap - The range color setting model.\n * @returns {ColorValue} - The gradient color corresponding to the specified value.\n */\nexport function getGradientColor(value, colorMap) {\n  var previousOffset = colorMap.start;\n  var nextOffset = colorMap.end;\n  var percent = 0;\n  var full = nextOffset - previousOffset;\n  var midColor;\n  percent = (value - previousOffset) / full;\n  var previousColor;\n  var nextColor;\n  if (colorMap.colors.length <= 2) {\n    previousColor = colorMap.colors[0].charAt(0) === '#' ? colorMap.colors[0] : colorNameToHex(colorMap.colors[0]);\n    nextColor = colorMap.colors[colorMap.colors.length - 1].charAt(0) === '#' ? colorMap.colors[colorMap.colors.length - 1] : colorNameToHex(colorMap.colors[colorMap.colors.length - 1]);\n  } else {\n    previousColor = colorMap.colors[0].charAt(0) === '#' ? colorMap.colors[0] : colorNameToHex(colorMap.colors[0]);\n    nextColor = colorMap.colors[colorMap.colors.length - 1].charAt(0) === '#' ? colorMap.colors[colorMap.colors.length - 1] : colorNameToHex(colorMap.colors[colorMap.colors.length - 1]);\n    var a = full / (colorMap.colors.length - 1);\n    var b = void 0;\n    var c = void 0;\n    var length_2 = colorMap.colors.length - 1;\n    var splitColorValueOffset = [];\n    var splitColor = {};\n    for (var j = 1; j < length_2; j++) {\n      c = j * a;\n      b = previousOffset + c;\n      splitColor = {\n        b: b,\n        color: colorMap.colors[j]\n      };\n      splitColorValueOffset.push(splitColor);\n    }\n    for (var i = 0; i < splitColorValueOffset.length; i++) {\n      if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n        midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n        nextColor = midColor;\n        percent = value <= splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n      } else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === splitColorValueOffset.length - 1) {\n        midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n        previousColor = midColor;\n        percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n      }\n      if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n        if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n          midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ? splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n          previousColor = midColor;\n          nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ? splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n          percent = Math.abs(value - splitColorValueOffset[i + 1]['b']) / a;\n        }\n      }\n    }\n  }\n  return getPercentageColor(percent, previousColor, nextColor);\n}\n/**\n * Calculates the color based on the percentage change between two values.\n *\n * @param {number} percent - The percentage change.\n * @param {string} previous - The color for the previous value.\n * @param {string} next - The color for the next value.\n * @returns {ColorValue} - The calculated color value.\n */\nexport function getPercentageColor(percent, previous, next) {\n  var nextColor = next.split('#')[1];\n  var prevColor = previous.split('#')[1];\n  var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n  var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n  var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n  return new ColorValue(r, g, b);\n}\n/**\n * Calculates the percentage change between two values.\n *\n * @param {number} percent - The percentage to calculate.\n * @param {number} previous - The previous value.\n * @param {number} next - The next value.\n * @returns {number} - The calculated percentage change.\n */\nexport function getPercentage(percent, previous, next) {\n  var full = next - previous;\n  return Math.round(previous + full * percent);\n}\n/**\n * Gets the text anchor based on the specified alignment and Right-to-Left setting.\n *\n * @param {Alignment} alignment - The alignment of the text.\n * @param {boolean} enableRtl - Specifies whether Right-to-Left is enabled.\n * @returns {string} - The text anchor value.\n */\nexport function getTextAnchor(alignment, enableRtl) {\n  switch (alignment) {\n    case 'Near':\n      return enableRtl ? 'end' : 'start';\n    case 'Far':\n      return enableRtl ? 'start' : 'end';\n    default:\n      return 'middle';\n  }\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Animation","compile","templateComplier","Browser","merge","extend","isNullOrUndefined","resetBlazorTemplate","createElement","remove","Index","VisibleLabels","axisLabelRender","regSub","measureText","Rect","TextOption","Size","PathOption","SvgRenderer","CanvasRenderer","sort","data","fields","isDescending","sortData","i","length","j","Date","getTime","a","first","second","isBreakLabel","label","indexOf","getVisiblePoints","series","points","tempPoints","tempPoint","pointIndex","x","index","push","calculateScrollbarOffset","scrollbar","isHorizontalAxis","scrollbarPadding","chart","component","titleHeight","subTitleHeight","titlePadding","titleStyle","position","legendSettings","visible","title","themeStyle","chartTitleFont","height","titleCollection","subTitle","subTitleStyle","chartSubTitleFont","subTitleCollection","scrollbarOffsetValue","axis","scrollbarSettings","margin","top","scrollBarModule","topScrollBarCount","border","width","availableSize","bottomScrollBarCount","bottom","rightScrollBarCount","right","left","leftScrollBarCount","rotateTextSize","font","text","angle","themeFontStyle","transformValue","element","style","transform","renderer","id","labelText","textCollection","dy","tspanElement","options","initialClipRect","y","size","fontStyle","fontFamily","fontWeight","split","htmlObject","createText","delayRedraw","redraw","stockChart","appendChild","svgObject","len","axisLabelFont","createTSpan","axisSvgObject","svgRenderer","createSvg","document","body","box","getBoundingClientRect","pointsAdded","enableCanvas","textWidth","textHeight","angleInRadians","Math","PI","rotatedTextWidth","abs","cos","sin","rotatedTextHeight","removeElement","getElement","logBase","value","base","log","showTooltip","areaWidth","isTouch","isTitleOrLegendEnabled","bound","tooltip","getElementById","styles","toString","innerText","parseInt","replace","setTimeout","inside","range","max","min","withIn","logWithIn","valueType","withInRange","previousPoint","currentPoint","nextPoint","zoomModule","zoomSettings","enableAnimation","mX2","xValue","xAxis","mX1","mX3","xStart","floor","visibleRange","xEnd","ceil","sum","values","_i","values_1","subArraySum","last","sumIndex","isFirst","intermediateSumIndexes","yName","sumIndexes","subtractThickness","rect","thickness","subtractRect","degreeToLocation","degree","radius","center","radian","ChartLocation","degreeToRadian","getRotatedRectangleCoordinates","actualPoints","centerX","centerY","coordinatesAfterRotation","point","tempX","tempY","rotatedX","rotatedY","isRotatedRectIntersect","polygons","minA","maxA","projected","i1","minB","maxB","polygon","i2","p1","p2","normal","undefined","getAccumulationLegend","locX","locY","r","cartesianlarge","cartesiansmall","getAngle","atan2","subArray","valueToCoefficient","result","delta","isInverse","isChart","isAxisInverse","isInversed","TransformToVisible","yAxis","isInverted","labelPlacement","type","CoefficientToVector","valueToPolarCoefficient","primaryXAxis","startAngle","clipRect","indexFinder","isPoint","ids","coefficient","dateTimeInterval","interval","visibleLabels","Mean","verticalStandardMean","verticalSquareRoot","horizontalStandardMean","horizontalSquareRoot","verticalMean","horizontalMean","PolarArc","endAngle","innerRadius","currentXPosition","createTooltip","fontSize","innerHTML","setAttribute","cssText","createZoomingLabels","parent","isVertical","opposedPosition","isAxisOpposedPosition","anchor","enableRtl","chartRect","pathElement","rx","arrowLocation","direction","scrollBarHeight","enable","zoomingScrollBar","isRtlEnabled","startLabel","endLabel","labelStyle","findCrosshairDirection","drawPath","crosshairFill","theme","shadowId","isIE","shadow","defElement","createDefs","textElement","color","crosshairLabelFont","rX","rY","arrowPadding","tipX","tipY","startX","startY","concat","withInBounds","bounds","getValueXByPoint","actualValue","getValueYByPoint","findClipRect","isCanvas","drawType","requireInvertedAxis","firstToLowerCase","str","substr","toLowerCase","getTransform","invertedAxis","getMinPointsDelta","seriesCollection","minDelta","Number","MAX_VALUE","xValues","minVal","seriesMin","stackingGroups","name","xAxisName","stackingGroup","map","minValue","timeOffset","xMin","xMax","index_1","getAnimationFunction","effect","functionName","linear","currentTime","startValue","endValue","duration","markerAnimate","delay","isLabel","isAccumulation","accumulation","visibility","getAttribute","animate","progress","args","timeStamp","parentElement","stackLabels","dataLabelOpacity","opacity","marker","dataLabel","calculatedOpacity","shapeElement","end","annotations","trigger","isBlazor","animateRectElement","currentRect","previousRect","setStyle","pathAnimation","previousDirection","animateDuration","startDirections","splitDirections","endDirections","currentDireciton","startPath","endPath","c","directions","animateAddPoints","removeDirection","isSpline","currentDirection","startPathCommands","match","endPathCommands","maxLength","startPathCommand","endPathCommand","startCoords","trim","endCoords","interpolatedCoords","startCoord","parseFloat","endCoord","isNaN","interpolatedValue","join","appendClipElement","clipPath","clipElement","redrawElement","def","triggerLabelRender","tempInterval","argsData","cancel","isLineBreakLabels","text_1","enableTrim","lineBreakLabelTrim","maximumLabelWidth","textTrim","setRange","minimum","maximum","isZoomSet","zoomFactor","zoomPosition","getActualDesiredIntervalsCount","orientation","desiredIntervals","desiredIntervalsCount","maximumLabels","templateAnimate","isRemove","drawSymbol","location","shape","url","isChartControl","control","chartRenderer","shapeOption","calculateShapes","drawElement","renderOption","Int32Array","dir","isBulletChart","sizeBullet","targetWidth","lx","ly","eq","xVal","yVal","stroke","fill","cornerPoints","outerRadius","starPath","currentX","currentY","calculateLegendShapes","getRectLocation","startLocation","endLocation","outerRect","minMax","getTemplateFunction","template","templateFn","querySelectorAll","querySelector","e","accReactTemplate","childElement","isTemplate","datalabelGroup","clientRect","accumulationDataLabelModule","calculateLabelSize","chartReactTemplate","labelIndex","category","dataLabelCollections","dataLabelModule","calculateTemplateLabelSize","createTemplate","content","dataLabelId","templateElement","blazor","tempObject","window","templateId","elementData","slice","call","reactCallback","getModuleName","bind","isReact","renderReactTemplates","getFontStyle","measureElementRect","isReactCallback","findlElement","elements","length_1","getPoint","pow","xLength","yLength","locationX","locationY","appendElement","child","hasChildNodes","appendChildElement","isAnimate","start","forceAnimate","isRect","scatterElement","currentTransform","previousTranslate","existChild","tagName","previousTranform","animateRedrawElement","replaceChild","getDraggedRectLocation","x1","y1","x2","y2","checkBounds","getLabelText","labelFormat","format","customLabelFormat","seriesType","chartAreaType","stackedValues","endValues","yValue","high","low","open","close","median","upperQuartile","lowerQuartile","_a","outliers","liers","useGroupingSeparator","intl","getNumberFormat","useGrouping","stopTimer","timer","clearInterval","isCollide","collections","some","isOverlap","containsRect","calculateRect","textSize","convertToHexCode","componentToHex","g","hex","convertHexToColor","exec","ColorValue","colorNameToHex","getComputedStyle","isRGBValue","checkColorFormat","rgbaValues","substring","lastIndexOf","every","val","num","test","getSaturationColor","factor","rgb","colorCode","round","applyZLight","RGB","toUpperCase","getMedian","half","padding","space","maxWidth","textLength","labelCollection","breakLabels","i_1","stringToNumber","containerSize","setElementAttributes","childNodes","newTransform","previousTransform","pointAnimation","isDiv","rotateX","rotateY","animateTextElement","formatText_1","animation","currentValue","toFixed","textContent","option","isMinus","seriesClipRect","labelSize","isRotatedLabelIntersect","isDataLabelWrap","renderOptions","dx","labelRotation","baseLine","transX","transY","calculateSize","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","marginHeight","tooltipSpace","periodHeight","periodSelectorSettings","periods","labelPadding","isDevice","enableGrouping","disableRangeSelector","axisCollections","labelPosition","lineStyle","maxLabelSize","scaleX","scaleY","canvasRender","chartObject","selectorObject","createCanvas","ctx","getTitle","textOverflow","textWrap","titlePositionX","positionX","textAlignment","currentLabel","maximumWidth","wrapAnyWhere","clip","maximumLabelHeight","textWrapAnyWhere","lineHeight","startIndex","getUnicodeText","regexp","digit","digitSpecific","convertedText","k","unicodeSub","unicodeSup","blazorTemplatesReset","CustomizeOption","StackValues","startValues","RectOption","_super","ry","dashArray","_this","ImageOption","href","preserveAspectRatio","CircleOption","cx","cy","PolygonOption","LabelLocation","Thickness","PointData","lierIndex","AccPointData","Point3D","ControlPoints","controlPoint1","controlPoint2","getColorByValue","colorMap","rbgColorValue","colors","getGradientColor","previousOffset","nextOffset","percent","full","midColor","previousColor","nextColor","charAt","length_2","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","getTextAnchor","alignment"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/common/utils/helper.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Animation, compile as templateComplier, Browser } from '@syncfusion/ej2-base';\nimport { merge, extend, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { createElement, remove } from '@syncfusion/ej2-base';\nimport { Index } from '../../common/model/base';\nimport { VisibleLabels } from '../../chart/axis/axis';\nimport { axisLabelRender, regSub } from '../model/constants';\nimport { measureText, Rect, TextOption, Size, PathOption, SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to sort the dataSource, by default it sort the data in ascending order.\n *\n * @param  {Object} data chart data\n * @param  {string} fields date fields\n * @param  {boolean} isDescending boolean values of descending\n * @returns {Object[]} It returns chart data which be sorted.\n */\nexport function sort(data, fields, isDescending) {\n    var sortData = extend([], data, null);\n    for (var i = 0; i < sortData.length; i++) {\n        for (var j = 0; j < fields.length; j++) {\n            if (sortData[i][fields[j]] instanceof Date) {\n                sortData[i][fields[j]] = sortData[i][fields[j]].getTime();\n            }\n        }\n    }\n    sortData.sort(function (a, b) {\n        var first = 0;\n        var second = 0;\n        for (var i = 0; i < fields.length; i++) {\n            first += a[fields[i]];\n            second += b[fields[i]];\n        }\n        if ((!isDescending && first < second) || (isDescending && first > second)) {\n            return -1;\n        }\n        else if (first === second) {\n            return 0;\n        }\n        return 1;\n    });\n    return sortData;\n}\n/**\n * Checks if a label contains a line break.\n *\n * @param {string} label - The label to check.\n * @returns {boolean} - True if the label contains a line break, otherwise false.\n */\nexport function isBreakLabel(label) {\n    return label.indexOf('<br>') !== -1;\n}\n/**\n * Retrieves the visible data points from a series.\n *\n * @param {Series | Chart3DSeries} series - The series to retrieve the visible data points.\n * @returns {Points[]} - An array containing the visible data points.\n */\nexport function getVisiblePoints(series) {\n    var points = extend([], series.points, null, true);\n    var tempPoints = [];\n    var tempPoint;\n    var pointIndex = 0;\n    for (var i = 0; i < points.length; i++) {\n        tempPoint = points[i];\n        if (isNullOrUndefined(tempPoint.x)) {\n            continue;\n        }\n        else {\n            tempPoint.index = pointIndex++;\n            tempPoints.push(tempPoint);\n        }\n    }\n    return tempPoints;\n}\n/**\n * Calculates the offset for positioning a scrollbar on a chart axis.\n *\n * @param {ScrollBar} scrollbar - The scrollbar object to position.\n * @param {boolean} isHorizontalAxis - Indicates whether the axis is horizontal.\n * @returns {number} An object containing the calculated top and left offsets for the scrollbar.\n */\nexport function calculateScrollbarOffset(scrollbar, isHorizontalAxis) {\n    var scrollbarPadding = 5;\n    var chart = scrollbar.component;\n    var titleHeight = 0;\n    var subTitleHeight = 0;\n    var titlePadding = chart.titleStyle.position === 'Top' || (chart.titleStyle.position === 'Bottom' && !chart.legendSettings.visible) ? 15 : 5;\n    if (chart.title) {\n        titleHeight = (measureText(chart.title, chart.titleStyle, chart.themeStyle.chartTitleFont).height *\n            chart.titleCollection.length) + titlePadding;\n        if (chart.subTitle) {\n            subTitleHeight = (measureText(chart.subTitle, chart.subTitleStyle, chart.themeStyle.chartSubTitleFont).height *\n                chart.subTitleCollection.length);\n        }\n    }\n    var scrollbarOffsetValue;\n    if (isHorizontalAxis) {\n        if (scrollbar.axis.scrollbarSettings.position === 'Top') {\n            scrollbarOffsetValue = chart.margin.top + scrollbarPadding + ((scrollbar.height + scrollbarPadding) * chart.scrollBarModule.topScrollBarCount) + (chart.titleStyle.position === 'Top' ? titleHeight\n                + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Top' ? chart.subTitleStyle.border.width + subTitleHeight : 0);\n            chart.scrollBarModule.topScrollBarCount++;\n        }\n        else if (scrollbar.axis.scrollbarSettings.position === 'Bottom') {\n            scrollbarOffsetValue = chart.availableSize.height - (((scrollbar.height + scrollbarPadding) * chart.scrollBarModule.bottomScrollBarCount) + scrollbar.height + chart.margin.bottom + scrollbarPadding + (chart.titleStyle.position === 'Bottom' ? titleHeight\n                + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Bottom' ? chart.subTitleStyle.border.width + subTitleHeight : 0));\n            chart.scrollBarModule.bottomScrollBarCount++;\n        }\n    }\n    else {\n        if (scrollbar.axis.scrollbarSettings.position === 'Right') {\n            scrollbarOffsetValue = chart.availableSize.width - (((scrollbar.height + scrollbarPadding) * chart.scrollBarModule.rightScrollBarCount) + scrollbar.height + scrollbarPadding + chart.margin.right + (chart.titleStyle.position === 'Right' ? titleHeight\n                + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Right' ? chart.subTitleStyle.border.width + subTitleHeight : 0));\n            chart.scrollBarModule.rightScrollBarCount++;\n        }\n        else if (scrollbar.axis.scrollbarSettings.position === 'Left') {\n            scrollbarOffsetValue = chart.margin.left + scrollbarPadding + ((scrollbar.height + scrollbarPadding) * chart.scrollBarModule.leftScrollBarCount) + (chart.titleStyle.position === 'Left' ? titleHeight\n                + chart.titleStyle.border.width : 0) + (chart.subTitleStyle.position === 'Left' ? chart.subTitleStyle.border.width + subTitleHeight : 0);\n            chart.scrollBarModule.leftScrollBarCount++;\n        }\n    }\n    return scrollbarOffsetValue;\n}\n/**\n * Rotates the size of text based on the provided angle.\n *\n * @param {FontModel} font - The font style of the text.\n * @param {string} text - The text to be rotated.\n * @param {number} angle - The angle of rotation.\n * @param {Chart | Chart3D} chart - The chart instance.\n * @param {FontModel} themeFontStyle - The font style based on the theme.\n * @returns {Size} - The rotated size of the text.\n */\nexport function rotateTextSize(font, text, angle, chart, themeFontStyle) {\n    var transformValue = chart.element.style.transform;\n    if (transformValue) {\n        chart.element.style.transform = '';\n    }\n    var renderer = new SvgRenderer(chart.element.id);\n    var labelText;\n    var textCollection = [];\n    var height;\n    var dy;\n    var label;\n    var tspanElement;\n    var options = {\n        id: 'rotate_text',\n        x: chart.initialClipRect.x,\n        y: chart.initialClipRect.y,\n        'font-size': font.size || themeFontStyle.size,\n        'font-style': font.fontStyle || themeFontStyle.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight || themeFontStyle.fontWeight,\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    if (isBreakLabel(text)) {\n        textCollection = text.split('<br>');\n        labelText = textCollection[0];\n    }\n    else {\n        labelText = text;\n    }\n    var htmlObject = renderer.createText(options, labelText);\n    if (!chart.delayRedraw && !chart.redraw && !chart.stockChart) {\n        chart.element.appendChild(chart.svgObject);\n    }\n    // for line break label\n    if (typeof textCollection !== 'string' && textCollection.length > 1) {\n        for (var i = 1, len = textCollection.length; i < len; i++) {\n            height = (measureText(textCollection[i], font, chart.themeStyle.axisLabelFont).height);\n            dy = (options.y) + ((i * height));\n            label = textCollection[i];\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': dy\n            }, label);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    var axisSvgObject = chart.svgRenderer.createSvg({\n        id: 'AxisLabelMax_svg', width: chart.availableSize.width,\n        height: chart.availableSize.height\n    });\n    document.body.appendChild(axisSvgObject);\n    axisSvgObject.appendChild(htmlObject);\n    var box = htmlObject.getBoundingClientRect();\n    if (transformValue) {\n        chart.element.style.transform = transformValue;\n    }\n    remove(axisSvgObject);\n    if (!chart.delayRedraw && !chart.redraw && !chart.stockChart && !chart.pointsAdded) {\n        remove(chart.svgObject);\n    }\n    if (chart.enableCanvas) {\n        var textWidth = measureText(text, font, chart.themeStyle.axisLabelFont).width;\n        var textHeight = measureText(text, font, chart.themeStyle.axisLabelFont).height;\n        var angleInRadians = (angle * Math.PI) / 180; // Convert the rotation angle to radians\n        var rotatedTextWidth = Math.abs(Math.cos(angleInRadians) * textWidth) + Math.abs(Math.sin(angleInRadians) * textHeight);\n        var rotatedTextHeight = Math.abs(Math.sin(angleInRadians) * textWidth) + Math.abs(Math.cos(angleInRadians) * textHeight);\n        return new Size(rotatedTextWidth, rotatedTextHeight);\n    }\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Removes the specified element.\n *\n * @param {string | Element} id - The id or reference of the element to be removed.\n * @returns {void}\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Calculates the logarithm of a specified value with respect to a specified base.\n *\n * @param {number} value - The value for which to calculate the logarithm.\n * @param {number} base - The base of the logarithm.\n * @returns {number} - The logarithm of the value with respect to the specified base.\n */\nexport function logBase(value, base) {\n    return Math.log(value) / Math.log(base);\n}\n/**\n * Displays a tooltip at the specified coordinates with the given text.\n *\n * @param {string} text - The text content of the tooltip.\n * @param {number} x - The x-coordinate where the tooltip should be displayed.\n * @param {number} y - The y-coordinate where the tooltip should be displayed.\n * @param {number} areaWidth - The width of the area where the tooltip is displayed.\n * @param {string} id - The id of the tooltip element.\n * @param {Element} element - The element to which the tooltip is appended.\n * @param {boolean} isTouch - Indicates whether the tooltip is displayed on a touch device.\n * @param {boolean} isTitleOrLegendEnabled - Indicates whether the tooltip is enabled for title or legend.\n * @param {Rect} bound - The bounding rectangle in which the tooltip should be confined.\n * @returns {void}\n * @private\n */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, isTitleOrLegendEnabled, bound) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - (width + 15) : x;\n    if (bound && x < bound.x) {\n        x = bound.x;\n    }\n    y = isTitleOrLegendEnabled ? (y - size.height / 2) : y + 15;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id,\n            styles: 'top:' + (y).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n        var left = parseInt(tooltip.style.left.replace('px', ''), 10);\n        if (left < 0) {\n            tooltip.style.left = '0px';\n        }\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (isTouch) {\n        setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/**\n * Checks if a value is within the specified range.\n *\n * @param {number} value - The value to check.\n * @param {VisibleRangeModel} range - The range to check against.\n * @returns {boolean} - True if the value is inside the range, otherwise false.\n */\nexport function inside(value, range) {\n    return (value < range.max) && (value > range.min);\n}\n/**\n * Checks if a value is within the specified range.\n *\n * @param {number} value - The value to check.\n * @param {VisibleRangeModel} range - The range to check against.\n * @returns {boolean} - True if the value is inside the range, otherwise false.\n */\nexport function withIn(value, range) {\n    return (value <= range.max) && (value >= range.min);\n}\n/**\n * Adjusts the value based on the axis type.\n *\n * @param {number} value - The value to adjust.\n * @param {Axis} axis - The axis used for adjustment.\n * @returns {number} - The adjusted value.\n */\nexport function logWithIn(value, axis) {\n    return axis.valueType === 'Logarithmic' ? logBase(value, axis.logBase) : value;\n}\n/**\n * Checks if a point is within the range of the previous and next points in a series.\n *\n * @param {Points} previousPoint - The previous point in the series.\n * @param {Points} currentPoint - The current point to check.\n * @param {Points} nextPoint - The next point in the series.\n * @param {Series} series - The series to which the points belong.\n * @returns {boolean} - A boolean indicating if the point is within the range.\n * @private\n */\nexport function withInRange(previousPoint, currentPoint, nextPoint, series) {\n    if (series.chart.zoomModule && series.chart.zoomSettings.enableAnimation) {\n        return true;\n    }\n    var mX2 = logWithIn(currentPoint.xValue, series.xAxis);\n    var mX1 = previousPoint ? logWithIn(previousPoint.xValue, series.xAxis) : mX2;\n    var mX3 = nextPoint ? logWithIn(nextPoint.xValue, series.xAxis) : mX2;\n    var xStart = Math.floor(series.xAxis.visibleRange.min);\n    var xEnd = Math.ceil(series.xAxis.visibleRange.max);\n    return ((mX1 >= xStart && mX1 <= xEnd) || (mX2 >= xStart && mX2 <= xEnd) ||\n        (mX3 >= xStart && mX3 <= xEnd) || (xStart >= mX1 && xStart <= mX3));\n}\n/**\n * Calculates the sum of an array of numbers.\n *\n * @param {number[]} values - An array of numbers.\n * @returns {number} - The sum of the numbers in the array.\n */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/**\n * Calculates the sum of elements in a subarray.\n *\n * @param {Object[]} values - The array containing elements.\n * @param {number} first - The index of the first element in the subarray.\n * @param {number} last - The index of the last element in the subarray.\n * @param {number[]} index - The array of indices.\n * @param {Series} series - The series object.\n * @returns {number} - The sum of elements in the subarray.\n * @private\n */\nexport function subArraySum(values, first, last, index, series) {\n    var sum = 0;\n    var sumIndex = 0;\n    var isFirst = true;\n    if (index !== null) {\n        for (var i = (first + 1); i < last; i++) {\n            if (index.indexOf(i) === -1 && (i === series.intermediateSumIndexes[sumIndex] ||\n                series.intermediateSumIndexes[series.intermediateSumIndexes.length - 1] < i)) {\n                sum += values[i][series.yName];\n                if (i === series.intermediateSumIndexes[sumIndex]) {\n                    isFirst = false;\n                    sumIndex += 1;\n                }\n            }\n        }\n    }\n    else {\n        for (var i = (first + 1); i < last; i++) {\n            if (!isNullOrUndefined(values[i][series.yName]) && !isNullOrUndefined(series.sumIndexes) &&\n                series.sumIndexes.indexOf(i) === -1) {\n                sum += values[i][series.yName];\n            }\n        }\n    }\n    return sum;\n}\n/**\n * Subtracts thickness from the given rectangle.\n *\n * @param {Rect} rect - The rectangle from which to subtract thickness.\n * @param {Thickness} thickness - The thickness to subtract.\n * @returns {Rect} - The resulting rectangle after subtracting thickness.\n */\nexport function subtractThickness(rect, thickness) {\n    rect.x += thickness.left;\n    rect.y += thickness.top;\n    rect.width -= thickness.left + thickness.right;\n    rect.height -= thickness.top + thickness.bottom;\n    return rect;\n}\n/**\n * Subtracts a rectangle representing thickness from the given rectangle.\n *\n * @param {Rect} rect - The rectangle from which to subtract the thickness rectangle.\n * @param {Thickness} thickness - The rectangle representing the thickness to subtract.\n * @returns {Rect} - The resulting rectangle after subtracting the thickness rectangle.\n */\nexport function subtractRect(rect, thickness) {\n    rect.x += thickness.x;\n    rect.y += thickness.y;\n    rect.width -= thickness.x + thickness.width;\n    rect.height -= thickness.y + thickness.height;\n    return rect;\n}\n/**\n * Converts a degree value to a location on the chart based on the provided radius and center point.\n *\n * @param {number} degree - The degree value to convert.\n * @param {number} radius - The radius from the center point.\n * @param {ChartLocation} center - The center point of the chart.\n * @returns {ChartLocation} - The location on the chart corresponding to the degree value.\n */\nexport function degreeToLocation(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new ChartLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Converts a degree value to radians.\n *\n * @param {number} degree - The degree value to convert.\n * @returns {number} - The equivalent value in radians.\n */\nexport function degreeToRadian(degree) {\n    return degree * (Math.PI / 180);\n}\n/**\n * Get the coordinates of a rotated rectangle.\n *\n * @param {ChartLocation[]} actualPoints - The coordinates of the original rectangle.\n * @param {number} centerX - The x-coordinate of the center of rotation.\n * @param {number} centerY - The y-coordinate of the center of rotation.\n * @param {number} angle - The angle of rotation in degrees.\n * @returns {ChartLocation[]} - The coordinates of the rotated rectangle.\n */\nexport function getRotatedRectangleCoordinates(actualPoints, centerX, centerY, angle) {\n    var coordinatesAfterRotation = [];\n    for (var i = 0; i < 4; i++) {\n        var point = actualPoints[i];\n        // translate point to origin\n        var tempX = point.x - centerX;\n        var tempY = point.y - centerY;\n        // now apply rotation\n        var rotatedX = tempX * Math.cos(degreeToRadian(angle)) - tempY * Math.sin(degreeToRadian(angle));\n        var rotatedY = tempX * Math.sin(degreeToRadian(angle)) + tempY * Math.cos(degreeToRadian(angle));\n        // translate back\n        point.x = rotatedX + centerX;\n        point.y = rotatedY + centerY;\n        coordinatesAfterRotation.push(new ChartLocation(point.x, point.y));\n    }\n    return coordinatesAfterRotation;\n}\n/**\n * Helper function to determine whether there is an intersection between the two polygons described\n * by the lists of vertices. Uses the Separating Axis Theorem.\n *\n * @param {ChartLocation[]} a an array of connected points [{x:, y:}, {x:, y:},...] that form a closed polygon.\n * @param {ChartLocation[]} b an array of connected points [{x:, y:}, {x:, y:},...] that form a closed polygon.\n * @returns {boolean} if there is any intersection between the 2 polygons, false otherwise.\n */\nexport function isRotatedRectIntersect(a, b) {\n    var polygons = [a, b];\n    var minA;\n    var maxA;\n    var projected;\n    var i;\n    var i1;\n    var j;\n    var minB;\n    var maxB;\n    for (i = 0; i < polygons.length; i++) {\n        // for each polygon, look at each edge of the polygon, and determine if it separates\n        // the two shapes\n        var polygon = polygons[i];\n        for (i1 = 0; i1 < polygon.length; i1++) {\n            // grab 2 vertices to create an edge\n            var i2 = (i1 + 1) % polygon.length;\n            var p1 = polygon[i1];\n            var p2 = polygon[i2];\n            // find the line perpendicular to this edge\n            var normal = new ChartLocation(p2.y - p1.y, p1.x - p2.x);\n            minA = maxA = undefined;\n            // for each vertex in the first shape, project it onto the line perpendicular to the edge\n            // and keep track of the min and max of these values\n            for (j = 0; j < a.length; j++) {\n                projected = normal.x * a[j].x + normal.y * a[j].y;\n                if (isNullOrUndefined(minA) || projected < minA) {\n                    minA = projected;\n                }\n                if (isNullOrUndefined(maxA) || projected > maxA) {\n                    maxA = projected;\n                }\n            }\n            // for each vertex in the second shape, project it onto the line perpendicular to the edge\n            // and keep track of the min and max of these values\n            minB = maxB = undefined;\n            for (j = 0; j < b.length; j++) {\n                projected = normal.x * b[j].x + normal.y * b[j].y;\n                if (isNullOrUndefined(minB) || projected < minB) {\n                    minB = projected;\n                }\n                if (isNullOrUndefined(maxB) || projected > maxB) {\n                    maxB = projected;\n                }\n            }\n            // if there is no overlap between the projects, the edge we are looking at separates the two\n            // polygons, and we know there is no overlap\n            if (maxA < minB || maxB < minA) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Generates the legend for accumulation chart.\n *\n * @param {number} locX - The x-coordinate of the legend position.\n * @param {number} locY - The y-coordinate of the legend position.\n * @param {number} r - The radius of the chart.\n * @param {number} height - The height of the legend.\n * @param {number} width - The width of the legend.\n * @returns {string} - The generated legend.\n */\nfunction getAccumulationLegend(locX, locY, r, height, width) {\n    var cartesianlarge = degreeToLocation(270, r, new ChartLocation(locX, locY));\n    var cartesiansmall = degreeToLocation(270, r, new ChartLocation(locX + (width / 10), locY));\n    return 'M' + ' ' + locX + ' ' + locY + ' ' + 'L' + ' ' + (locX + r) + ' ' + (locY) + ' ' + 'A' + ' ' + (r) + ' ' + (r) +\n        ' ' + 0 + ' ' + 1 + ' ' + 1 + ' ' + cartesianlarge.x + ' ' + cartesianlarge.y + ' ' + 'Z' + ' ' + 'M' + ' ' + (locX +\n        (width / 10)) + ' ' + (locY - (height / 10)) + ' ' + 'L' + (locX + (r)) + ' ' + (locY - height / 10) + ' ' + 'A' + ' '\n        + (r) + ' ' + (r) + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + cartesiansmall.x + ' ' + cartesiansmall.y + ' ' + 'Z';\n}\n/**\n * Calculates the angle between two points.\n *\n * @param {ChartLocation} center - The center point.\n * @param {ChartLocation} point - The point to calculate the angle from the center.\n * @returns {number} - The angle in degrees.\n */\nexport function getAngle(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = angle < 0 ? (6.283 + angle) : angle;\n    return angle * (180 / Math.PI);\n}\n/**\n * Returns a sub-array of values starting from the specified index.\n *\n * @param {number[]} values - The array of numbers.\n * @param {number} index - The index from which the sub-array starts.\n * @returns {number[]} - The sub-array of values.\n */\nexport function subArray(values, index) {\n    var subArray = [];\n    for (var i = 0; i <= index - 1; i++) {\n        subArray.push(values[i]);\n    }\n    return subArray;\n}\n/**\n * Converts a value to its corresponding coefficient based on the axis range.\n *\n * @param {number} value - The value to be converted.\n * @param {Axis} axis - The axis object containing range information.\n * @returns {number} - The coefficient value corresponding to the input value.\n */\nexport function valueToCoefficient(value, axis) {\n    var range = axis.visibleRange;\n    var result = (value - range.min) / (range.delta);\n    var isInverse = axis.isChart ? axis.isAxisInverse : axis.isInversed;\n    return isInverse ? (1 - result) : result;\n}\n/**\n * Transforms a point to its visible position based on the axes range and inversion.\n *\n * @param {number} x - The x-coordinate of the point.\n * @param {number} y - The y-coordinate of the point.\n * @param {Axis} xAxis - The x-axis object containing range information.\n * @param {Axis} yAxis - The y-axis object containing range information.\n * @param {boolean} [isInverted=false] - Specifies if the chart is inverted.\n * @param {Series} [series] - The series object for additional information (optional).\n * @returns {ChartLocation} - The transformed visible position of the point.\n */\nexport function TransformToVisible(x, y, xAxis, yAxis, isInverted, series) {\n    x = (xAxis.valueType === 'Logarithmic' ? logBase(x > 1 ? x : 1, xAxis.logBase) : x);\n    y = (yAxis.valueType === 'Logarithmic' ?\n        logBase(y > 1 ? y : 1, yAxis.logBase) : y);\n    x += xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks' && series.type !== 'Radar' ? 0.5 : 0;\n    var radius = series.chart.radius * valueToCoefficient(y, yAxis);\n    var point = CoefficientToVector(valueToPolarCoefficient(x, xAxis), series.chart.primaryXAxis.startAngle);\n    return {\n        x: (series.clipRect.width / 2 + series.clipRect.x) + radius * point.x,\n        y: (series.clipRect.height / 2 + series.clipRect.y) + radius * point.y\n    };\n}\n/**\n * Finds the index from the given id.\n *\n * @param {string} id - The id to search for.\n * @param {boolean} [isPoint=false] - Specifies if the id represents a data point (optional).\n * @returns {Index} - The index found from the id.\n */\nexport function indexFinder(id, isPoint) {\n    if (isPoint === void 0) { isPoint = false; }\n    var ids = ['NaN', 'NaN'];\n    if (id.indexOf('_polygon') > -1) {\n        ids = ['NaN', 'NaN'];\n    }\n    else if (id.indexOf('_Point_') > -1) {\n        ids = id.split('_Series_')[1].split('_Point_');\n    }\n    else if (id.indexOf('_shape_') > -1 && (!isPoint || (isPoint && id.indexOf('_legend_') === -1))) {\n        ids = id.split('_shape_');\n        ids[0] = '0';\n    }\n    else if (id.indexOf('_text_') > -1 && (!isPoint || (isPoint && id.indexOf('_legend_') === -1))) {\n        ids = id.split('_text_');\n        ids[0] = '0';\n    }\n    else if (id.indexOf('_datalabel_') > -1) {\n        ids = id.split('_datalabel_')[1].split('_g_');\n        ids[0] = ids[0].replace('Series_', '');\n    }\n    else if (id.indexOf('TextGroup') > -1) {\n        ids = id.split('TextGroup');\n        ids[0] = ids[1];\n    }\n    else if (id.indexOf('ShapeGroup') > -1) {\n        ids = id.split('ShapeGroup');\n        ids[0] = ids[1];\n    }\n    return new Index(parseInt(ids[0], 10), parseInt(ids[1], 10));\n}\n/**\n * Converts a coefficient value to a vector representing a point on the circumference of a circle.\n *\n * @param {number} coefficient - The coefficient value to convert.\n * @param {number} startAngle - The starting angle of the circle.\n * @returns {ChartLocation} - The vector representing the point on the circle.\n */\nexport function CoefficientToVector(coefficient, startAngle) {\n    startAngle = startAngle < 0 ? startAngle + 360 : startAngle;\n    var angle = Math.PI * (1.5 - 2 * coefficient);\n    angle = angle + (startAngle * Math.PI) / 180;\n    return { x: Math.cos(angle), y: Math.sin(angle) };\n}\n/**\n * Converts a value to a polar coefficient value based on the axis.\n *\n * @param {number} value - The value to convert.\n * @param {Axis} axis - The axis object.\n * @returns {number} - The polar coefficient value.\n */\nexport function valueToPolarCoefficient(value, axis) {\n    var range = axis.visibleRange;\n    var delta;\n    var length;\n    if (axis.valueType !== 'Category') {\n        delta = (range.max - (axis.valueType === 'DateTime' ? axis.dateTimeInterval : range.interval)) - range.min;\n        length = axis.visibleLabels.length - 1;\n        delta = delta === 0 ? 1 : delta;\n    }\n    else {\n        // To split an interval equally based on visible labels count\n        delta = axis.visibleLabels.length === 1 ? 1 :\n            (axis.visibleLabels[axis.visibleLabels.length - 1].value - axis.visibleLabels[0].value);\n        length = axis.visibleLabels.length;\n    }\n    return axis.isAxisInverse ? ((value - range.min) / delta) * (1 - 1 / (length)) :\n        1 - ((value - range.min) / delta) * (1 - 1 / (length));\n}\n/** @private */\nvar Mean = /** @class */ (function () {\n    function Mean(verticalStandardMean, verticalSquareRoot, horizontalStandardMean, horizontalSquareRoot, verticalMean, horizontalMean) {\n        this.verticalStandardMean = verticalStandardMean;\n        this.horizontalStandardMean = horizontalStandardMean;\n        this.verticalSquareRoot = verticalSquareRoot;\n        this.horizontalSquareRoot = horizontalSquareRoot;\n        this.verticalMean = verticalMean;\n        this.horizontalMean = horizontalMean;\n    }\n    return Mean;\n}());\nexport { Mean };\n/** @private */\nvar PolarArc = /** @class */ (function () {\n    function PolarArc(startAngle, endAngle, innerRadius, radius, currentXPosition) {\n        this.startAngle = startAngle;\n        this.endAngle = endAngle;\n        this.innerRadius = innerRadius;\n        this.radius = radius;\n        this.currentXPosition = currentXPosition;\n    }\n    return PolarArc;\n}());\nexport { PolarArc };\n/**\n * Creates a tooltip element with the specified id, text, position, and font size.\n *\n * @param {string} id - The id of the tooltip element.\n * @param {string} text - The text content of the tooltip.\n * @param {number} top - The top position of the tooltip.\n * @param {number} left - The left position of the tooltip.\n * @param {string} fontSize - The font size of the tooltip text.\n * @returns {void}\n */\nexport function createTooltip(id, text, top, left, fontSize) {\n    var tooltip = getElement(id);\n    var style = 'top:' + top.toString() + 'px;' +\n        'left:' + left.toString() + 'px;' +\n        'color:black !important; ' +\n        'background:#FFFFFF !important; ' +\n        'position:absolute;border:1px solid #707070;font-size:' + fontSize + ';border-radius:2px; z-index:1';\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id, innerHTML: '&nbsp;' + text + '&nbsp;', styles: style\n        });\n        document.body.appendChild(tooltip);\n    }\n    else {\n        tooltip.setAttribute('innerHTML', '&nbsp;' + text + '&nbsp;');\n        tooltip.style.cssText = style;\n    }\n}\n/**\n * Creates zooming labels for the specified axis and adds them to the parent element.\n *\n * @param {Chart} chart - The chart instance.\n * @param {Axis} axis - The axis for which to create zooming labels.\n * @param {Element} parent - The parent element to which the labels will be appended.\n * @param {number} index - The index of the label.\n * @param {boolean} isVertical - Indicates whether the axis is vertical.\n * @param {Rect} rect - The bounding rectangle of the label.\n * @returns {Element} - The created zooming label element.\n */\nexport function createZoomingLabels(chart, axis, parent, index, isVertical, rect) {\n    var margin = 5;\n    var opposedPosition = axis.isAxisOpposedPosition;\n    var anchor = chart.enableRtl ? 'end' : isVertical ? 'start' : 'auto';\n    var size;\n    var chartRect = chart.availableSize.width;\n    var pathElement;\n    var x;\n    var y;\n    var rx = 3;\n    var arrowLocation;\n    var direction;\n    var scrollBarHeight = axis.scrollbarSettings.enable || (axis.zoomingScrollBar && axis.zoomingScrollBar.svgObject)\n        ? axis.scrollBarHeight : 0;\n    var isRtlEnabled = (chart.enableRtl && !isVertical && !axis.isInversed) ||\n        (axis.isInversed && !(chart.enableRtl && !isVertical));\n    for (var i = 0; i < 2; i++) {\n        size = measureText(i ? (isRtlEnabled ? axis.startLabel : axis.endLabel) : (isRtlEnabled ? axis.endLabel : axis.startLabel), axis.labelStyle, chart.themeStyle.axisLabelFont);\n        if (isVertical) {\n            arrowLocation = i ? new ChartLocation(rect.x - scrollBarHeight, rect.y + rx) :\n                new ChartLocation(axis.rect.x - scrollBarHeight, (rect.y + rect.height - rx));\n            x = (rect.x + (opposedPosition ? (rect.width + margin + scrollBarHeight) : -(size.width + margin + margin + scrollBarHeight)));\n            y = (rect.y + (i ? 0 : rect.height - size.height - margin));\n            x += (x < 0 || ((chartRect) < (x + size.width + margin))) ? (opposedPosition ? -(size.width / 2) : size.width / 2) : 0;\n            direction = findCrosshairDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, false, false, !opposedPosition, arrowLocation.x, arrowLocation.y + (i ? -rx : rx));\n        }\n        else {\n            arrowLocation = i ? new ChartLocation((rect.x + rect.width - rx), (rect.y + rect.height + scrollBarHeight)) :\n                new ChartLocation(rect.x + rx, (rect.y + rect.height + scrollBarHeight));\n            x = (rect.x + (i ? (rect.width - size.width - margin) : 0));\n            y = (opposedPosition ? (rect.y - size.height - 10 - scrollBarHeight) : (rect.y + rect.height + margin + scrollBarHeight));\n            direction = findCrosshairDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, opposedPosition, !opposedPosition, false, arrowLocation.x + (i ? rx : -rx), arrowLocation.y);\n        }\n        x = x + (margin / 2);\n        y = y + (3 * (size.height / 4)) + (margin / 2);\n        pathElement = chart.renderer.drawPath({\n            'id': chart.element.id + '_Zoom_' + index + '_AxisLabel_Shape_' + i,\n            'fill': chart.themeStyle.crosshairFill, 'width': 2, 'color': chart.themeStyle.crosshairFill,\n            'opacity': 1, 'stroke-dasharray': null, 'd': direction\n        }, null);\n        parent.appendChild(pathElement);\n        if (chart.theme === 'Fluent' || chart.theme === 'FluentDark') {\n            var shadowId = chart.element.id + '_shadow';\n            pathElement.setAttribute('filter', Browser.isIE ? '' : 'url(#' + shadowId + ')');\n            var shadow = '<filter id=\"' + shadowId + '\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/>';\n            shadow += '<feOffset dx=\"3\" dy=\"3\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.5\"/>';\n            shadow += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n            var defElement = chart.renderer.createDefs();\n            defElement.setAttribute('id', chart.element.id + 'SVG_tooltip_definition');\n            parent.appendChild(defElement);\n            defElement.innerHTML = shadow;\n            pathElement.setAttribute('stroke', '#cccccc');\n            pathElement.setAttribute('stroke-width', '0.5');\n        }\n        textElement(chart.renderer, new TextOption(chart.element.id + '_Zoom_' + index + '_AxisLabel_' + i, x, y, anchor, i ? (isRtlEnabled ? axis.startLabel : axis.endLabel) : (isRtlEnabled ? axis.endLabel : axis.startLabel)), { color: chart.themeStyle.crosshairLabelFont.color, fontFamily: 'Segoe UI', fontWeight: 'Regular', size: '11px' }, chart.themeStyle.crosshairLabelFont.color, parent, null, null, null, null, null, null, null, null, null, null, chart.themeStyle.crosshairLabelFont);\n    }\n    return parent;\n}\n/**\n * Finds the direction of the crosshair based on the provided parameters.\n *\n * @param {number} rX - The x-coordinate of the crosshair line.\n * @param {number} rY - The y-coordinate of the crosshair line.\n * @param {Rect} rect - The bounding rectangle of the crosshair.\n * @param {ChartLocation} arrowLocation - The location of the arrow in the crosshair.\n * @param {number} arrowPadding - The padding for the arrow.\n * @param {boolean} top - Indicates whether the crosshair is positioned at the top.\n * @param {boolean} bottom - Indicates whether the crosshair is positioned at the bottom.\n * @param {boolean} left - Indicates whether the crosshair is positioned at the left.\n * @param {number} tipX - The x-coordinate of the crosshair tip.\n * @param {number} tipY - The y-coordinate of the crosshair tip.\n * @returns {string} - The direction of the crosshair ('Top', 'Bottom', 'Left', 'Right', 'Center').\n */\nexport function findCrosshairDirection(rX, rY, rect, arrowLocation, arrowPadding, top, bottom, left, tipX, tipY) {\n    var direction = '';\n    var startX = rect.x;\n    var startY = rect.y;\n    var width = rect.x + rect.width;\n    var height = rect.y + rect.height;\n    if (top) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + startY + ' ' + (startX + rX) + ' ' + startY);\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + width + ' '\n            + startY + ' ' + (width) + ' ' + (startY + rY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' '\n            + (height) + ' ' + (width - rX) + ' ' + (height));\n        if (arrowPadding !== 0) {\n            direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (height));\n            direction = direction.concat(' L' + ' ' + (tipX) + ' ' + (height + arrowPadding)\n                + ' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + height);\n        }\n        if ((arrowLocation.x - arrowPadding / 2) > startX) {\n            direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '\n                + height + ' ' + (startX) + ' ' + (height - rY) + ' z');\n        }\n        else {\n            if (arrowPadding === 0) {\n                direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '\n                    + height + ' ' + (startX) + ' ' + (height - rY) + ' z');\n            }\n            else {\n                direction = direction.concat(' L' + ' ' + (startX) + ' ' + (height + rY) + ' z');\n            }\n        }\n    }\n    else if (bottom) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + (startY) + ' ' + (startX + rX) + ' ' + (startY) + ' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + (startY));\n        direction = direction.concat(' L' + ' ' + (tipX) + ' ' + (arrowLocation.y));\n        direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (startY));\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (startY)\n            + ' Q ' + (width) + ' ' + (startY) + ' ' + (width) + ' ' + (startY + rY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + (width) + ' '\n            + (height) + ' ' + (width - rX) + ' ' + (height));\n        direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + (startX) + ' '\n            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');\n    }\n    else if (left) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + (startY) + ' ' + (startX + rX) + ' ' + (startY));\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + (width) + ' '\n            + (startY) + ' ' + (width) + ' ' + (startY + rY) + ' L' + ' ' + (width) + ' ' + (arrowLocation.y - arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (width + arrowPadding) + ' ' + (tipY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (arrowLocation.y + arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' ' + (height) + ' ' + (width - rX) + ' ' + (height));\n        direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + startX + ' '\n            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');\n    }\n    else {\n        direction = direction.concat('M' + ' ' + (startX + rX) + ' ' + (startY) + ' Q ' + (startX) + ' '\n            + (startY) + ' ' + (startX) + ' ' + (startY + rY) + ' L' + ' ' + (startX) + ' ' + (arrowLocation.y - arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (startX - arrowPadding) + ' ' + (tipY));\n        direction = direction.concat(' L' + ' ' + (startX) + ' ' + (arrowLocation.y + arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (startX) + ' ' + (height - rY) + ' Q ' + startX + ' '\n            + (height) + ' ' + (startX + rX) + ' ' + (height));\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (height) + ' Q ' + width + ' '\n            + (height) + ' ' + (width) + ' ' + (height - rY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (startY + rY) + ' Q ' + width + ' '\n            + (startY) + ' ' + (width - rX) + ' ' + (startY) + ' z');\n    }\n    return direction;\n}\n//Within bounds\n/**\n * Checks if the provided coordinates are within the bounds of the rectangle.\n *\n * @param {number} x - The x-coordinate to check.\n * @param {number} y - The y-coordinate to check.\n * @param {Rect} bounds - The bounding rectangle.\n * @param {number} width - The width of the area to include in the bounds check.\n * @param {number} height - The height of the area to include in the bounds check.\n * @returns {boolean} - Returns true if the coordinates are within the bounds; otherwise, false.\n */\nexport function withInBounds(x, y, bounds, width, height) {\n    if (width === void 0) { width = 0; }\n    if (height === void 0) { height = 0; }\n    return (x >= bounds.x - width && x <= bounds.x + bounds.width + width && y >= bounds.y - height\n        && y <= bounds.y + bounds.height + height);\n}\n/**\n * Gets the x-coordinate value for a given point value on the axis.\n *\n * @param {number} value - The point value.\n * @param {number} size - The size of the axis.\n * @param {Axis} axis - The axis.\n * @returns {number} - Returns the x-coordinate value.\n */\nexport function getValueXByPoint(value, size, axis) {\n    var actualValue = !axis.isAxisInverse ? value / size : (1 - (value / size));\n    return actualValue * (axis.visibleRange.delta) + axis.visibleRange.min;\n}\n/**\n * Gets the y-coordinate value for a given point value on the axis.\n *\n * @param {number} value - The point value.\n * @param {number} size - The size of the axis.\n * @param {Axis} axis - The axis.\n * @returns {number} - Returns the y-coordinate value.\n */\nexport function getValueYByPoint(value, size, axis) {\n    var actualValue = axis.isAxisInverse ? value / size : (1 - (value / size));\n    return actualValue * (axis.visibleRange.delta) + axis.visibleRange.min;\n}\n/**\n * Finds the clip rectangle for a series.\n *\n * @param {Series} series - The series for which to find the clip rectangle.\n * @param {boolean} isCanvas - Indicates whether the rendering is on a canvas.\n * @returns {void}\n */\nexport function findClipRect(series, isCanvas) {\n    if (isCanvas === void 0) { isCanvas = false; }\n    var rect = series.clipRect;\n    if (isCanvas && (series.type === 'Polar' || series.type === 'Radar')) {\n        if (series.drawType === 'Scatter') {\n            rect.x = series.xAxis.rect.x;\n            rect.y = series.yAxis.rect.y;\n            rect.width = series.xAxis.rect.width;\n            rect.height = series.yAxis.rect.height;\n        }\n        else {\n            rect.x = series.xAxis.rect.x / 2;\n            rect.y = series.yAxis.rect.y / 2;\n            rect.width = series.xAxis.rect.width;\n            rect.height = series.yAxis.rect.height;\n        }\n    }\n    else {\n        if (series.chart.requireInvertedAxis) {\n            rect.x = series.yAxis.rect.x;\n            rect.y = series.xAxis.rect.y;\n            rect.width = series.yAxis.rect.width;\n            rect.height = series.xAxis.rect.height;\n        }\n        else {\n            rect.x = series.xAxis.rect.x;\n            rect.y = series.yAxis.rect.y;\n            rect.width = series.xAxis.rect.width;\n            rect.height = series.yAxis.rect.height;\n        }\n    }\n}\n/**\n * Converts the first character of a string to lowercase.\n *\n * @param {string} str - The string to convert.\n * @returns {string} The converted string.\n */\nexport function firstToLowerCase(str) {\n    return str.substr(0, 1).toLowerCase() + str.substr(1);\n}\n/**\n * Gets the transformation of the chart area based on the provided axes and inverted axis state.\n *\n * @param {Axis} xAxis - The X-axis of the chart.\n * @param {Axis} yAxis - The Y-axis of the chart.\n * @param {boolean} invertedAxis - Indicates whether the chart axis is inverted.\n * @returns {Rect} The transformed chart area.\n */\nexport function getTransform(xAxis, yAxis, invertedAxis) {\n    var x;\n    var y;\n    var width;\n    var height;\n    if (invertedAxis) {\n        x = yAxis.rect.x;\n        y = xAxis.rect.y;\n        width = yAxis.rect.width;\n        height = xAxis.rect.height;\n    }\n    else {\n        x = xAxis.rect.x;\n        y = yAxis.rect.y;\n        width = xAxis.rect.width;\n        height = yAxis.rect.height;\n    }\n    return new Rect(x, y, width, height);\n}\n/**\n * Calculates the minimum points delta between data points on the provided axis.\n *\n * @param {Axis | Chart3DAxis} axis - The axis for which to calculate the minimum points delta.\n * @param {Series[]} seriesCollection - The collection of series in the chart.\n * @returns {number} The minimum points delta.\n */\nexport function getMinPointsDelta(axis, seriesCollection) {\n    var minDelta = Number.MAX_VALUE;\n    var xValues;\n    var minVal;\n    var seriesMin;\n    var stackingGroups = [];\n    for (var index = 0; index < seriesCollection.length; index++) {\n        var series = seriesCollection[index];\n        xValues = [];\n        if (series.visible &&\n            (axis.name === series.xAxisName || (axis.name === 'primaryXAxis' && series.xAxisName === null)\n                || (axis.name === series.chart.primaryXAxis.name && !series.xAxisName))) {\n            if (series.type.indexOf('Stacking') > -1 && stackingGroups.indexOf(series.stackingGroup) === -1) {\n                stackingGroups.push(series.stackingGroup);\n            }\n            xValues = series.points.map(function (point) {\n                return point.xValue;\n            });\n            xValues.sort(function (first, second) { return first - second; });\n            if (xValues.length === 1) {\n                if (axis.valueType === 'Category') {\n                    var minValue = series.xAxis.visibleRange.min;\n                    var delta = xValues[0] - minValue;\n                    if (delta !== 0) {\n                        minDelta = Math.min(minDelta, delta);\n                    }\n                }\n                else if (axis.valueType.indexOf('DateTime') > -1) {\n                    var timeOffset = seriesCollection.length === 1 ? 25920000 : 2592000000;\n                    seriesMin = (series.xMin === series.xMax) ? (series.xMin - timeOffset) : series.xMin;\n                    minVal = xValues[0] - (!isNullOrUndefined(seriesMin) ? seriesMin : axis.visibleRange.min);\n                    if (minVal !== 0) {\n                        minDelta = Math.min(minDelta, minVal);\n                    }\n                }\n                else {\n                    seriesMin = series.xMin;\n                    minVal = xValues[0] - (!isNullOrUndefined(seriesMin) ?\n                        seriesMin : axis.visibleRange.min);\n                    if (minVal !== 0) {\n                        minDelta = Math.min(minDelta, minVal);\n                    }\n                }\n            }\n            else {\n                for (var index_1 = 0; index_1 < xValues.length; index_1++) {\n                    var value = xValues[index_1];\n                    if (index_1 > 0 && value) {\n                        minVal = series.type.indexOf('Stacking') > -1 && axis.valueType === 'Category' ? stackingGroups.length : value - xValues[index_1 - 1];\n                        if (minVal !== 0) {\n                            minDelta = Math.min(minDelta, minVal);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (minDelta === Number.MAX_VALUE) {\n        minDelta = 1;\n    }\n    return minDelta;\n}\n/**\n * Retrieves the animation function based on the specified effect.\n *\n * @param {string} effect - The name of the animation effect.\n * @returns {Function} The animation function corresponding to the effect.\n */\nexport function getAnimationFunction(effect) {\n    var functionName;\n    switch (effect) {\n        case 'Linear':\n            functionName = linear;\n            break;\n    }\n    return functionName;\n}\n/**\n * Linear animation function.\n *\n * @param {number} currentTime - The current time of the animation.\n * @param {number} startValue - The starting value of the animation.\n * @param {number} endValue - The ending value of the animation.\n * @param {number} duration - The duration of the animation.\n * @returns {number} The interpolated value at the current time.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Animates the marker element.\n *\n * @param {Element} element - The marker element to animate.\n * @param {number} delay - The delay before starting the animation.\n * @param {number} duration - The duration of the animation.\n * @param {Series | AccumulationSeries} series - The series associated with the marker.\n * @param {number} pointIndex - The index of the point in the series.\n * @param {ChartLocation} point - The location of the point.\n * @param {boolean} isLabel - Specifies whether the marker is a data label.\n * @returns {void}\n */\nexport function markerAnimate(element, delay, duration, series, pointIndex, point, isLabel) {\n    var isAccumulation = series.accumulation ? true : false;\n    element.style.visibility = 'hidden';\n    var transform = element.getAttribute('transform');\n    new Animation({}).animate(element, {\n        duration: duration,\n        delay: delay,\n        progress: function (args) {\n            if (args.timeStamp > args.delay) {\n                args.element.style.visibility = 'visible';\n            }\n            if (isAccumulation ? args.element.id.indexOf('_datalabel_Series_') > -1 : (args.element.parentElement.parentElement.id.indexOf('DataLabel') > -1\n                && !(series.chart.stackLabels.visible && element.getAttribute('data-collide')))) {\n                args.element.style.visibility = 'visible';\n                var dataLabelOpacity = isAccumulation ? series.opacity\n                    : series.marker.dataLabel.opacity;\n                var calculatedOpacity = (args.timeStamp / 500) * (dataLabelOpacity);\n                if (isAccumulation) {\n                    element.setAttribute('opacity', Math.min(calculatedOpacity, dataLabelOpacity).toString());\n                }\n                else {\n                    series.textElement.setAttribute('opacity', Math.min(calculatedOpacity, dataLabelOpacity).toString());\n                    series.shapeElement.setAttribute('opacity', Math.min(calculatedOpacity, dataLabelOpacity).toString());\n                }\n            }\n        },\n        end: function () {\n            var annotations = document.getElementById(series.chart.element.id + '_Annotation_Collections');\n            if (annotations && series.type !== 'Line') {\n                annotations.style.visibility = 'visible';\n            }\n            if (element.parentElement.parentElement.id.indexOf('DataLabel') > -1 || element.id.indexOf('_datalabel_Series_') > -1) {\n                if (isAccumulation) {\n                    element.setAttribute('opacity', (series.opacity).toString());\n                }\n                else {\n                    series.textElement.setAttribute('opacity', (series.marker.dataLabel.opacity).toString());\n                    series.shapeElement.setAttribute('opacity', (series.marker.dataLabel.opacity).toString());\n                }\n            }\n            if (!(series.chart.stackLabels.visible && element.getAttribute('data-collide'))) {\n                element.style.visibility = '';\n            }\n            element.setAttribute('transform', transform ? transform : '');\n            if ((series.type === 'Scatter' || series.type === 'Bubble') && !isLabel && (pointIndex === series.points.length - 1)) {\n                series.chart.trigger('animationComplete', { series: series.chart.isBlazor ? {} : series });\n            }\n        }\n    });\n}\n/**\n * Animates the rectangle element.\n *\n * @param {Element} element - The rectangle element to animate.\n * @param {number} delay - The delay before starting the animation.\n * @param {number} duration - The duration of the animation.\n * @param {Rect} currentRect - The current rectangle dimensions.\n * @param {Rect} previousRect - The previous rectangle dimensions.\n * @returns {void}\n */\nexport function animateRectElement(element, delay, duration, currentRect, previousRect) {\n    var setStyle = function (rect) {\n        element.setAttribute('x', rect.x + '');\n        element.setAttribute('y', rect.y + '');\n        element.setAttribute('width', rect.width + '');\n        element.setAttribute('height', rect.height + '');\n    };\n    new Animation({}).animate(createElement('div'), {\n        duration: duration,\n        delay: delay,\n        //name: name,\n        progress: function (args) {\n            setStyle(new Rect(linear(args.timeStamp, previousRect.x, currentRect.x - previousRect.x, args.duration), linear(args.timeStamp, previousRect.y, currentRect.y - previousRect.y, args.duration), linear(args.timeStamp, previousRect.width, currentRect.width - previousRect.width, args.duration), linear(args.timeStamp, previousRect.height, currentRect.height - previousRect.height, args.duration)));\n        },\n        end: function () {\n            setStyle(currentRect);\n        }\n    });\n}\n/**\n * Animation after legend click a path.\n *\n * @param {Element} element - element to be animated\n * @param {string} direction - current direction of the path\n * @param {boolean} redraw - chart redraw\n * @param {string} previousDirection - previous direction of the path\n * @param {number} animateDuration - animateDuration of the path\n * @returns {void}\n */\nexport function pathAnimation(element, direction, redraw, previousDirection, animateDuration) {\n    if (!redraw || (!previousDirection && !element)) {\n        return null;\n    }\n    var duration = 300;\n    if (!isNullOrUndefined(animateDuration)) {\n        duration = animateDuration;\n    }\n    var startDirections = previousDirection || element.getAttribute('d');\n    var splitDirections = startDirections.split(/(?=[LMCZAQ])/);\n    var endDirections = direction.split(/(?=[LMCZAQ])/);\n    var currentDireciton;\n    var startPath = [];\n    var endPath = [];\n    var c;\n    var end;\n    element.setAttribute('d', startDirections);\n    new Animation({}).animate(createElement('div'), {\n        duration: duration,\n        progress: function (args) {\n            currentDireciton = '';\n            splitDirections.map(function (directions, index) {\n                startPath = directions.split(' ');\n                endPath = endDirections[index] ? endDirections[index].split(' ') : startPath;\n                if (startPath[0] === 'Z') {\n                    currentDireciton += 'Z' + ' ';\n                }\n                else if (startPath[0] === '') {\n                    currentDireciton = '';\n                }\n                else {\n                    currentDireciton += startPath[0] + ' ' +\n                        linear(args.timeStamp, +startPath[1], (+endPath[1] - +startPath[1]), args.duration) + ' ' +\n                        linear(args.timeStamp, +startPath[2], (+endPath[2] - +startPath[2]), args.duration) + ' ';\n                }\n                if (startPath[0] === 'C' || startPath[0] === 'Q') {\n                    c = 3;\n                    end = startPath[0] === 'Q' ? 4 : 6;\n                    while (c < end) {\n                        currentDireciton += linear(args.timeStamp, +startPath[c], (+endPath[c] - +startPath[c]), args.duration) + ' ' +\n                            linear(args.timeStamp, +startPath[++c], (+endPath[c] - +startPath[c]), args.duration) + ' ';\n                        ++c;\n                    }\n                }\n                if (startPath[0] === 'A') {\n                    currentDireciton += 0 + ' ' + 0 + ' ' + 1 + ' ' +\n                        linear(args.timeStamp, +startPath[6], (+endPath[6] - +startPath[6]), args.duration) + ' ' +\n                        linear(args.timeStamp, +startPath[7], (+endPath[7] - +startPath[7]), args.duration) + ' ';\n                }\n            });\n            element.setAttribute('d', currentDireciton);\n        },\n        end: function () {\n            element.setAttribute('d', direction);\n        }\n    });\n}\n/**\n * Point based animation in chart series.\n *\n * @param {Element} element element to be animated.\n * @param {string} direction current direction of the path.\n * @param {boolean} redraw chart redraw.\n * @param {string} previousDirection previous direction of the path.\n * @param {number} animateDuration animateDuration of the path.\n * @param {string} removeDirection removeDirection of the path.\n * @param {boolean} isSpline gets true for splline series.\n * @returns {void}\n */\nexport function animateAddPoints(element, direction, redraw, previousDirection, animateDuration, removeDirection, isSpline) {\n    if (!redraw || (!previousDirection && !element)) {\n        return null;\n    }\n    var duration = 300;\n    if (!isNullOrUndefined(animateDuration)) {\n        duration = animateDuration;\n    }\n    var startDirections = previousDirection || element.getAttribute('d');\n    var endDirections = direction;\n    var currentDirection = '';\n    element.setAttribute('d', startDirections);\n    new Animation({}).animate(createElement('div'), {\n        duration: duration,\n        progress: function (args) {\n            currentDirection = '';\n            var startPathCommands = startDirections.match(/[MLHVCSQTAZ][^MLHVCSQTAZ]*/g);\n            var endPathCommands = endDirections.match(/[MLHVCSQTAZ][^MLHVCSQTAZ]*/g);\n            var maxLength = Math.max(startPathCommands.length, endPathCommands.length);\n            for (var i = 0; i < maxLength; i++) {\n                var startPathCommand = startPathCommands[i] || '';\n                var endPathCommand = endPathCommands[i] || '';\n                var startCoords = startPathCommand.trim().split(/\\s+/);\n                var endCoords = endPathCommand.trim().split(/\\s+/);\n                var interpolatedCoords = [];\n                for (var j = 1; j < startCoords.length; j++) {\n                    var startCoord = parseFloat(startCoords[j]);\n                    var endCoord = parseFloat(endCoords[j]);\n                    if (!isNaN(startCoord) && !isNaN(endCoord) && (startCoords.length === endCoords.length || isSpline)) {\n                        var interpolatedValue = linear(args.timeStamp, startCoord, (endCoord - startCoord), duration);\n                        if (i === maxLength - 1) {\n                            interpolatedCoords.push(interpolatedValue);\n                        }\n                        else {\n                            interpolatedCoords.push(interpolatedValue);\n                        }\n                    }\n                }\n                if (startCoords.length !== endCoords.length) {\n                    currentDirection += 'L';\n                }\n                else {\n                    currentDirection += startCoords[0];\n                }\n                currentDirection += ' ' + interpolatedCoords.join(' ');\n                currentDirection += ' ';\n            }\n            element.setAttribute('d', currentDirection);\n        },\n        end: function () {\n            element.setAttribute('d', removeDirection || direction);\n        }\n    });\n}\n/**\n * To append the clip rect element.\n *\n * @param {boolean} redraw - chart redraw value.\n * @param {BaseAttibutes} options - element options.\n * @param {SvgRenderer} renderer - svg renderer values.\n * @param {string} clipPath - clipPath of the element.\n * @returns {Element} - Returns clip rect element.\n */\nexport function appendClipElement(redraw, options, renderer, clipPath) {\n    if (clipPath === void 0) { clipPath = 'drawClipPath'; }\n    var clipElement = redrawElement(redraw, options.id, options, renderer);\n    if (clipElement) {\n        var def = renderer.createDefs();\n        def.appendChild(clipElement);\n        return def;\n    }\n    else {\n        return renderer[clipPath](options);\n    }\n}\n/**\n * Triggers the label render event.\n *\n * @param {Chart | RangeNavigator | Chart3D} chart - The chart or range navigator instance.\n * @param {number} tempInterval - The temporary interval value.\n * @param {string} text - The label text.\n * @param {FontModel} labelStyle - The style of the label.\n * @param {Axis | Chart3DAxis} axis - The axis associated with the label.\n * @returns {void}\n */\nexport function triggerLabelRender(chart, tempInterval, text, labelStyle, axis) {\n    var argsData = {\n        cancel: false, name: axisLabelRender, axis: axis,\n        text: text, value: tempInterval, labelStyle: labelStyle\n    };\n    chart.trigger(axisLabelRender, argsData);\n    if (!argsData.cancel) {\n        var isLineBreakLabels = argsData.text.indexOf('<br>') !== -1;\n        var text_1 = (axis.enableTrim) ? (isLineBreakLabels ?\n            lineBreakLabelTrim(axis.maximumLabelWidth, argsData.text, axis.labelStyle, chart.themeStyle.axisLabelFont) :\n            textTrim(axis.maximumLabelWidth, argsData.text, axis.labelStyle, chart.enableRtl, chart.themeStyle.axisLabelFont))\n            : argsData.text;\n        axis.visibleLabels.push(new VisibleLabels(text_1, argsData.value, argsData.labelStyle, argsData.text));\n    }\n}\n/**\n * The function used to find whether the range is set.\n *\n * @param {Axis | Chart3DAxis} axis - The axis to check.\n * @returns {boolean} - It returns true if the axis range is set otherwise false.\n * @private\n */\nexport function setRange(axis) {\n    return (axis.minimum != null && axis.maximum != null);\n}\n/**\n * Checks if zooming is enabled for the axis.\n *\n * @param {Axis} axis - The axis to check for zooming.\n * @returns {boolean} - Returns true if zooming is enabled for the axis, otherwise false.\n */\nexport function isZoomSet(axis) {\n    return (axis.zoomFactor < 1 && axis.zoomPosition >= 0);\n}\n/**\n * Calculates the actual desired intervals count based on the available size and axis.\n *\n * @param {Size} availableSize - The available size for rendering.\n * @param {Axis | Chart3DAxis} axis - The axis for which to calculate the intervals count.\n * @returns {number} - The actual desired intervals count.\n */\nexport function getActualDesiredIntervalsCount(availableSize, axis) {\n    var size = axis.orientation === 'Horizontal' ? availableSize.width : availableSize.height;\n    if (isNullOrUndefined(axis.desiredIntervals)) {\n        var desiredIntervalsCount = (axis.orientation === 'Horizontal' ? 0.533 : 1) * axis.maximumLabels;\n        desiredIntervalsCount = Math.max((size * (desiredIntervalsCount / 100)), 1);\n        return desiredIntervalsCount;\n    }\n    else {\n        return axis.desiredIntervals;\n    }\n}\n/**\n * Animates the template element.\n *\n * @param {Element} element - The element to animate.\n * @param {number} delay - The delay before starting the animation.\n * @param {number} duration - The duration of the animation.\n * @param {Effect} name - The name of the animation effect.\n * @param {boolean} [isRemove] - Indicates whether to remove the element after animation completion.\n * @returns {void}\n */\nexport function templateAnimate(element, delay, duration, name, isRemove) {\n    new Animation({}).animate(element, {\n        duration: duration,\n        delay: delay,\n        name: name,\n        progress: function (args) {\n            args.element.style.visibility = 'visible';\n        },\n        end: function (args) {\n            if (isRemove) {\n                remove(args.element);\n            }\n            else {\n                args.element.style.visibility = 'visible';\n            }\n        }\n    });\n}\n/**\n * Draws a symbol at the specified location.\n *\n * @param {ChartLocation} location - The location to draw the symbol.\n * @param {string} shape - The shape of the symbol.\n * @param {Size} size - The size of the symbol.\n * @param {string} url - The URL of the image symbol.\n * @param {PathOption} options - The options for drawing the symbol.\n * @param {string} label - The label for the symbol.\n * @param {SvgRenderer | CanvasRenderer} [renderer] - The renderer for drawing the symbol.\n * @param {Rect} [clipRect] - The clipping rectangle.\n * @param {boolean} [isChartControl] - Indicates whether it is a chart control.\n * @param {BulletChart} [control] - The bullet chart control.\n * @returns {Element} - The element representing the drawn symbol.\n */\nexport function drawSymbol(location, shape, size, url, options, label, renderer, clipRect, isChartControl, control) {\n    var chartRenderer = renderer ? renderer : new SvgRenderer('');\n    var shapeOption = calculateShapes(location, size, shape, options, url, isChartControl, control);\n    var drawElement = chartRenderer['draw' + shapeOption.functionName](shapeOption.renderOption, clipRect ? new Int32Array([clipRect.x, clipRect.y]) : null);\n    //drawElement.setAttribute('aria-label', label);\n    return drawElement;\n}\n/**\n * Calculates the shapes based on the specified parameters.\n *\n * @param {ChartLocation} location - The location for the shapes.\n * @param {Size} size - The size of the shapes.\n * @param {string} shape - The shape of the symbols.\n * @param {PathOption} options - The options for drawing the shapes.\n * @param {string} url - The URL of the image symbols.\n * @param {boolean} [isChart] - Indicates whether it is a chart.\n * @param {BulletChart} [control] - The bullet chart control.\n * @returns {IShapes} - The calculated shapes.\n */\nexport function calculateShapes(location, size, shape, options, url, isChart, control) {\n    var dir;\n    var functionName = 'Path';\n    var isBulletChart = isChart;\n    var width = (isBulletChart && shape === 'Circle') ? (size.width - 2) : size.width;\n    var height = (isBulletChart && shape === 'Circle') ? (size.height - 2) : size.height;\n    var sizeBullet = (isBulletChart) ? control.targetWidth : 0;\n    var lx = location.x;\n    var ly = location.y;\n    var y = location.y + (-height / 2);\n    var x = location.x + (-width / 2);\n    var eq = 72;\n    var xVal;\n    var yVal;\n    switch (shape) {\n        case 'Bubble':\n        case 'Circle':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': lx, 'cy': ly });\n            break;\n        case 'Plus':\n            dir = 'M' + ' ' + x + ' ' + ly + ' ' + 'L' + ' ' + (lx + (width / 2)) + ' ' + ly + ' ' +\n                'M' + ' ' + lx + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' + lx + ' ' +\n                (ly + (-height / 2));\n            merge(options, { 'd': dir });\n            break;\n        case 'Cross':\n            dir = 'M' + ' ' + x + ' ' + (ly + (-height / 2)) + ' ' + 'L' + ' ' + (lx + (width / 2)) + ' ' + (ly + (height / 2)) + ' ' +\n                'M' + ' ' + x + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' + (lx + (width / 2)) + ' ' + (ly + (-height / 2));\n            merge(options, { 'd': dir });\n            break;\n        case 'Multiply':\n            dir = 'M ' + (lx - sizeBullet) + ' ' + (ly - sizeBullet) + ' L ' +\n                (lx + sizeBullet) + ' ' + (ly + sizeBullet) + ' M ' +\n                (lx - sizeBullet) + ' ' + (ly + sizeBullet) + ' L ' + (lx + sizeBullet) + ' ' + (ly - sizeBullet);\n            merge(options, { 'd': dir, stroke: options.fill });\n            break;\n        case 'HorizontalLine':\n            dir = 'M' + ' ' + x + ' ' + ly + ' ' + 'L' + ' ' + (lx + (width / 2)) + ' ' + ly;\n            merge(options, { 'd': dir });\n            break;\n        case 'VerticalLine':\n            dir = 'M' + ' ' + lx + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' + lx + ' ' + (ly + (-height / 2));\n            merge(options, { 'd': dir });\n            break;\n        case 'Diamond':\n            dir = 'M' + ' ' + x + ' ' + ly + ' ' +\n                'L' + ' ' + lx + ' ' + (ly + (-height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + ly + ' ' +\n                'L' + ' ' + lx + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + ly + ' z';\n            merge(options, { 'd': dir });\n            break;\n        case 'ActualRect':\n            dir = 'M' + ' ' + x + ' ' + (ly + (-height / 8)) + ' ' +\n                'L' + ' ' + (lx + (sizeBullet)) + ' ' + (ly + (-height / 8)) + ' ' +\n                'L' + ' ' + (lx + (sizeBullet)) + ' ' + (ly + (height / 8)) + ' ' +\n                'L' + ' ' + x + ' ' + (ly + (height / 8)) + ' ' +\n                'L' + ' ' + x + ' ' + (ly + (-height / 8)) + ' z';\n            merge(options, { 'd': dir });\n            break;\n        case 'TargetRect':\n            dir = 'M' + ' ' + (x + (sizeBullet)) + ' ' + (ly + (-height / 2)) + ' ' +\n                'L' + ' ' + (lx + (sizeBullet / 2)) + ' ' + (ly + (-height / 2)) + ' ' +\n                'L' + ' ' + (lx + (sizeBullet / 2)) + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + (x + (sizeBullet)) + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + (x + (sizeBullet)) + ' ' + (ly + (-height / 2)) + ' z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Rectangle':\n        case 'Hilo':\n        case 'HiloOpenClose':\n        case 'Candle':\n        case 'Waterfall':\n        case 'BoxAndWhisker':\n        case 'StepArea':\n        case 'RangeStepArea':\n        case 'StackingStepArea':\n        case 'Square':\n        case 'Flag':\n            dir = 'M' + ' ' + x + ' ' + (ly + (-height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + (ly + (-height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (ly + (-height / 2)) + ' z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Pyramid':\n        case 'Triangle':\n            dir = 'M' + ' ' + x + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + lx + ' ' + (ly + (-height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (ly + (height / 2)) + ' z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Funnel':\n        case 'InvertedTriangle':\n            dir = 'M' + ' ' + (lx + (width / 2)) + ' ' + (ly - (height / 2)) + ' ' +\n                'L' + ' ' + lx + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + (lx - (width / 2)) + ' ' + (ly - (height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + (ly - (height / 2)) + ' z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Pentagon':\n            for (var i = 0; i <= 5; i++) {\n                xVal = (width / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yVal = (height / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    dir = 'M' + ' ' + (lx + xVal) + ' ' + (ly + yVal) + ' ';\n                }\n                else {\n                    dir = dir.concat('L' + ' ' + (lx + xVal) + ' ' + (ly + yVal) + ' ');\n                }\n            }\n            dir = dir.concat('Z');\n            merge(options, { 'd': dir });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'Star': {\n            var cornerPoints = 5;\n            var outerRadius = Math.min(width, height) / 2;\n            var innerRadius = outerRadius / 2;\n            var angle = Math.PI / cornerPoints;\n            var starPath = '';\n            for (var i = 0; i < 2 * cornerPoints; i++) {\n                var radius = (i % 2 === 0) ? outerRadius : innerRadius;\n                var currentX = lx + radius * Math.cos(i * angle - Math.PI / 2);\n                var currentY = ly + radius * Math.sin(i * angle - Math.PI / 2);\n                starPath += (i === 0 ? 'M' : 'L') + currentX + ',' + currentY;\n            }\n            starPath += 'Z';\n            merge(options, { 'd': starPath });\n            break;\n        }\n    }\n    options = calculateLegendShapes(location, new Size(width, height), shape, options).renderOption;\n    return { renderOption: options, functionName: functionName };\n}\n/**\n * Gets the location of the rectangle based on the specified start and end locations and the outer rectangle.\n *\n * @param {ChartLocation} startLocation - The start location.\n * @param {ChartLocation} endLocation - The end location.\n * @param {Rect} outerRect - The outer rectangle.\n * @returns {Rect} - The location of the rectangle.\n */\nexport function getRectLocation(startLocation, endLocation, outerRect) {\n    var x = (endLocation.x < outerRect.x) ? outerRect.x :\n        (endLocation.x > (outerRect.x + outerRect.width)) ? outerRect.x + outerRect.width : endLocation.x;\n    var y = (endLocation.y < outerRect.y) ? outerRect.y :\n        (endLocation.y > (outerRect.y + outerRect.height)) ? outerRect.y + outerRect.height : endLocation.y;\n    return new Rect((x > startLocation.x ? startLocation.x : x), (y > startLocation.y ? startLocation.y : y), Math.abs(x - startLocation.x), Math.abs(y - startLocation.y));\n}\n/**\n * Returns the value constrained within the specified minimum and maximum limits.\n *\n * @param {number} value - The input value.\n * @param {number} min - The minimum limit.\n * @param {number} max - The maximum limit.\n * @returns {number} - The constrained value.\n */\nexport function minMax(value, min, max) {\n    return value > max ? max : (value < min ? min : value);\n}\n/**\n * Retrieves the DOM element with the specified ID.\n *\n * @param {string} id - The ID of the element to retrieve.\n * @returns {Element} - The DOM element.\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Gets the template function from the provided template string or function.\n *\n * @param {string | Function} template - The template string or function.\n * @returns {Function} - The template function.\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n        else {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Renders the accumulation chart data labels using template.\n *\n * @param {HTMLElement} childElement - The child element.\n * @param {AccumulationChart} chart - The accumulation chart instance.\n * @param {boolean} isTemplate - Defines whether the template is applied or not.\n * @param {AccPoints[]} points - The accumulation chart points.\n * @param {IAccTextRenderEventArgs} argsData - The accumulation chart text render event arguments.\n * @param {AccPoints} [point] - The accumulation chart point.\n * @param {Element} [datalabelGroup] - The data label group element.\n * @param {string} [id] - The id of the element.\n * @param {AccumulationDataLabelSettingsModel} [dataLabel] - The accumulation chart data label settings.\n * @param {boolean} [redraw] - Defines whether to redraw the chart or not.\n * @returns {void}\n */\nexport function accReactTemplate(childElement, chart, isTemplate, points, argsData, point, datalabelGroup, id, dataLabel, redraw) {\n    var clientRect = childElement.getBoundingClientRect();\n    chart.accumulationDataLabelModule.calculateLabelSize(isTemplate, childElement, point, points, argsData, datalabelGroup, id, dataLabel, redraw, clientRect, true);\n}\n/**\n * Renders the chart data labels using template.\n *\n * @param {HTMLElement} childElement - The child element.\n * @param {Chart} chart - The chart instance.\n * @param {Points} point - The chart point.\n * @param {Series} series - The chart series.\n * @param {number} labelIndex - The index of the label.\n * @param {boolean} [redraw] - Defines whether to redraw the chart or not.\n * @returns {void}\n */\nexport function chartReactTemplate(childElement, chart, point, series, labelIndex, redraw) {\n    var parentElement = document.getElementById(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections');\n    if (parentElement) {\n        if (point.index === 0) {\n            chart.dataLabelCollections = []; // clear old datalabel bounds for react callback\n        }\n        chart.dataLabelModule.calculateTemplateLabelSize(parentElement, childElement, point, series, series.marker.dataLabel, labelIndex, series.clipRect, redraw, true);\n    }\n}\n/**\n * Creates a template.\n *\n * @param {HTMLElement} childElement - The child element of the template.\n * @param {number} pointIndex - The index of the point.\n * @param {string | Function} content - The content of the template.\n * @param {Chart | AccumulationChart | RangeNavigator} chart - The chart instance.\n * @param {Points | AccPoints} point - The chart or accumulation point.\n * @param {Series | AccumulationSeries} series - The chart or accumulation series.\n * @param {string} dataLabelId - The id of the data label.\n * @param {number} labelIndex - The index of the label.\n * @param {IAccTextRenderEventArgs} argsData - The event arguments for text rendering.\n * @param {boolean} isTemplate - Indicates whether it is a template.\n * @param {AccPoints[]} points - The accumulation points.\n * @param {Element} datalabelGroup - The group element of the data label.\n * @param {string} id - The id of the element.\n * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n * @param {boolean} redraw - Indicates whether to redraw.\n * @returns {HTMLElement} - The created template element.\n * @private\n */\nexport function createTemplate(childElement, pointIndex, content, chart, point, series, dataLabelId, labelIndex, argsData, isTemplate, points, datalabelGroup, id, dataLabel, redraw) {\n    var templateFn = getTemplateFunction(content);\n    var templateElement;\n    try {\n        var blazor = 'Blazor';\n        var tempObject = window[blazor] ? (dataLabelId ? point : { point: point }) :\n            { chart: chart, series: series, point: point };\n        var templateId = dataLabelId ? dataLabelId + '_template' : 'template';\n        var elementData = templateFn ? templateFn(tempObject, chart, templateId, dataLabelId ||\n            childElement.id.replace(/[^a-zA-Z0-9]/g, '')) : [];\n        if (elementData.length) {\n            templateElement = Array.prototype.slice.call(elementData);\n            var len = templateElement.length;\n            for (var i = 0; i < len; i++) {\n                childElement.appendChild(templateElement[i]);\n            }\n        }\n        var reactCallback = void 0;\n        if (chart.getModuleName() === 'accumulationchart') {\n            reactCallback = (points.length && points[pointIndex]) ? accReactTemplate.bind(this, childElement, chart, isTemplate, points, argsData, points[pointIndex], datalabelGroup, id, dataLabel, redraw) : reactCallback;\n            if (chart.isReact) {\n                chart.renderReactTemplates(reactCallback);\n            }\n        }\n        else if (chart.getModuleName() === 'chart') {\n            reactCallback = (point && series) ? chartReactTemplate.bind(this, childElement, chart, point, series, labelIndex, redraw) : reactCallback;\n            if (chart.isReact) {\n                chart.renderReactTemplates(reactCallback);\n            }\n        }\n    }\n    catch (e) {\n        return childElement;\n    }\n    return childElement;\n}\n/**\n * Gets the font style.\n *\n * @param {FontModel} font - The font settings.\n * @param {FontModel} themeFontStyle - The theme font settings.\n * @returns {string} - The font style.\n * @private\n */\nexport function getFontStyle(font, themeFontStyle) {\n    var style = '';\n    style = 'font-size:' + (font.size || themeFontStyle.size) +\n        '; font-style:' + (font.fontStyle || themeFontStyle.fontStyle) + '; font-weight:' + (font.fontWeight || themeFontStyle.fontWeight) +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Measures the bounding rectangle of an HTML element.\n *\n * @param {HTMLElement} element - The HTML element to measure.\n * @param {boolean} redraw - Indicates whether to redraw.\n * @param {boolean} isReactCallback - Indicates whether it's a React callback.\n * @returns {ClientRect} - The bounding rectangle of the element.\n * @private\n */\nexport function measureElementRect(element, redraw, isReactCallback) {\n    if (redraw === void 0) { redraw = false; }\n    if (!isReactCallback) { // If the element is already in DOM, no need to append in the body.\n        document.body.appendChild(element);\n    }\n    var bounds = element.getBoundingClientRect();\n    if (redraw) {\n        remove(element);\n    }\n    else if (!isReactCallback) { // for react chart data label template - (callback function)\n        removeElement(element.id);\n    }\n    return bounds;\n}\n/**\n * Finds an element in a NodeList based on its id.\n *\n * @param {NodeList} elements - The NodeList to search.\n * @param {string} id - The id of the element to find.\n * @returns {Element} - The found element.\n * @private\n */\nexport function findlElement(elements, id) {\n    var element;\n    for (var i = 0, length_1 = elements.length; i < length_1; i++) {\n        if (elements[i].id.indexOf(id) > -1) {\n            element = elements[i];\n            continue;\n        }\n    }\n    return element;\n}\n/**\n * Gets the point on the chart based on the provided coordinates and axes.\n *\n * @param {number} x - The x-coordinate of the point.\n * @param {number} y - The y-coordinate of the point.\n * @param {Axis} xAxis - The x-axis of the chart.\n * @param {Axis} yAxis - The y-axis of the chart.\n * @param {boolean} isInverted - Indicates whether the chart is inverted.\n * @returns {ChartLocation} - The calculated point.\n * @private\n */\nexport function getPoint(x, y, xAxis, yAxis, isInverted) {\n    x = ((xAxis.valueType === 'Logarithmic') ?\n        logBase(((x > 0) ? x : Math.pow(xAxis.logBase, xAxis.visibleRange.min)), xAxis.logBase) : x);\n    y = ((yAxis.valueType === 'Logarithmic') ?\n        logBase(((y > 0) ? y : Math.pow(yAxis.logBase, yAxis.visibleRange.min)), yAxis.logBase) : y);\n    x = valueToCoefficient(x, xAxis);\n    y = valueToCoefficient(y, yAxis);\n    var xLength = (isInverted ? xAxis.rect.height : xAxis.rect.width);\n    var yLength = (isInverted ? yAxis.rect.width : yAxis.rect.height);\n    var locationX = isInverted ? y * (yLength) : x * (xLength);\n    var locationY = isInverted ? (1 - x) * (xLength) : (1 - y) * (yLength);\n    return new ChartLocation(locationX, locationY);\n}\n/**\n * Appends an element to a parent element.\n *\n * @param {Element} child - The child element to be appended.\n * @param {Element} parent - The parent element to which the child element will be appended.\n * @param {boolean} [redraw=false] - A boolean value indicating whether to redraw. Default is false.\n * @param {boolean} [animate=false] - A boolean value indicating whether to animate the appending operation. Default is false.\n * @param {string} [x='x'] - The x-coordinate for the position of the child element. Default is 'x'.\n * @param {string} [y='y'] - The y-coordinate for the position of the child element. Default is 'y'.\n * @param {number} duration - duration of the animation\n * @returns {void}\n */\nexport function appendElement(child, parent, redraw, animate, x, y, duration) {\n    if (redraw === void 0) { redraw = false; }\n    if (animate === void 0) { animate = false; }\n    if (x === void 0) { x = 'x'; }\n    if (y === void 0) { y = 'y'; }\n    if (child && child.hasChildNodes() && parent) {\n        appendChildElement(false, parent, child, redraw, animate, x, y, undefined, undefined, undefined, undefined, undefined, duration);\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Method to append child element.\n *\n * @param {boolean} isCanvas - canvas mode value\n * @param {Element | HTMLElement} parent - parent element\n * @param {Element | HTMLElement} childElement - childElement element\n * @param {boolean} redraw - chart redraw value\n * @param {boolean} isAnimate - animation value\n * @param {string} x - x position\n * @param {string} y - y position\n * @param {ChartLocation} start - start location value\n * @param {string} direction - direction of the element\n * @param {boolean} forceAnimate - forceAnimate\n * @param {boolean} isRect - isRect\n * @param {Rect} previousRect - previousRect\n * @param {number} animateDuration - duration of the animation\n * @param {boolean} scatterElement - The scatter element.\n * @param {number} angle - The angle of the element.\n * @param {ChartLocation} currentTransform - The current transform of the element.\n * @param {string} previousTranslate - The previous translate of the element.\n * @returns {void}\n * @private\n */\nexport function appendChildElement(isCanvas, parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration, scatterElement, angle, currentTransform, previousTranslate) {\n    if (isAnimate === void 0) { isAnimate = false; }\n    if (x === void 0) { x = 'x'; }\n    if (y === void 0) { y = 'y'; }\n    if (forceAnimate === void 0) { forceAnimate = false; }\n    if (isRect === void 0) { isRect = false; }\n    if (previousRect === void 0) { previousRect = null; }\n    if (scatterElement === void 0) { scatterElement = false; }\n    if (angle === void 0) { angle = 0; }\n    if (isCanvas) {\n        return null;\n    }\n    var existChild = scatterElement ? null : parent.querySelector('#' + childElement.id);\n    var element = (existChild || getElement(childElement.id));\n    var child = childElement;\n    var duration = !isNullOrUndefined(animateDuration) ? animateDuration : 300;\n    if (redraw && isAnimate && element) {\n        start = start || (element.tagName === 'DIV' ?\n            new ChartLocation(+(element.style[x].split('px')[0]), +(element.style[y].split('px')[0])) :\n            new ChartLocation(+element.getAttribute(x), +element.getAttribute(y)));\n        if (direction && direction !== 'undefined') {\n            pathAnimation(childElement, childElement.getAttribute('d'), redraw, direction, duration);\n        }\n        else if (isRect && previousRect) {\n            animateRectElement(child, 0, duration, new Rect(+element.getAttribute('x'), +element.getAttribute('y'), +element.getAttribute('width'), +element.getAttribute('height')), previousRect);\n        }\n        else {\n            var end = child.tagName === 'DIV' ?\n                new ChartLocation(+(child.style[x].split('px')[0]), +(child.style[y].split('px')[0])) :\n                new ChartLocation(+child.getAttribute(x), +child.getAttribute(y));\n            var previousTranform = element.getAttribute('transform');\n            animateRedrawElement(child, duration, start, end, x, y, angle, currentTransform, previousTranslate !== undefined ? new ChartLocation(previousTranslate.match(/\\d+/g).map(Number)[0], previousTranslate.match(/\\d+/g).map(Number)[1]) : previousTranform ? new ChartLocation(parseFloat(previousTranform.split(',')[1]), parseFloat(previousTranform.split(',')[2])) : new ChartLocation(0, 0), previousTranslate !== undefined);\n        }\n    }\n    else if (redraw && isAnimate && !element && forceAnimate) {\n        templateAnimate(child, 0, 600, 'FadeIn');\n    }\n    if (existChild) {\n        parent.replaceChild(child, element);\n    }\n    else {\n        parent.appendChild(child);\n    }\n}\n/**\n * Calculates the location of the dragged rectangle.\n *\n * @param {number} x1 - The x-coordinate of the starting point.\n * @param {number} y1 - The y-coordinate of the starting point.\n * @param {number} x2 - The x-coordinate of the ending point.\n * @param {number} y2 - The y-coordinate of the ending point.\n * @param {Rect} outerRect - The outer rectangle containing the dragged rectangle.\n * @returns {Rect} - The location of the dragged rectangle.\n * @private\n */\nexport function getDraggedRectLocation(x1, y1, x2, y2, outerRect) {\n    var width = Math.abs(x1 - x2);\n    var height = Math.abs(y1 - y2);\n    var x = Math.max(checkBounds(Math.min(x1, x2), width, outerRect.x, outerRect.width), outerRect.x);\n    var y = Math.max(checkBounds(Math.min(y1, y2), height, outerRect.y, outerRect.height), outerRect.y);\n    return new Rect(x, y, Math.min(width, outerRect.width), Math.min(height, outerRect.height));\n}\n/**\n * Checks if a value is within bounds defined by minimum and maximum values.\n *\n * @param {number} start - The start value.\n * @param {number} size - The size of the value.\n * @param {number} min - The minimum value of the bound.\n * @param {number} max - The maximum value of the bound.\n * @returns {number} - The adjusted value within the bounds.\n * @private\n */\nexport function checkBounds(start, size, min, max) {\n    if (start < min) {\n        start = min;\n    }\n    else if ((start + size) > (max + min)) {\n        start = (max + min) - size;\n    }\n    return start;\n}\n/**\n * Retrieves label text for a data point.\n *\n * @param {Points} currentPoint - The current data point.\n * @param {Series} series - The series to which the data point belongs.\n * @param {Chart} chart - The chart instance.\n * @returns {string[]} - The label text.\n * @private\n */\nexport function getLabelText(currentPoint, series, chart) {\n    var labelFormat = series.marker.dataLabel.format ? series.marker.dataLabel.format : series.yAxis.labelFormat;\n    var text = [];\n    var customLabelFormat = labelFormat.match('{value}') !== null;\n    switch (series.seriesType) {\n        case 'XY':\n            /**\n             * I255790\n             * For Polar radar series, the dataLabel appears out of range when axis range is given for yaxis\n             * Cause: Since symbol location for the points which did not lies in within range, lies outside of seriesRect.\n             * Fix: DataLabel rendered after checking WithIn for the points\n             */\n            if (series.chart.chartAreaType === 'PolarRadar') {\n                if (series.drawType.indexOf('Stacking') !== -1) {\n                    if ((series.yAxis.valueType === 'Logarithmic' &&\n                        logWithIn(series.stackedValues.endValues[currentPoint.index], series.yAxis)) ||\n                        withIn(series.stackedValues.endValues[currentPoint.index], series.yAxis.visibleRange)) {\n                        text.push(currentPoint.text || currentPoint.yValue.toString());\n                    }\n                }\n                else {\n                    if ((series.yAxis.valueType === 'Logarithmic' && logWithIn(currentPoint.yValue, series.yAxis)) ||\n                        withIn(currentPoint.yValue, series.yAxis.visibleRange)) {\n                        text.push(currentPoint.text || currentPoint.yValue.toString());\n                    }\n                }\n            }\n            else {\n                text.push(currentPoint.text || currentPoint.yValue.toString());\n            }\n            break;\n        case 'HighLow':\n            text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n            break;\n        case 'HighLowOpenClose':\n            text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.max(currentPoint.open, currentPoint.close).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.open, currentPoint.close).toString());\n            break;\n        case 'BoxPlot':\n            text.push(currentPoint.text || currentPoint.median.toString());\n            text.push(currentPoint.text || currentPoint.maximum.toString());\n            text.push(currentPoint.text || currentPoint.minimum.toString());\n            text.push(currentPoint.text || currentPoint.upperQuartile.toString());\n            text.push(currentPoint.text || currentPoint.lowerQuartile.toString());\n            for (var _i = 0, _a = currentPoint.outliers; _i < _a.length; _i++) {\n                var liers = _a[_i];\n                text.push(currentPoint.text || liers.toString());\n            }\n            break;\n    }\n    if ((labelFormat || chart.useGroupingSeparator) && !currentPoint.text) {\n        series.yAxis.format = chart.intl.getNumberFormat({\n            format: customLabelFormat ? '' : labelFormat,\n            useGrouping: chart.useGroupingSeparator\n        });\n        for (var i = 0; i < text.length; i++) {\n            text[i] = customLabelFormat ? labelFormat.replace('{value}', series.yAxis.format(parseFloat(text[i]))) :\n                series.yAxis.format(parseFloat(text[i]));\n        }\n    }\n    return text;\n}\n/**\n * Stops the specified timer.\n *\n * @param {number} timer - The timer to stop.\n * @returns {void}\n */\nexport function stopTimer(timer) {\n    window.clearInterval(timer);\n}\n/**\n * Checks if the specified rect collides with any of the rect in the collection within the given clip rect.\n *\n * @param {Rect} rect - The rect to check for collision.\n * @param {Rect[]} collections - The collection of rect to check against.\n * @param {Rect} clipRect - The clip rect.\n * @returns {boolean} - Returns true if collision occurs; otherwise, false.\n */\nexport function isCollide(rect, collections, clipRect) {\n    var currentRect = new Rect(rect.x + clipRect.x, rect.y + clipRect.y, rect.width, rect.height);\n    var isCollide = collections.some(function (rect) {\n        return (currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x &&\n            currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y);\n    });\n    return isCollide;\n}\n/**\n * Checks if the specified rect overlap each other.\n *\n * @param {Rect} currentRect - The first rect.\n * @param {Rect} rect - The second rect.\n * @returns {boolean} - Returns true if the rect overlap; otherwise, false.\n */\nexport function isOverlap(currentRect, rect) {\n    return (currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x &&\n        currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y);\n}\n/**\n * Checks if the specified rect is completely contained within another rect.\n *\n * @param {Rect} currentRect - The rect to check if it's contained.\n * @param {Rect} rect - The containing rect.\n * @returns {boolean} - Returns true if the specified rect is completely contained within the containing rect; otherwise, false.\n */\nexport function containsRect(currentRect, rect) {\n    return (currentRect.x <= rect.x && currentRect.x + currentRect.width >= rect.x + rect.width &&\n        currentRect.y <= rect.y && currentRect.height + currentRect.y >= rect.y + rect.height);\n}\n/**\n * Calculates the rect based on the specified location, text size, and margin.\n *\n * @param {ChartLocation} location - The location of the rect.\n * @param {Size} textSize - The size of the text.\n * @param {MarginModel} margin - The margin to be applied around the text.\n * @returns {Rect} - Returns the calculated rect.\n */\nexport function calculateRect(location, textSize, margin) {\n    return new Rect((location.x - (textSize.width / 2) - margin.left), (location.y - (textSize.height / 2) - margin.top), textSize.width + margin.left + margin.right, textSize.height + margin.top + margin.bottom);\n}\n/**\n * Converts the color value to hexadecimal code.\n *\n * @param {ColorValue} value - The color value to convert.\n * @returns {string} - Returns the hexadecimal representation of the color.\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * Converts a component value to its hexadecimal representation.\n *\n * @param {number} value - The component value to convert.\n * @returns {string} - Returns the hexadecimal representation of the component.\n */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * Converts a hexadecimal color code to its RedGreenBlue representation.\n *\n * @param {string} hex - The hexadecimal color code to convert.\n * @returns {ColorValue} - Returns the RedGreenBlue representation of the hexadecimal color code.\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * Converts a color name to its corresponding hexadecimal color code.\n *\n * @param {string} color - The color name to convert.\n * @returns {string} - Returns the hexadecimal color code.\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('chartmeasuretext');\n    if (!element) {\n        element = createElement('text', { id: 'chartmeasuretext' });\n        document.body.appendChild(element);\n    }\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    element.style.color = '';\n    var isRGBValue;\n    if (color.indexOf('rgb') === 0 || color.indexOf('hsl') === 0) {\n        color = color.replace(/\\s/g, '').replace(/[()]/g, '');\n        isRGBValue = color.slice(3).split(',');\n    }\n    if (isRGBValue && isRGBValue.length) {\n        var _a = isRGBValue.map(function (value) { return parseInt(value, 10); }), r = _a[0], g = _a[1], b = _a[2];\n        return convertToHexCode(new ColorValue(r, g, b));\n    }\n    return '';\n}\n/**\n * Checks if the provided color string is in a valid format.\n *\n * @param {string} color - The color string to check.\n * @returns {boolean} - Returns true if the color string is in a valid format, otherwise returns false.\n */\nexport function checkColorFormat(color) {\n    if (color.indexOf('rgba(') === 0 || color.indexOf('rgb(') === 0) {\n        var rgbaValues = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(',');\n        if (rgbaValues.length === 3 || rgbaValues.length === 4) {\n            return rgbaValues.every(function (val) {\n                var num = parseFloat(val);\n                return !isNaN(num) && num >= 0 && num <= 255;\n            });\n        }\n    }\n    else if (color.indexOf('#') === 0) {\n        var hex = color.substring(1);\n        return (hex.length === 3 || hex.length === 6) && /^[0-9A-Fa-f]{3,6}$/.test(hex);\n    }\n    return false;\n}\n/**\n * Gets the color with adjusted saturation.\n *\n * @param {string} color - The input color string.\n * @param {number} factor - The factor by which to adjust the saturation.\n * @returns {string} - The modified color string.\n */\nexport function getSaturationColor(color, factor) {\n    color = colorNameToHex(color);\n    color = color.replace(/[^0-9a-f]/gi, '');\n    if (color.length < 6) {\n        color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n    }\n    factor = factor || 0;\n    // convert to decimal and change luminosity\n    var rgb = '#';\n    var colorCode;\n    for (var i = 0; i < 3; i++) {\n        colorCode = parseInt(color.substr(i * 2, 2), 16);\n        colorCode = Math.round(Math.min(Math.max(0, colorCode + (colorCode * factor)), 255));\n        rgb += ('00' + colorCode.toString(16)).substr(colorCode.toString(16).length);\n    }\n    return rgb;\n}\n/**\n * Applies a lightness adjustment to the given color.\n *\n * @param {string} color - The input color string.\n * @param {number} value - The value by which to adjust the lightness.\n * @returns {string} - The modified color string.\n */\nexport function applyZLight(color, value) {\n    var RGB = convertHexToColor(color);\n    RGB.r = parseInt(Math.floor(RGB.r * value).toString(), 10);\n    RGB.g = parseInt(Math.floor(RGB.g * value).toString(), 10);\n    RGB.b = parseInt(Math.floor(RGB.b * value).toString(), 10);\n    return '#' + componentToHex(RGB.r).toUpperCase() + componentToHex(RGB.g).toUpperCase() + componentToHex(RGB.b).toUpperCase();\n}\n/**\n * Calculates the median value of an array of numbers.\n *\n * @param {number[]} values - The array of numbers.\n * @returns {number} - The median value.\n */\nexport function getMedian(values) {\n    var half = Math.floor(values.length / 2);\n    return values.length % 2 ? values[half] : ((values[half - 1] + values[half]) / 2.0);\n}\n/**\n * Calculates the legend shapes based on the provided parameters.\n *\n * @param {ChartLocation} location - The location to position the legend shape.\n * @param {Size} size - The size of the legend shape.\n * @param {string} shape - The shape of the legend.\n * @param {PathOption} options - The options for drawing the legend shape.\n * @returns {IShapes} - The calculated legend shape.\n */\nexport function calculateLegendShapes(location, size, shape, options) {\n    var padding = 10;\n    var dir = '';\n    var space = 2;\n    var height = size.height;\n    var width = size.width;\n    var lx = location.x;\n    var ly = location.y;\n    switch (shape) {\n        case 'MultiColoredLine':\n        case 'Line':\n        case 'StackingLine':\n        case 'StackingLine100':\n            dir = 'M' + ' ' + (lx + (-width * (3 / 4))) + ' ' + (ly) + ' ' +\n                'L' + ' ' + (lx + (width * (3 / 4))) + ' ' + (ly);\n            merge(options, { 'd': dir });\n            break;\n        case 'StepLine':\n            options.fill = 'transparent';\n            dir = 'M' + ' ' + (lx + (-width / 2) - (padding / 4)) + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' + (lx +\n                (-width / 2) + (width / 10)) + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' + (lx + (-width / 2) + (width / 10))\n                + ' ' + (ly) + ' ' + 'L' + ' ' + (lx + (-width / 10)) + ' ' + (ly) + ' ' + 'L' + ' ' + (lx + (-width / 10))\n                + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' + (lx + (width / 5)) + ' ' + (ly + (height / 2)) + ' ' + 'L' +\n                ' ' + (lx + (width / 5)) + ' ' + (ly + (-height / 2)) + ' ' + 'L' + ' ' + (lx + (width / 2)) + ' ' + (ly +\n                (-height / 2)) + 'L' + ' ' + (lx + (width / 2)) + ' ' + (ly + (height / 2)) + ' ' + 'L' + '' + (lx + (width / 2)\n                + (padding / 4)) + ' ' + (ly + (height / 2));\n            merge(options, { 'd': dir });\n            break;\n        case 'UpArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            dir = 'M' + ' ' + (lx + (-width / 2)) + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + (lx) + ' ' + (ly - (height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + (ly + (height / 2)) +\n                'L' + ' ' + (lx + (width / 2) - space) + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + (lx) + ' ' + (ly - (height / 2) + (2 * space)) +\n                'L' + (lx - (width / 2) + space) + ' ' + (ly + (height / 2)) + ' Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'DownArrow':\n            dir = 'M' + ' ' + (lx - (width / 2)) + ' ' + (ly - (height / 2)) + ' ' +\n                'L' + ' ' + (lx) + ' ' + (ly + (height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + (ly - (height / 2)) +\n                'L' + ' ' + (lx + (width / 2) - space) + ' ' + (ly - (height / 2)) + ' ' +\n                'L' + ' ' + (lx) + ' ' + (ly + (height / 2) - (2 * space)) +\n                'L' + (lx - (width / 2) + space) + ' ' + (ly - (height / 2)) + ' Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'RightArrow':\n            dir = 'M' + ' ' + (lx + (-width / 2)) + ' ' + (ly - (height / 2)) + ' ' +\n                'L' + ' ' + (lx + (width / 2)) + ' ' + (ly) + ' ' + 'L' + ' ' +\n                (lx + (-width / 2)) + ' ' + (ly + (height / 2)) + ' L' + ' ' + (lx + (-width / 2)) + ' ' +\n                (ly + (height / 2) - space) + ' ' + 'L' + ' ' + (lx + (width / 2) - (2 * space)) + ' ' + (ly) +\n                ' L' + (lx + (-width / 2)) + ' ' + (ly - (height / 2) + space) + ' Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            dir = 'M' + ' ' + (lx + (width / 2)) + ' ' + (ly - (height / 2)) + ' ' +\n                'L' + ' ' + (lx + (-width / 2)) + ' ' + (ly) + ' ' + 'L' + ' ' +\n                (lx + (width / 2)) + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' +\n                (lx + (width / 2)) + ' ' + (ly + (height / 2) - space) + ' L' + ' ' + (lx + (-width / 2) + (2 * space))\n                + ' ' + (ly) + ' L' + (lx + (width / 2)) + ' ' + (ly - (height / 2) + space) + ' Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Column':\n        case 'Pareto':\n        case 'StackingColumn':\n        case 'StackingColumn100':\n        case 'RangeColumn':\n        case 'Histogram':\n            dir = 'M' + ' ' + (lx - 3 * (width / 5)) + ' ' + (ly - (height / 5)) + ' ' + 'L' + ' ' +\n                (lx + 3 * (-width / 10)) + ' ' + (ly - (height / 5)) + ' ' + 'L' + ' ' +\n                (lx + 3 * (-width / 10)) + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' ' + (lx - 3 *\n                (width / 5)) + ' ' + (ly + (height / 2)) + ' ' + 'Z' + ' ' + 'M' + ' ' +\n                (lx + (-width / 10) - (width / 20)) + ' ' + (ly - (height / 4) - (padding / 2))\n                + ' ' + 'L' + ' ' + (lx + (width / 10) + (width / 20)) + ' ' + (ly - (height / 4) -\n                (padding / 2)) + ' ' + 'L' + ' ' + (lx + (width / 10) + (width / 20)) + ' ' + (ly\n                + (height / 2)) + ' ' + 'L' + ' ' + (lx + (-width / 10) - (width / 20)) + ' ' + (ly +\n                (height / 2)) + ' ' + 'Z' + ' ' + 'M' + ' ' + (lx + 3 * (width / 10)) + ' ' + (ly) + ' ' +\n                'L' + ' ' + (lx + 3 * (width / 5)) + ' ' + (ly) + ' ' + 'L' + ' '\n                + (lx + 3 * (width / 5)) + ' ' + (ly + (height / 2)) + ' ' + 'L' + ' '\n                + (lx + 3 * (width / 10)) + ' ' + (ly + (height / 2)) + ' ' + 'Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Bar':\n        case 'StackingBar':\n        case 'StackingBar100':\n            dir = 'M' + ' ' + (lx + (-width / 2) + (-padding / 4)) + ' ' + (ly - 3 * (height / 5)) + ' '\n                + 'L' + ' ' + (lx + 3 * (width / 10)) + ' ' + (ly - 3 * (height / 5)) + ' ' + 'L' + ' ' +\n                (lx + 3 * (width / 10)) + ' ' + (ly - 3 * (height / 10)) + ' ' + 'L' + ' ' +\n                (lx - (width / 2) + (-padding / 4)) + ' ' + (ly - 3 * (height / 10)) + ' ' + 'Z' + ' '\n                + 'M' + ' ' + (lx + (-width / 2) + (-padding / 4)) + ' ' + (ly - (height / 5)\n                + (padding / 20)) + ' ' + 'L' + ' ' + (lx + (width / 2) + (padding / 4)) + ' ' + (ly\n                - (height / 5) + (padding / 20)) + ' ' + 'L' + ' ' + (lx + (width / 2) + (padding / 4))\n                + ' ' + (ly + (height / 10) + (padding / 20)) + ' ' + 'L' + ' ' + (lx - (width / 2)\n                + (-padding / 4)) + ' ' + (ly + (height / 10) + (padding / 20)) + ' ' + 'Z' + ' ' + 'M'\n                + ' ' + (lx - (width / 2) + (-padding / 4)) + ' ' + (ly + (height / 5)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (lx + (-width / 4)) + ' ' + (ly + (height / 5)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (lx + (-width / 4)) + ' ' + (ly + (height / 2)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (lx - (width / 2) + (-padding / 4))\n                + ' ' + (ly + (height / 2) + (padding / 10)) + ' ' + 'Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Spline':\n            options.fill = 'transparent';\n            dir = 'M' + ' ' + (lx - (width / 2)) + ' ' + (ly + (height / 5)) + ' ' + 'Q' + ' '\n                + lx + ' ' + (ly - height) + ' ' + lx + ' ' + (ly + (height / 5))\n                + ' ' + 'M' + ' ' + lx + ' ' + (ly + (height / 5)) + ' ' + 'Q' + ' ' + (lx\n                + (width / 2)) + ' ' + (ly + (height / 2)) + ' ' + (lx + (width / 2)) + ' '\n                + (ly - (height / 2));\n            merge(options, { 'd': dir });\n            break;\n        case 'Area':\n        case 'MultiColoredArea':\n        case 'RangeArea':\n        case 'StackingArea':\n        case 'StackingArea100':\n            dir = 'M' + ' ' + (lx - (width / 2) - (padding / 4)) + ' ' + (ly + (height / 2))\n                + ' ' + 'L' + ' ' + (lx + (-width / 4) + (-padding / 8)) + ' ' + (ly - (height / 2))\n                + ' ' + 'L' + ' ' + (lx) + ' ' + (ly + (height / 4)) + ' ' + 'L' + ' ' + (lx\n                + (width / 4) + (padding / 8)) + ' ' + (ly + (-height / 2) + (height / 4)) + ' '\n                + 'L' + ' ' + (lx + (height / 2) + (padding / 4)) + ' ' + (ly + (height / 2)) + ' ' + 'Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'SplineArea':\n        case 'SplineRangeArea':\n            dir = 'M' + ' ' + (lx - (width / 2)) + ' ' + (ly + (height / 5)) + ' ' + 'Q' + ' ' + lx\n                + ' ' + (ly - height) + ' ' + lx + ' ' + (ly + (height / 5)) + ' ' + 'Z' + ' ' + 'M'\n                + ' ' + lx + ' ' + (ly + (height / 5)) + ' ' + 'Q' + ' ' + (lx + (width / 2)) + ' '\n                + (ly + (height / 2)) + ' ' + (lx + (width / 2)) + ' '\n                + (ly - (height / 2)) + ' ' + ' Z';\n            merge(options, { 'd': dir });\n            break;\n        case 'Pie':\n        case 'Doughnut': {\n            options.stroke = 'transparent';\n            var r = Math.min(height, width) / 2;\n            dir = getAccumulationLegend(lx, ly, r, height, width);\n            merge(options, { 'd': dir });\n            break;\n        }\n    }\n    return { renderOption: options };\n}\n/**\n * Trims the text to fit within the specified maximum width.\n *\n * @param {number} maxWidth - The maximum width for the text.\n * @param {string} text - The text to be trimmed.\n * @param {FontModel} font - The font settings for the text.\n * @param {boolean} isRtlEnabled - Indicates whether right-to-left text rendering is enabled.\n * @param {FontModel} [themeFontStyle] - The font style to be used for theme-specific settings.\n * @returns {string} - The trimmed text.\n */\nexport function textTrim(maxWidth, text, font, isRtlEnabled, themeFontStyle) {\n    var label = text;\n    var size = measureText(text, font, themeFontStyle).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = isRtlEnabled ? '...' + text.substring(0, i) : text.substring(0, i) + '...';\n            size = measureText(label, font, themeFontStyle).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Trims the text and performs line breaks based on the maximum width and font settings.\n *\n * @param {number} maxWidth - The maximum width allowed for the text.\n * @param {string} text - The text to be trimmed.\n * @param {FontModel} font - The font settings for the text.\n * @param {FontModel} [themeFontStyle] - Optional. The font style based on the theme.\n * @returns {string[]} - An array of trimmed text lines with line breaks.\n */\nexport function lineBreakLabelTrim(maxWidth, text, font, themeFontStyle) {\n    var labelCollection = [];\n    var breakLabels = text.split('<br>');\n    for (var i = 0; i < breakLabels.length; i++) {\n        text = breakLabels[i];\n        var size = measureText(text, font, themeFontStyle).width;\n        if (size > maxWidth) {\n            var textLength = text.length;\n            for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n                text = text.substring(0, i_1) + '...';\n                size = measureText(text, font, themeFontStyle).width;\n                if (size <= maxWidth) {\n                    labelCollection.push(text);\n                    break;\n                }\n            }\n        }\n        else {\n            labelCollection.push(text);\n        }\n    }\n    return labelCollection;\n}\n/**\n * Converts a string value to a number, considering the container size for percentage values.\n *\n * @param {string} value - The string value to convert to a number.\n * @param {number} containerSize - The size of the container, used for percentage values.\n * @returns {number} - The converted numeric value.\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Redraws the SVG or canvas element based on the provided options.\n *\n * @param {boolean} redraw - Specifies whether to redraw the element.\n * @param {string} id - The id of the element to redraw.\n * @param {PathAttributes | RectAttributes | CircleAttributes} [options] - The attributes of the element to redraw.\n * @param {SvgRenderer | CanvasRenderer} [renderer] - The renderer to use for redrawing.\n * @returns {Element} - The redrawn element.\n */\nexport function redrawElement(redraw, id, options, renderer) {\n    if (!redraw) {\n        return null;\n    }\n    var element = getElement(id);\n    if (element && options) {\n        renderer.setElementAttributes(options, element.tagName === 'clipPath' ? element.childNodes[0] : element);\n    }\n    return element;\n}\n/**\n * Animates the redrawn element from its start to end location over a specified duration.\n *\n * @param {Element | HTMLElement} element - The element to animate.\n * @param {number} duration - The duration of the animation in milliseconds.\n * @param {ChartLocation} start - The start location of the element.\n * @param {ChartLocation} end - The end location of the element.\n * @param {string} [x='x'] - The attribute representing the horizontal position of the element.\n * @param {string} [y='y'] - The attribute representing the vertical position of the element.\n * @param {number} [angle=0] - The angle of rotation for the element.\n * @param {ChartLocation} [newTransform=new ChartLocation(0, 0)] - The new transform location of the element.\n * @param {ChartLocation} [previousTransform=new ChartLocation(0, 0)] - The previous transform location of the element.\n * @param {boolean} [pointAnimation] - Specifies the animation based on points.\n * @returns {void}\n */\nexport function animateRedrawElement(element, duration, start, end, x, y, angle, newTransform, previousTransform, pointAnimation) {\n    if (x === void 0) { x = 'x'; }\n    if (y === void 0) { y = 'y'; }\n    if (angle === void 0) { angle = 0; }\n    if (newTransform === void 0) { newTransform = new ChartLocation(0, 0); }\n    if (previousTransform === void 0) { previousTransform = new ChartLocation(0, 0); }\n    var isDiv = element.tagName === 'DIV';\n    var setStyle = function (xValue, yValue, rotateX, rotateY) {\n        if (isDiv) {\n            element.style[x] = xValue + 'px';\n            element.style[y] = yValue + 'px';\n        }\n        else {\n            element.setAttribute(x, xValue + '');\n            element.setAttribute(y, yValue + '');\n            if (angle && newTransform.x && newTransform.y && previousTransform.x && previousTransform.y && rotateX && rotateY) {\n                element.setAttribute('transform', 'rotate(' + angle + ',' + rotateX + ',' + rotateY + ')');\n            }\n            if (pointAnimation) {\n                element.setAttribute('transform', 'translate(' + rotateX + ',' + rotateY + ')');\n            }\n        }\n    };\n    setStyle(start.x, start.y, previousTransform.x, previousTransform.y);\n    new Animation({}).animate(createElement('div'), {\n        duration: duration,\n        progress: function (args) {\n            setStyle(linear(args.timeStamp, start.x, end.x - start.x, args.duration), linear(args.timeStamp, start.y, end.y - start.y, args.duration), linear(args.timeStamp, previousTransform.x, newTransform.x - previousTransform.x, args.duration), linear(args.timeStamp, previousTransform.y, newTransform.y - previousTransform.y, args.duration));\n        },\n        end: function () {\n            setStyle(end.x, end.y, newTransform.x, newTransform.y);\n        }\n    });\n}\n/**\n * Animates the text content of an HTML element from a start value to an end value over a specified duration.\n *\n * @param {HTMLElement} element - The HTML element whose text content will be animated.\n * @param {number} duration - The duration of the animation in milliseconds.\n * @param {number} start - The starting value of the animation.\n * @param {number} end - The ending value of the animation.\n * @param {string} customLabelFormat - A custom format string that includes a placeholder for the value.\n * @returns {void}\n */\nexport function animateTextElement(element, duration, start, end, customLabelFormat) {\n    if (element && start && end) {\n        var formatText_1 = function (value) {\n            return customLabelFormat ? customLabelFormat.replace('{value}', value.toString()) : value.toString();\n        };\n        new Animation({}).animate(createElement('div'), {\n            duration: duration,\n            progress: function (args) {\n                element.style.animation = '';\n                var progress = args.timeStamp / args.duration;\n                var currentValue = start + (end - start) * progress;\n                if (start % 1 !== 0 || end % 1 !== 0) {\n                    currentValue = parseFloat(currentValue.toFixed(1));\n                }\n                else {\n                    currentValue = Math.round(currentValue);\n                }\n                element.textContent = formatText_1(currentValue);\n            },\n            end: function () {\n                element.textContent = formatText_1(end);\n            }\n        });\n    }\n}\n/**\n * Renders a text element using the specified renderer and options.\n *\n * @param {SvgRenderer | CanvasRenderer} renderer - The renderer used for rendering.\n * @param {TextOption} option - The options for the text element.\n * @param {FontModel} font - The font settings for the text.\n * @param {string} color - The color of the text.\n * @param {HTMLElement | Element} parent - The parent element to which the text element is appended.\n * @param {boolean} [isMinus=false] - Indicates whether the text represents a negative value.\n * @param {boolean} [redraw] - Indicates whether to redraw the element.\n * @param {boolean} [isAnimate] - Indicates whether to animate the element.\n * @param {boolean} [forceAnimate=false] - Indicates whether to force animation.\n * @param {number} [animateDuration] - The duration of the animation in milliseconds.\n * @param {Rect} [seriesClipRect] - The clipping rectangle for the series.\n * @param {Size} [labelSize] - The size of the label.\n * @param {boolean} [isRotatedLabelIntersect] - Indicates whether rotated labels intersect.\n * @param {boolean} [isCanvas] - Indicates whether the rendering is done on a canvas.\n * @param {boolean} [isDataLabelWrap] - Indicates whether data labels are wrapped.\n * @param {FontModel} [themeFontStyle] - The font settings based on the theme.\n * @param {ChartLocation} [transform] - The location to transform the text element.\n * @param {string} [previousTransform] - The previous transform of the text element.\n * @returns {Element} - The rendered text element.\n */\nexport function textElement(renderer, option, font, color, parent, isMinus, redraw, isAnimate, forceAnimate, animateDuration, seriesClipRect, labelSize, isRotatedLabelIntersect, isCanvas, isDataLabelWrap, themeFontStyle, transform, previousTransform) {\n    if (isMinus === void 0) { isMinus = false; }\n    if (forceAnimate === void 0) { forceAnimate = false; }\n    var renderOptions = {};\n    var tspanElement;\n    //let renderer: SvgRenderer = new SvgRenderer('');\n    var height;\n    var dy;\n    var label;\n    var width = 0;\n    var dx;\n    var maxWidth = 0;\n    if (option.text.length > 1 && isDataLabelWrap) {\n        for (var i = 0, len = option.text.length; i < len; i++) {\n            maxWidth = Math.max(maxWidth, measureText(option.text[i], font, themeFontStyle).width);\n        }\n        width = measureText(option.text[0], font, themeFontStyle).width;\n    }\n    dx = (option.text.length > 1 && isDataLabelWrap) ? (option.x + maxWidth / 2 - width / 2) : option.x;\n    renderOptions = {\n        'id': option.id,\n        'x': dx,\n        'y': option.y,\n        'fill': color ? color : 'black',\n        'font-size': font.size || themeFontStyle.size,\n        'font-style': font.fontStyle || themeFontStyle.fontStyle,\n        'font-family': font.fontFamily || themeFontStyle.fontFamily,\n        'font-weight': font.fontWeight || themeFontStyle.fontWeight,\n        'text-anchor': option.anchor,\n        'labelRotation': option.labelRotation,\n        'transform': option.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': option.baseLine\n    };\n    var text = typeof option.text === 'string' ? option.text : isMinus ? option.text[option.text.length - 1] : option.text[0];\n    var transX = seriesClipRect ? seriesClipRect.x : 0;\n    var transY = seriesClipRect ? seriesClipRect.y : 0;\n    var htmlObject = renderer.createText(renderOptions, text, transX, transY);\n    if (typeof option.text !== 'string' && option.text.length > 1) {\n        for (var i = 1, len = option.text.length; i < len; i++) {\n            height = (measureText(option.text[i], font, themeFontStyle).height);\n            width = measureText(option.text[i], font, themeFontStyle).width;\n            dy = (option.y) + ((isMinus) ? -(i * height) : (i * height));\n            dx = isDataLabelWrap ? (option.x + maxWidth / 2 - width / 2) : option.x;\n            label = isMinus ? option.text[option.text.length - (i + 1)] : option.text[i];\n            if (isCanvas) {\n                tspanElement = renderer.createText(renderOptions, label, null, null, dy, true);\n            }\n            else {\n                tspanElement = renderer.createTSpan({\n                    'x': dx, 'id': option.id,\n                    'y': dy\n                }, label);\n                htmlObject.appendChild(tspanElement);\n            }\n        }\n    }\n    if (!isRotatedLabelIntersect) {\n        appendChildElement(renderer instanceof CanvasRenderer, parent, htmlObject, redraw, isAnimate, 'x', 'y', null, null, forceAnimate, false, null, animateDuration, false, option.labelRotation, transform, previousTransform);\n    }\n    return htmlObject;\n}\n/**\n * Calculates the size of the chart.\n *\n * @param {Chart | AccumulationChart | RangeNavigator | StockChart | Chart3D | CircularChart3D} chart - The chart for which to calculate the size.\n * @returns {void}\n */\nexport function calculateSize(chart) {\n    // fix for Chart rendered with default width in IE issue\n    var containerWidth = chart.element.clientWidth || chart.element.offsetWidth;\n    var containerHeight = chart.element.clientHeight;\n    if (chart.stockChart) {\n        containerWidth = chart.stockChart.availableSize.width;\n        containerHeight = chart.stockChart.availableSize.height;\n    }\n    var height = 450;\n    var marginHeight;\n    if (chart.getModuleName() === 'rangeNavigator') {\n        var range = chart;\n        var tooltipSpace = range.tooltip.enable ? 35 : 0;\n        var periodHeight = range.periodSelectorSettings.periods.length ?\n            range.periodSelectorSettings.height : 0;\n        marginHeight = range.margin.top + range.margin.bottom + tooltipSpace;\n        var labelSize = measureText('tempString', range.labelStyle, range.themeStyle.axisLabelFont).height;\n        var labelPadding = 15;\n        height = (chart.series.length ? (Browser.isDevice ? 80 : 120) : ((range.enableGrouping ? (40 + labelPadding + labelSize) : 40)\n            + marginHeight)) + periodHeight;\n        if (range.disableRangeSelector) {\n            height = periodHeight;\n        }\n        if (chart.stockChart && chart.stockChart.chart && chart.stockChart.chart.axisCollections[1].labelPosition === 'Outside') {\n            var padding = chart.stockChart.chart.axisCollections[1].labelPadding +\n                chart.stockChart.chart.axisCollections[1].lineStyle.width * 0.5;\n            chart.width = (chart.stockChart.availableSize.width -\n                (chart.stockChart.chart.axisCollections[1].maxLabelSize.width + padding)).toString();\n        }\n    }\n    chart.availableSize = new Size(stringToNumber(chart.width, containerWidth) || containerWidth || 600, stringToNumber(chart.height, containerHeight || height) || containerHeight || height);\n    if (chart.getModuleName() === 'chart') {\n        chart.scaleX = 1;\n        chart.scaleY = 1;\n    }\n}\n/**\n * Creates an SVG element for the specified chart or chart element.\n *\n * @param {Chart | AccumulationChart | RangeNavigator | Chart3D | CircularChart3D} chart - The chart or chart element for which to create the SVG element.\n * @returns {void}\n */\nexport function createSvg(chart) {\n    chart.canvasRender = new CanvasRenderer(chart.element.id);\n    chart.renderer = chart.enableCanvas ? chart.canvasRender : new SvgRenderer(chart.element.id);\n    calculateSize(chart);\n    if (chart.stockChart && chart.getModuleName() === 'chart') {\n        chart.svgObject = chart.stockChart.chartObject;\n    }\n    else if (chart.stockChart && chart.getModuleName() === 'rangeNavigator' && chart.stockChart.selectorObject) {\n        chart.svgObject = chart.stockChart.selectorObject;\n    }\n    else {\n        if (chart.enableCanvas) {\n            chart.svgObject = chart.renderer.createCanvas({\n                id: chart.element.id + '_canvas',\n                width: chart.availableSize.width,\n                height: chart.availableSize.height\n            });\n        }\n        else {\n            chart.svgObject = chart.renderer.createSvg({\n                id: chart.element.id + '_svg',\n                width: chart.availableSize.width,\n                height: chart.availableSize.height\n            });\n        }\n    }\n    if (chart.enableCanvas) {\n        chart.renderer.ctx.direction = chart.enableRtl ? 'rtl' : 'ltr';\n    }\n}\n/**\n * Gets the title text with specified style and width, and supports right-to-left rendering.\n *\n * @param {string} title - The title text.\n * @param {FontModel} style - The font style for the title.\n * @param {number} width - The width available for rendering the title.\n * @param {boolean} isRtlEnabled - Specifies whether right-to-left rendering is enabled.\n * @param {FontModel} [themeFontStyle] - The font style used for theme rendering.\n * @returns {string[]} An array of strings containing the title text with line breaks if needed.\n */\nexport function getTitle(title, style, width, isRtlEnabled, themeFontStyle) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style, isRtlEnabled, title.indexOf(' ') < 0 ? true : null, null, themeFontStyle);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style, isRtlEnabled, themeFontStyle));\n            break;\n        default:\n            titleCollection.push(title);\n            break;\n    }\n    return titleCollection;\n}\n/**\n * Calculates the x-coordinate position for rendering the title text within the specified rect.\n *\n * @param {Rect} rect - The rect within which the title text is to be rendered.\n * @param {FontModel} titleStyle - The font style used for rendering the title text.\n * @returns {number} The x-coordinate position for rendering the title text.\n */\nexport function titlePositionX(rect, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = rect.x;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = rect.x + rect.width / 2;\n    }\n    else {\n        positionX = rect.x + rect.width;\n    }\n    return positionX;\n}\n/**\n * Wraps the input text into multiple lines based on the specified maximum width and font style.\n *\n * @param {string} currentLabel - The text to be wrapped.\n * @param {number} maximumWidth - The maximum width allowed for each line of text.\n * @param {FontModel} font - The font style used for rendering the text.\n * @param {boolean} isRtlEnabled - Specifies whether right-to-left text direction is enabled.\n * @param {boolean} [wrapAnyWhere=false] - Indicates whether the text can be wrapped at any position.\n * @param {boolean} [clip=false] - Specifies whether text exceeding the maximum width should be clipped.\n * @param {FontModel} [themeFontStyle] - The font style used as the base for the text wrapping operation.\n * @param {number} [maximumLabelHeight] - The total height available for the wrapped text.\n * @returns {string[]} An array of strings representing the wrapped lines of text.\n */\nexport function textWrap(currentLabel, maximumWidth, font, isRtlEnabled, wrapAnyWhere, clip, themeFontStyle, maximumLabelHeight) {\n    if (wrapAnyWhere) {\n        return (textWrapAnyWhere(currentLabel, maximumWidth, font, themeFontStyle));\n    }\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    var lineHeight = measureText('chartMeasureText', font, themeFontStyle).height;\n    var textHeight = 0;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(label === '' ? '' : ' ' + text), font, themeFontStyle).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                textHeight += lineHeight;\n                if (maximumLabelHeight && textHeight > maximumLabelHeight) {\n                    labelCollection[labelCollection.length - 1] += '...';\n                    return labelCollection;\n                }\n                labelCollection.push(clip ? label : textTrim(maximumWidth, label, font, isRtlEnabled, themeFontStyle));\n                label = text;\n            }\n            else {\n                textHeight += lineHeight;\n                if (maximumLabelHeight && textHeight > maximumLabelHeight) {\n                    labelCollection[labelCollection.length - 1] += '...';\n                    return labelCollection;\n                }\n                labelCollection.push(clip ? text : textTrim(maximumWidth, text, font, isRtlEnabled, themeFontStyle));\n            }\n        }\n        if (label && i === len - 1) {\n            textHeight += lineHeight;\n            if (maximumLabelHeight && textHeight > maximumLabelHeight) {\n                labelCollection[labelCollection.length - 1] += '...';\n                return labelCollection;\n            }\n            labelCollection.push(clip ? label : textTrim(maximumWidth, label, font, isRtlEnabled, themeFontStyle));\n        }\n    }\n    return labelCollection;\n}\n/**\n * Wraps the input text into multiple lines, allowing wrapping at any position.\n *\n * @param {string} currentLabel - The text to be wrapped.\n * @param {number} maximumWidth - The maximum width allowed for each line of text.\n * @param {FontModel} font - The font style used for rendering the text.\n * @param {FontModel} [themeFontStyle] - The font style used as the base for the text wrapping operation.\n * @returns {string[]} An array of strings representing the wrapped lines of text.\n * @private\n */\nexport function textWrapAnyWhere(currentLabel, maximumWidth, font, themeFontStyle) {\n    var size = measureText(currentLabel, font, themeFontStyle).width;\n    var labelCollection = [];\n    if (size > maximumWidth) {\n        var label = '';\n        var startIndex = 0;\n        var labelIndex = 1;\n        while (labelIndex < currentLabel.length) {\n            label = currentLabel.substring(startIndex, labelIndex);\n            size = measureText(label, font, themeFontStyle).width;\n            if (size < maximumWidth) {\n                labelIndex++;\n            }\n            else if (size === maximumWidth) {\n                startIndex = labelIndex;\n                labelCollection.push(label);\n                labelIndex++;\n                label = '';\n            }\n            else if (size > maximumWidth) {\n                label = label.slice(0, -1);\n                startIndex = labelIndex - 1;\n                labelCollection.push(label);\n                label = '';\n            }\n        }\n        if (label.length > 0) {\n            labelCollection.push(label);\n        }\n    }\n    else {\n        labelCollection.push(currentLabel);\n    }\n    return labelCollection;\n}\n/**\n * Gets the Unicode text from the input string based on the provided regular expression.\n *\n * @param {string} text - The input string.\n * @param {RegExp} regexp - The regular expression pattern to match Unicode characters.\n * @returns {string} The Unicode text extracted from the input string.\n */\nexport function getUnicodeText(text, regexp) {\n    var title = text.replace(regexp, ' ');\n    var digit = text.match(regexp);\n    var digitSpecific = ' ';\n    var convertedText = ' ';\n    var k = 0;\n    var unicodeSub = {\n        '0': '\\u2080', '1': '\\u2081', '2': '\\u2082', '3': '\\u2083', '4': '\\u2084',\n        '5': '\\u2085', '6': '\\u2086', '7': '\\u2087', '8': '\\u2088', '9': '\\u2089'\n    };\n    var unicodeSup = {\n        '0': '\\u2070', '1': '\\u00B9', '2': '\\u00B2', '3': '\\u00B3', '4': '\\u2074',\n        '5': '\\u2075', '6': '\\u2076', '7': '\\u2077', '8': '\\u2078', '9': '\\u2079'\n    };\n    for (var i = 0; i <= title.length - 1; i++) {\n        if (title[i] === ' ') {\n            digitSpecific = (regexp === regSub) ? digit[k].replace(/~/g, '') : digit[k].replace(/\\^/g, '');\n            for (var j = 0; j < digitSpecific.length; j++) {\n                convertedText += (regexp === regSub) ? unicodeSub[digitSpecific[j]] : unicodeSup[digitSpecific[j]];\n            }\n            k++;\n        }\n        else {\n            convertedText += title[i];\n        }\n    }\n    return convertedText.trim();\n}\n/**\n * Resets the Blazor templates of the given control (Chart or AccumulationChart).\n *\n * @param {Chart | AccumulationChart} control - The control to reset Blazor templates for.\n * @returns {void}\n */\nexport function blazorTemplatesReset(control) {\n    for (var i = 0; i < control.annotations.length; i++) {\n        resetBlazorTemplate((control.element.id + '_Annotation_' + i).replace(/[^a-zA-Z0-9]/g, ''), 'ContentTemplate');\n    }\n    //This reset the tooltip templates\n    resetBlazorTemplate(control.element.id + '_tooltipparent_template' + '_blazorTemplate', 'Template');\n    //Datalabel templates reset\n    resetBlazorTemplate(control.element.id + '_DataLabel');\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar StackValues = /** @class */ (function () {\n    function StackValues(startValue, endValue) {\n        this.startValues = startValue;\n        this.endValues = endValue;\n    }\n    return StackValues;\n}());\nexport { StackValues };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, border.color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (border.width !== 0 && _this.stroke !== '') ? border.color === null ? '' : border.color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** @private */\nvar ImageOption = /** @class */ (function () {\n    function ImageOption(height, width, href, x, y, id, visibility, preserveAspectRatio) {\n        this.height = height;\n        this.width = width;\n        this.href = href;\n        this.x = x;\n        this.y = y;\n        this.id = id;\n        this.visibility = visibility;\n        this.preserveAspectRatio = preserveAspectRatio;\n    }\n    return ImageOption;\n}());\nexport { ImageOption };\n/** @private */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, border.color, opacity) || this;\n        _this.cy = cy;\n        _this.cx = cx;\n        _this.r = r;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/** @private */\nvar PolygonOption = /** @class */ (function () {\n    function PolygonOption(id, points, fill) {\n        this.id = id;\n        this.points = points;\n        this.fill = fill;\n    }\n    return PolygonOption;\n}());\nexport { PolygonOption };\n/** @private */\nvar ChartLocation = /** @class */ (function () {\n    function ChartLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ChartLocation;\n}());\nexport { ChartLocation };\n/** @private */\nvar LabelLocation = /** @class */ (function () {\n    function LabelLocation(x, y) {\n        this.x = 0;\n        this.y = 0;\n        this.x = x;\n        this.y = y;\n    }\n    return LabelLocation;\n}());\nexport { LabelLocation };\n/** @private */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nvar PointData = /** @class */ (function () {\n    function PointData(point, series, index) {\n        if (index === void 0) { index = 0; }\n        this.point = point;\n        this.series = series;\n        this.lierIndex = index;\n    }\n    return PointData;\n}());\nexport { PointData };\n/** @private */\nvar AccPointData = /** @class */ (function () {\n    function AccPointData(point, series, index) {\n        if (index === void 0) { index = 0; }\n        this.point = point;\n        this.series = series;\n        this.index = index;\n    }\n    return AccPointData;\n}());\nexport { AccPointData };\n/** @private */\nvar Point3D = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the Chart3DData class.\n     *\n     * @param {Chart3DPoint} point - The 3D point object.\n     * @param {Chart3DSeries} series - The 3D series object.\n     * @private\n     */\n    function Point3D(point, series) {\n        this.point = point;\n        this.series = series;\n    }\n    return Point3D;\n}());\nexport { Point3D };\n/** @private */\nvar ControlPoints = /** @class */ (function () {\n    function ControlPoints(controlPoint1, controlPoint2) {\n        this.controlPoint1 = controlPoint1;\n        this.controlPoint2 = controlPoint2;\n    }\n    return ControlPoints;\n}());\nexport { ControlPoints };\n/**\n * Gets the color from the range color setting model based on the specified value.\n *\n * @param {RangeColorSettingModel} colorMap - The range color setting model.\n * @param {number} value - The value for which to get the color.\n * @returns {string} - The color corresponding to the specified value.\n */\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbgColorValue;\n    if (Number(value) === colorMap.start) {\n        color = colorMap.colors[0];\n    }\n    else if (Number(value) === colorMap.end) {\n        color = colorMap.colors[colorMap.colors.length - 1];\n    }\n    else {\n        rbgColorValue = getGradientColor(Number(value), colorMap);\n        color = convertToHexCode(rbgColorValue);\n    }\n    return color;\n}\n/**\n * Gets the gradient color from the range color setting model based on the specified value.\n *\n * @param {number} value - The value for which to get the gradient color.\n * @param {RangeColorSettingModel} colorMap - The range color setting model.\n * @returns {ColorValue} - The gradient color corresponding to the specified value.\n */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.start;\n    var nextOffset = colorMap.end;\n    var percent = 0;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.colors.length <= 2) {\n        previousColor = colorMap.colors[0].charAt(0) === '#' ? colorMap.colors[0] : colorNameToHex(colorMap.colors[0]);\n        nextColor = colorMap.colors[colorMap.colors.length - 1].charAt(0) === '#' ?\n            colorMap.colors[colorMap.colors.length - 1] : colorNameToHex(colorMap.colors[colorMap.colors.length - 1]);\n    }\n    else {\n        previousColor = colorMap.colors[0].charAt(0) === '#' ? colorMap.colors[0] : colorNameToHex(colorMap.colors[0]);\n        nextColor = colorMap.colors[colorMap.colors.length - 1].charAt(0) === '#' ?\n            colorMap.colors[colorMap.colors.length - 1] : colorNameToHex(colorMap.colors[colorMap.colors.length - 1]);\n        var a = full / (colorMap.colors.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_2 = colorMap.colors.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_2; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.colors[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value <= splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\n/**\n * Calculates the color based on the percentage change between two values.\n *\n * @param {number} percent - The percentage change.\n * @param {string} previous - The color for the previous value.\n * @param {string} next - The color for the next value.\n * @returns {ColorValue} - The calculated color value.\n */\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\n/**\n * Calculates the percentage change between two values.\n *\n * @param {number} percent - The percentage to calculate.\n * @param {number} previous - The previous value.\n * @param {number} next - The next value.\n * @returns {number} - The calculated percentage change.\n */\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\n/**\n * Gets the text anchor based on the specified alignment and Right-to-Left setting.\n *\n * @param {Alignment} alignment - The alignment of the text.\n * @param {boolean} enableRtl - Specifies whether Right-to-Left is enabled.\n * @returns {string} - The text anchor value.\n */\nexport function getTextAnchor(alignment, enableRtl) {\n    switch (alignment) {\n        case 'Near':\n            return enableRtl ? 'end' : 'start';\n        case 'Far':\n            return enableRtl ? 'start' : 'end';\n        default:\n            return 'middle';\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}