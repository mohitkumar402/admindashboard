{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * AccumulationChart DataLabel module file\n */\nimport { extend, createElement, getValue, isNullOrUndefined, animationMode } from '@syncfusion/ej2-base';\nimport { Rect, Size, PathOption, measureText, TextOption } from '@syncfusion/ej2-svg-base';\nimport { ChartLocation, degreeToLocation, isOverlap, stringToNumber, getAngle, appendChildElement } from '../../common/utils/helper';\nimport { textTrim, subtractThickness, Thickness, getElement } from '../../common/utils/helper';\nimport { removeElement, RectOption, textElement, showTooltip } from '../../common/utils/helper';\nimport { colorNameToHex, convertHexToColor, containsRect, textWrap, CircleOption } from '../../common/utils/helper';\nimport { getSeriesFromIndex } from '../model/acc-base';\nimport { textRender } from '../../common/model/constants';\nimport { getFontStyle, createTemplate, measureElementRect, templateAnimate } from '../../common/utils/helper';\nimport { AccumulationBase } from './accumulation-base';\n/**\n * The `AccumulationDataLabel` module is used to render data labels for the Accumulation chart.\n */\nvar AccumulationDataLabel = /** @class */function (_super) {\n  __extends(AccumulationDataLabel, _super);\n  function AccumulationDataLabel(accumulation) {\n    var _this = _super.call(this, accumulation) || this;\n    _this.rightSideRenderingPoints = [];\n    _this.leftSideRenderingPoints = [];\n    _this.id = accumulation.element.id + '_datalabel_Series_';\n    return _this;\n  }\n  /**\n   * Method to get datalabel text location.\n   *\n   * @private\n   * @param {AccPoints} point - The data point for which to calculate the label text location.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n   * @param {Size} textSize - The size of the text to be displayed.\n   * @param {AccPoints[]} points - The array of data points in the series.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.getDataLabelPosition = function (point, dataLabel, textSize, points) {\n    var radius = this.isCircular() ? !this.isVariousRadius() ? this.accumulation.pieSeriesModule.labelRadius : this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point) : this.getLabelDistance(point, dataLabel);\n    //let radius: number = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n    if (this.accumulation.title) {\n      var titleSize = measureText(this.accumulation.title, this.accumulation.titleStyle, this.accumulation.themeStyle.datalabelFont);\n      this.titleRect = new Rect(this.accumulation.availableSize.width / 2 - titleSize.width / 2, this.accumulation.margin.top, titleSize.width, titleSize.height);\n    }\n    this.getLabelRegion(point, dataLabel.position, textSize, radius, this.marginValue);\n    point.labelAngle = point.midAngle;\n    point.labelPosition = dataLabel.position;\n    if (this.accumulation.enableSmartLabels) {\n      this.getSmartLabel(point, dataLabel, textSize, points);\n    }\n  };\n  /**\n   * Method to get datalabel bound.\n   */\n  AccumulationDataLabel.prototype.getLabelRegion = function (point, position, textSize, labelRadius, margin, endAngle) {\n    if (endAngle === void 0) {\n      endAngle = 0;\n    }\n    var labelAngle = endAngle || point.midAngle;\n    var space = 20;\n    var location = degreeToLocation(labelAngle, labelRadius, this.isCircular() ? this.center : this.getLabelLocation(point, position));\n    location.y = position === 'Inside' ? location.y - textSize.height / 2 : location.y;\n    location.x = position === 'Inside' ? location.x - textSize.width / 2 : location.x;\n    point.labelRegion = new Rect(location.x, location.y, textSize.width + margin * 2, textSize.height + margin * 2);\n    if (position === 'Outside') {\n      point.labelRegion.y -= point.labelRegion.height / 2;\n      if (labelAngle >= 90 && labelAngle <= 270) {\n        point.labelRegion.x -= point.labelRegion.width + space;\n      } else {\n        point.labelRegion.x += space;\n      }\n    }\n  };\n  /**\n   * Method to get data label collection.\n   *\n   * @param {AccPoints} point - The data point for which to calculate the label collection.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n   * @returns {void}\n   * @private\n   */\n  AccumulationDataLabel.prototype.calculateLabelCollection = function (point, dataLabel) {\n    if (point.argsData.template !== null) {\n      return null;\n    }\n    var position = point.labelPosition || dataLabel.position;\n    var labelRadius = this.isCircular() ? !this.isVariousRadius() ? this.accumulation.pieSeriesModule.labelRadius : this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point) : this.getLabelDistance(point, dataLabel);\n    var radius = !this.isVariousRadius() ? this.accumulation.pieSeriesModule.radius - this.accumulation.pieSeriesModule.innerRadius : this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point);\n    var location = degreeToLocation(point.midAngle, labelRadius, this.isCircular() ? this.center : this.getLabelLocation(point, position));\n    var padding = 20;\n    var maxWidth = dataLabel.maxWidth;\n    if (!maxWidth) {\n      if (position === 'Outside') {\n        maxWidth = this.isCircular() ? location.x >= this.center.x ? this.areaRect.x + this.areaRect.width - location.x : location.x - this.areaRect.x : location.x >= point.region.x ? this.areaRect.x + this.areaRect.width - location.x : location.x - this.areaRect.x;\n      } else {\n        maxWidth = this.isCircular() ? radius - padding : point.region.width;\n      }\n    }\n    if (point.label.indexOf('<br>') !== -1) {\n      point.labelCollection = point.label.split('<br>');\n    } else if (dataLabel.textWrap === 'Normal' && dataLabel.textOverflow === 'Ellipsis') {\n      point.labelCollection[0] = textTrim(maxWidth, point.label, point.argsData.font, this.accumulation.enableRtl, this.accumulation.themeStyle.datalabelFont);\n    } else if (dataLabel.textWrap === 'Wrap' || dataLabel.textWrap === 'AnyWhere') {\n      point.labelCollection = textWrap(point.label, maxWidth, point.argsData.font, this.accumulation.enableRtl, dataLabel.textWrap === 'AnyWhere', dataLabel.textOverflow === 'Clip', this.accumulation.themeStyle.datalabelFont);\n    } else {\n      point.labelCollection[0] = point.label;\n    }\n  };\n  /**\n   * To calculate label collection text size.\n   *\n   * @param {string[]} labelCollection - The collection of label texts.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n   * @returns {Size} - The size of the label text collection.\n   * @private\n   */\n  AccumulationDataLabel.prototype.getTextSize = function (labelCollection, dataLabel) {\n    var height = 0;\n    var font = dataLabel.font;\n    var width = dataLabel.maxWidth ? dataLabel.maxWidth : 0;\n    var textSize;\n    for (var i = 0; i < labelCollection.length; i++) {\n      textSize = measureText(labelCollection[i], font, this.accumulation.themeStyle.datalabelFont);\n      width = Math.max(textSize.width, width);\n      height += textSize.height;\n    }\n    if (dataLabel.textOverflow === 'Clip' && dataLabel.textWrap !== 'Normal' && dataLabel.maxWidth) {\n      width = dataLabel.maxWidth;\n    }\n    return new Size(width, height);\n  };\n  /**\n   * Method to get datalabel smart position.\n   *\n   * @param {AccPoints} point - The data point for which to calculate the label smart position.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n   * @param {Size} textSize - The size of the text.\n   * @param {AccPoints[]} points - The collection of data points.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.getSmartLabel = function (point, dataLabel, textSize, points) {\n    var circular = this.isCircular();\n    var labelRadius = circular ? this.radius : this.getLabelDistance(point, dataLabel);\n    var connectorLength = circular ? dataLabel.connectorStyle.length || '4%' : '0px';\n    labelRadius += stringToNumber(connectorLength, labelRadius);\n    var previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n    if (dataLabel.position === 'Inside') {\n      // `4` is padding adding to height and width of label region.\n      point.labelRegion.height -= 4;\n      point.labelRegion.width -= 4;\n      if (previousPoint && previousPoint.labelRegion && !dataLabel.enableRotation && (isOverlap(point.labelRegion, previousPoint.labelRegion) || this.isOverlapping(point, points)) || !circular && !containsRect(point.region, point.labelRegion)) {\n        point.labelPosition = 'Outside';\n        if (!circular) {\n          labelRadius = this.getLabelDistance(point, dataLabel);\n        }\n        this.calculateLabelCollection(point, dataLabel);\n        textSize = this.getTextSize(point.labelCollection, dataLabel);\n        textSize.height += 4; // 4 for calculation with padding for smart label shape\n        textSize.width += 4;\n        point.textSize = textSize;\n        this.getLabelRegion(point, point.labelPosition, textSize, labelRadius, this.marginValue);\n        previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n        if (previousPoint && (isOverlap(point.labelRegion, previousPoint.labelRegion) || this.isConnectorLineOverlapping(point, previousPoint))) {\n          this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n        }\n      }\n    } else {\n      if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion) || this.isOverlapping(point, points) || this.isConnectorLineOverlapping(point, previousPoint))) {\n        this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n      }\n    }\n    if (this.isOverlapping(point, points) && (this.accumulation.type === 'Pyramid' || this.accumulation.type === 'Funnel')) {\n      var position = 'OutsideLeft';\n      var space = 20;\n      var labelAngle = point.midAngle || 0;\n      var labelRadius_1 = circular ? this.radius : this.getLabelDistance(point, dataLabel);\n      var location_1 = degreeToLocation(labelAngle, -labelRadius_1, this.isCircular() ? this.center : this.getLabelLocation(point, position));\n      point.labelRegion = new Rect(location_1.x, location_1.y, textSize.width + this.marginValue * 2, textSize.height + this.marginValue * 2);\n      point.labelRegion.y -= point.labelRegion.height / 2;\n      point.labelRegion.x = point.labelRegion.x - space - point.labelRegion.width;\n      if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion) || this.isOverlapping(point, points) || this.isConnectorLineOverlapping(point, previousPoint))) {\n        this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius_1, textSize, this.marginValue);\n      }\n    }\n  };\n  /**\n   * To find trimmed datalabel tooltip needed.\n   *\n   * @param {Event} e - The move event.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @param {boolean} isTouch - Indicates if the interaction is touch-based.\n   * @returns {void}\n   * @private\n   */\n  AccumulationDataLabel.prototype.move = function (e, x, y, isTouch) {\n    var _this = this;\n    if (e.target.textContent.indexOf('...') > -1) {\n      var targetId = e.target.id.split(this.id);\n      if (targetId.length === 2) {\n        var seriesIndex = parseInt(targetId[1].split('_text_')[0], 10);\n        var pointIndex = parseInt(targetId[1].split('_text_')[1], 10);\n        if (!isNaN(seriesIndex) && !isNaN(pointIndex)) {\n          if (isTouch) {\n            removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n          }\n          var point = getSeriesFromIndex(seriesIndex, this.accumulation.visibleSeries).points[pointIndex];\n          showTooltip(point.text || point.y.toString(), x, y, this.areaRect.width, this.accumulation.element.id + '_EJ2_Datalabel_Tooltip', getElement(this.accumulation.element.id + '_Secondary_Element'), null, null, this.accumulation.initialClipRect);\n        }\n      }\n    } else {\n      removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n    }\n    if (isTouch) {\n      clearTimeout(this.clearTooltip);\n      this.clearTooltip = +setTimeout(function () {\n        removeElement(_this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n      }, 1000);\n    }\n  };\n  /**\n   * To find previous valid label point.\n   *\n   * @param {AccPoints[]} points - The array of accumulation points.\n   * @param {number} index - The index of the current point.\n   * @param {AccumulationLabelPosition} position - The position of the label.\n   * @returns {AccPoints} - Find the previous value of accumulation point.\n   */\n  AccumulationDataLabel.prototype.findPreviousPoint = function (points, index, position) {\n    var point = points[0];\n    for (var i = index - 1; i >= 0; i--) {\n      point = points[i];\n      if (point.visible && point.labelVisible && point.labelRegion && point.labelPosition === position) {\n        return point;\n      }\n    }\n    return null;\n  };\n  /**\n   * To find current point datalabel is overlapping with other points.\n   *\n   * @param {AccPoints} currentPoint - The current point.\n   * @param {AccPoints[]} points - The array of accumulation points.\n   * @returns {boolean} - It returns boolean value of overlapping.\n   */\n  AccumulationDataLabel.prototype.isOverlapping = function (currentPoint, points) {\n    for (var i = currentPoint.index - 1; i >= 0; i--) {\n      if (points[i].visible && points[i].labelVisible && points[i].labelRegion && currentPoint.labelRegion && currentPoint.labelVisible && isOverlap(currentPoint.labelRegion, points[i].labelRegion)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * To get text trimmed while exceeds the accumulation chart area.\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @param {Rect} rect - The area of the accumulation chart.\n   * @param {FontModel} font - The font settings.\n   * @param {string} position - The position of the data label.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.textTrimming = function (point, rect, font, position, dataLabel) {\n    if (isOverlap(point.labelRegion, rect)) {\n      var size = point.labelRegion.width;\n      if (position === 'Right') {\n        size = rect.x - point.labelRegion.x;\n      } else if (position === 'Left') {\n        size = point.labelRegion.x - (rect.x + rect.width);\n        if (size < 0) {\n          size += point.labelRegion.width;\n          point.labelRegion.x = rect.x + rect.width;\n        }\n      } else if (position === 'InsideRight') {\n        size = rect.x + rect.width - point.labelRegion.x;\n      } else if (position === 'InsideLeft') {\n        size = point.labelRegion.x + point.labelRegion.width - rect.x;\n        if (size < point.labelRegion.width) {\n          point.labelRegion.x = rect.x;\n        }\n      } else if (this.accumulation.enableSmartLabels) {\n        this.setPointVisibileFalse(point);\n      }\n      if (point.labelVisible && point.labelRegion) {\n        if (point.label.indexOf('<br>') !== -1) {\n          point.labelCollection = point.label.split('<br>');\n        } else if (size < point.labelRegion.width) {\n          if (dataLabel.textWrap === 'Normal' && dataLabel.textOverflow === 'Ellipsis') {\n            point.labelCollection[0] = textTrim(size - this.marginValue * 2, point.label, font, this.accumulation.enableRtl, this.accumulation.themeStyle.datalabelFont);\n          } else if (dataLabel.textWrap === 'Wrap' || dataLabel.textWrap === 'AnyWhere') {\n            point.labelCollection = textWrap(point.label, size - this.marginValue * 2, font, this.accumulation.enableRtl, dataLabel.textWrap === 'AnyWhere', dataLabel.textOverflow === 'Clip', this.accumulation.themeStyle.datalabelFont);\n          }\n          point.labelRegion.width = size;\n        }\n        for (var i = 0; i < point.labelCollection.length; i++) {\n          if (point.labelCollection[i].length === 3 && point.labelCollection[i].indexOf('...') > -1) {\n            this.setPointVisibileFalse(point);\n            break;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To set point label visible and region to disable.\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.setPointVisibileFalse = function (point) {\n    point.labelVisible = false;\n    point.labelRegion = null;\n  };\n  /**\n   * To set point label visible to enable.\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.setPointVisibleTrue = function (point) {\n    point.labelVisible = true;\n  };\n  /**\n   * To set datalabel angle position for outside labels.\n   *\n   * @param {AccPoints} previousPoint - The previous accumulation point.\n   * @param {AccPoints} point - The accumulation point.\n   * @param {number} border - The border size.\n   * @param {number} labelRadius - The radius for the labels.\n   * @param {Size} textsize - The size of the labels.\n   * @param {number} margin - The margin value.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.setOuterSmartLabel = function (previousPoint, point, border, labelRadius, textsize, margin) {\n    if (!this.isCircular()) {\n      this.setSmartLabelForSegments(point, previousPoint);\n    } else {\n      var labelAngle = this.getOverlappedAngle(previousPoint.labelRegion, point.labelRegion, point.midAngle, border * 2);\n      this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n      if (labelAngle > point.endAngle) {\n        labelAngle = point.midAngle;\n        //this.setPointVisibileFalse(point);\n      }\n      point.labelAngle = labelAngle;\n      while (point.labelVisible && (isOverlap(previousPoint.labelRegion, point.labelRegion) || labelAngle <= previousPoint.labelAngle || labelAngle <= point.midAngle * 0.9 || this.isConnectorLineOverlapping(point, previousPoint))) {\n        if (labelAngle > point.endAngle) {\n          //this.setPointVisibileFalse(point);\n          break;\n        }\n        point.labelAngle = labelAngle;\n        this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n        labelAngle += 0.1;\n      }\n    }\n  };\n  /**\n   * Sets smart label positions for funnel and pyramid series.\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @param {AccPoints} prevPoint - The previous point.\n   * @returns {void} setSmartLabelForSegments.\n   */\n  AccumulationDataLabel.prototype.setSmartLabelForSegments = function (point, prevPoint) {\n    var textRegion = point.labelRegion;\n    //let overlapWidth: number = prevPoint.labelRegion.x + prevPoint.labelRegion.width - textRegion.x;\n    var overlapHeight = this.accumulation.type === 'Funnel' ? prevPoint.labelRegion.y - (textRegion.y + textRegion.height) : point.labelRegion.y - (prevPoint.labelRegion.y + prevPoint.labelRegion.height);\n    if (overlapHeight < 0) {\n      point.labelRegion.y += this.accumulation.type === 'Funnel' ? overlapHeight : -overlapHeight;\n    }\n  };\n  /**\n   * To find connector line overlapping.\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @param {AccPoints} previous - The previous point.\n   * @returns {boolean} - To find connector line overlapping or not.\n   */\n  AccumulationDataLabel.prototype.isConnectorLineOverlapping = function (point, previous) {\n    var position;\n    if (!this.isCircular() && point.labelRegion.x < point.region.x) {\n      position = 'outsideLeft';\n    }\n    var start = this.getLabelLocation(point, position);\n    var end = new ChartLocation(0, 0);\n    this.getEdgeOfLabel(point.labelRegion, point.labelAngle, end, 0, point);\n    var previousstart = this.getLabelLocation(previous);\n    var previousend = new ChartLocation(0, 0);\n    this.getEdgeOfLabel(previous.labelRegion, previous.labelAngle, previousend, 0, point);\n    return this.isLineRectangleIntersect(start, end, point.labelRegion) || this.isLineRectangleIntersect(start, end, previous.labelRegion) || this.isLineRectangleIntersect(previousstart, previousend, point.labelRegion);\n  };\n  /**\n   * To find two rectangle intersect.\n   *\n   * @param {ChartLocation} line1 - The first line.\n   * @param {ChartLocation} line2 - The second line.\n   * @param {Rect} rect - The rectangle to check against.\n   * @returns {boolean} - To find line rectangle intersect value.\n   */\n  AccumulationDataLabel.prototype.isLineRectangleIntersect = function (line1, line2, rect) {\n    var rectPoints = [new ChartLocation(Math.round(rect.x), Math.round(rect.y)), new ChartLocation(Math.round(rect.x + rect.width), Math.round(rect.y)), new ChartLocation(Math.round(rect.x + rect.width), Math.round(rect.y + rect.height)), new ChartLocation(Math.round(rect.x), Math.round(rect.y + rect.height))];\n    line1.x = Math.round(line1.x);\n    line1.y = Math.round(line1.y);\n    line2.x = Math.round(line2.x);\n    line2.y = Math.round(line2.y);\n    for (var i = 0; i < rectPoints.length; i++) {\n      if (this.isLinesIntersect(line1, line2, rectPoints[i], rectPoints[(i + 1) % rectPoints.length])) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * To find two line intersect.\n   *\n   * @param {ChartLocation} point1 - The first point of the first line.\n   * @param {ChartLocation} point2 - The second point of the first line.\n   * @param {ChartLocation} point11 - The first point of the second line.\n   * @param {ChartLocation} point12 - The second point of the second line.\n   * @returns {boolean} - To find line intersect or not.\n   */\n  AccumulationDataLabel.prototype.isLinesIntersect = function (point1, point2, point11, point12) {\n    var a1 = point2.y - point1.y;\n    var b1 = point1.x - point2.x;\n    var c1 = a1 * point1.x + b1 * point1.y;\n    var a2 = point12.y - point11.y;\n    var b2 = point11.x - point12.x;\n    var c2 = a2 * point11.x + b2 * point11.y;\n    var delta = a1 * b2 - a2 * b1;\n    if (delta !== 0) {\n      var x = (b2 * c1 - b1 * c2) / delta;\n      var y = (a1 * c2 - a2 * c1) / delta;\n      var lies = Math.min(point1.x, point2.x) <= x && x <= Math.max(point1.x, point2.x);\n      lies = lies && Math.min(point1.y, point2.y) <= y && y <= Math.max(point1.y, point2.y);\n      lies = lies && Math.min(point11.x, point12.x) <= x && x <= Math.max(point11.x, point12.x);\n      lies = lies && Math.min(point11.y, point12.y) <= y && y <= Math.max(point11.y, point12.y);\n      return lies;\n    }\n    return false;\n  };\n  /**\n   * To get two rectangle overlapping angles.\n   *\n   * @param {Rect} first - The first rectangle.\n   * @param {Rect} second - The second rectangle.\n   * @param {number} angle - The angle.\n   * @param {number} padding - The padding.\n   * @returns {number} - Get overlapped angle.\n   */\n  AccumulationDataLabel.prototype.getOverlappedAngle = function (first, second, angle, padding) {\n    var x = first.x;\n    if (angle >= 90 && angle <= 270) {\n      second.y = first.y - (padding + second.height / 2);\n      x = first.x + first.width;\n    } else {\n      second.y = first.y + first.height + padding;\n    }\n    return getAngle(this.center, new ChartLocation(x, second.y));\n  };\n  /**\n   * To get connector line path.\n   *\n   * @param {Rect} label - The label.\n   * @param {AccPoints} point - The accumulation point.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n   * @param {number} end - The end.\n   * @returns {string} - Get connector line path.\n   */\n  AccumulationDataLabel.prototype.getConnectorPath = function (label, point, dataLabel, end) {\n    if (end === void 0) {\n      end = 0;\n    }\n    var connector = dataLabel.connectorStyle;\n    var labelRadius = this.isCircular() ? !this.isVariousRadius() ? this.labelRadius : this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point) : this.getLabelDistance(point, dataLabel);\n    //let labelRadius: number = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n    var start = this.getConnectorStartPoint(point, connector);\n    var labelAngle = this.accumulation.enableSmartLabels ? point.midAngle : end || point.midAngle;\n    var middle = new ChartLocation(0, 0);\n    var endPoint = this.getEdgeOfLabel(label, labelAngle, middle, connector.width, point);\n    if (connector.type === 'Curve') {\n      if (this.isCircular()) {\n        var r = labelRadius - (this.isVariousRadius() ? stringToNumber(point.sliceRadius, this.accumulation.pieSeriesModule.size / 2) : this.radius);\n        //let r: number = labelRadius - this.radius;\n        if (point.isLabelUpdated) {\n          middle = this.getPerpendicularDistance(start, point);\n        } else {\n          middle = degreeToLocation(labelAngle, labelRadius - r / 2, this.center);\n          if (point.labelPosition === 'Outside' && dataLabel.position === 'Inside') {\n            middle = degreeToLocation(labelAngle, labelRadius - r * 1.25, this.center);\n          }\n        }\n        return 'M ' + start.x + ' ' + start.y + ' Q ' + middle.x + ' ' + middle.y + ' ' + endPoint.x + ' ' + endPoint.y;\n      } else {\n        return this.getPolyLinePath(start, endPoint);\n      }\n    } else {\n      return 'M ' + start.x + ' ' + start.y + ' L ' + middle.x + ' ' + middle.y + ' L ' + endPoint.x + ' ' + endPoint.y;\n    }\n  };\n  /**\n   * Finds the curved path for funnel/pyramid data label connectors.\n   *\n   * @param {ChartLocation} start - The start location.\n   * @param {ChartLocation} end - The end location.\n   * @returns {string} - Get poly line path.\n   */\n  AccumulationDataLabel.prototype.getPolyLinePath = function (start, end) {\n    var controlPoints = [start, end];\n    if (start.y === end.y) {\n      return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y;\n    }\n    var path = 'M';\n    for (var i = 0; i <= 16; i++) {\n      var t = i / 16;\n      var points = this.getBezierPoint(t, controlPoints, 0, 2);\n      path += points.x + ',' + points.y;\n      if (i !== 16) {\n        path += ' L';\n      }\n    }\n    return path;\n  };\n  /**\n   * Finds the bezier point for funnel/pyramid data label connectors.\n   *\n   * @param {number} t - The parameter value.\n   * @param {ChartLocation[]} controlPoints - The control points for the bezier point.\n   * @param {number} index - The index of the point.\n   * @param {number} count - The total count of points.\n   * @returns {ChartLocation} - Get bazier point.\n   */\n  AccumulationDataLabel.prototype.getBezierPoint = function (t, controlPoints, index, count) {\n    if (count === 1) {\n      return controlPoints[index];\n    }\n    var p0 = this.getBezierPoint(t, controlPoints, index, count - 1);\n    var p1 = this.getBezierPoint(t, controlPoints, index + 1, count - 1);\n    var x = p0.x ? p0.x : p0.x;\n    var y = p0.y ? p0.y : p0.y;\n    var x1 = p1.x ? p1.x : p1.x;\n    var y1 = p1.y ? p1.y : p1.y;\n    var x2 = (1 - t) * x + t * x1;\n    var y2 = (1 - t) * y + t * y1;\n    if (p0.x) {\n      return {\n        x: x2,\n        y: y2\n      };\n    } else {\n      return {\n        x: x2,\n        y: y2\n      };\n    }\n  };\n  /**\n   * To get label edges based on the center and label rect position.\n   *\n   * @param {Rect} labelshape - The label shape.\n   * @param {number} angle - The angle of the label.\n   * @param {ChartLocation} middle - The middle point of the label.\n   * @param {number} border - The border value.\n   * @param {AccPoints} point - The accumulation point.\n   * @returns {ChartLocation} - Get label edge value.\n   */\n  AccumulationDataLabel.prototype.getEdgeOfLabel = function (labelshape, angle, middle, border, point) {\n    if (border === void 0) {\n      border = 1;\n    }\n    var edge = new ChartLocation(labelshape.x, labelshape.y);\n    var space = 10;\n    if (angle >= 90 && angle <= 270) {\n      edge.x += labelshape.width + border / 2 + space;\n      edge.y += labelshape.height / 2;\n      middle.x = edge.x + 10;\n      middle.y = edge.y;\n    } else if (point && point.region && point.region.x > point.labelRegion.x) {\n      edge.x += border * 2 + labelshape.width + space;\n      edge.y += labelshape.height / 2;\n      middle.x = edge.x + 10;\n      middle.y = edge.y;\n    } else {\n      edge.x -= space - border / 2;\n      edge.y += labelshape.height / 2;\n      middle.x = edge.x - 10;\n      middle.y = edge.y;\n    }\n    return edge;\n  };\n  /**\n   * Finds the distance between the label position and the edge/center of the funnel/pyramid.\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n   * @returns {number} - Get label distance.\n   */\n  AccumulationDataLabel.prototype.getLabelDistance = function (point, dataLabel) {\n    if (point.labelPosition && dataLabel.position !== point.labelPosition || dataLabel.connectorStyle.length && dataLabel.position === 'Outside') {\n      var length_1 = stringToNumber(dataLabel.connectorStyle.length || '70px', this.accumulation.initialClipRect.width);\n      if (length_1 < this.accumulation.initialClipRect.width) {\n        return length_1;\n      }\n    }\n    var position = point.labelPosition || dataLabel.position;\n    var series = this.accumulation.visibleSeries[0];\n    var extraSpace = (this.accumulation.initialClipRect.width - series.triangleSize.width) / 2;\n    var labelLocation;\n    switch (position) {\n      case 'Inside':\n        return 0;\n      case 'Outside':\n        labelLocation = point.symbolLocation.x + point.labelOffset.x;\n        return this.accumulation.initialClipRect.width - labelLocation - extraSpace;\n    }\n  };\n  /**\n   * Finds the label position / beginning of the connector(ouside funnel labels).\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @param {AccumulationLabelPosition | string} position - The data label position.\n   * @returns {ChartLocation} - Get label location.\n   */\n  AccumulationDataLabel.prototype.getLabelLocation = function (point, position) {\n    if (position === void 0) {\n      position = 'Outside';\n    }\n    if (this.accumulation.type !== 'Pie' && this.accumulation.series[0].funnelMode !== 'Trapezoidal') {\n      position = position === 'OutsideLeft' ? 'OutsideLeft' : point.labelPosition || position;\n      var location_2 = {\n        x: point.symbolLocation.x,\n        y: point.symbolLocation.y - point.labelOffset.y\n      };\n      switch (position) {\n        case 'Inside':\n          location_2.y = point.region.y + point.region.height / 2;\n          break;\n        case 'Outside':\n          location_2.x += point.labelOffset.x;\n          break;\n        case 'OutsideLeft':\n          location_2.x -= point.labelOffset.x;\n      }\n      return location_2;\n    } else if (this.accumulation.series[0].funnelMode === 'Trapezoidal' && this.accumulation.type === 'Funnel') {\n      var location_3 = {\n        x: point.symbolLocation.x,\n        y: point.symbolLocation.y\n      };\n      if (position === 'Outside') {\n        location_3.x = point.labelOffset.x;\n      }\n      return location_3;\n    } else {\n      //return degreeToLocation(point.midAngle, this.radius, this.center);\n      return degreeToLocation(point.midAngle, this.isVariousRadius() ? stringToNumber(point.sliceRadius, this.accumulation.pieSeriesModule.seriesRadius) : this.radius, this.center);\n    }\n  };\n  /**\n   * Finds the beginning of connector line.\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @param {ConnectorModel} connector - The connector line.\n   * @returns {ChartLocation} - Staring point of connector line.\n   */\n  AccumulationDataLabel.prototype.getConnectorStartPoint = function (point, connector) {\n    // return this.isCircular() ? degreeToLocation(point.midAngle, this.radius - connector.width, this.center) :\n    //     this.getLabelLocation(point);\n    var position;\n    if (!this.isCircular() && point.region.x > point.labelRegion.x) {\n      position = 'OutsideLeft';\n    }\n    return this.isCircular() ? degreeToLocation(point.midAngle, (this.isVariousRadius() ? stringToNumber(point.sliceRadius, this.accumulation.pieSeriesModule.seriesRadius) : this.radius) - connector.width, this.center) : this.getLabelLocation(point, position);\n  };\n  /**\n   * To find area rect based on margin, available size.\n   *\n   * @private\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.findAreaRect = function () {\n    this.areaRect = new Rect(0, 0, this.accumulation.availableSize.width, this.accumulation.availableSize.height);\n    var margin = this.accumulation.margin;\n    subtractThickness(this.areaRect, new Thickness(margin.left, margin.right, margin.top, margin.bottom));\n  };\n  /**\n   * To render the data labels from series points.\n   *\n   * @param {AccPoints} point - The point for which to render the data label.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n   * @param {Element} parent - The parent element to which the data labels are appended.\n   * @param {AccPoints[]} points - The collection of points in the series.\n   * @param {number} series - The index of the series.\n   * @param {HTMLElement} templateElement - The template element for the data label.\n   * @param {boolean} redraw - Indicates whether the data labels are being redrawn.\n   * @returns {void}\n   * @private\n   */\n  AccumulationDataLabel.prototype.renderDataLabel = function (point, dataLabel, parent, points, series, templateElement, redraw) {\n    var id = this.accumulation.element.id + '_datalabel_Series_' + series + '_';\n    var datalabelGroup = this.accumulation.renderer.createGroup({\n      id: id + 'g_' + point.index\n    });\n    var border = {\n      width: dataLabel.border.width,\n      color: dataLabel.border.color\n    };\n    var argsFont = extend({}, getValue('properties', dataLabel.font), null, true);\n    point.label = this.getDatalabelText(dataLabel.format, this.accumulation, point.originalText || point.y.toString());\n    var argsData = {\n      cancel: false,\n      name: textRender,\n      series: this.accumulation.visibleSeries[0],\n      point: point,\n      text: point.label,\n      border: border,\n      color: dataLabel.fill,\n      template: this.accumulation.enableHtmlSanitizer ? this.accumulation.sanitize(dataLabel.template) : dataLabel.template,\n      font: argsFont\n    };\n    this.accumulation.trigger(textRender, argsData);\n    point.argsData = argsData;\n    var isTemplate = argsData.template !== null;\n    point.labelVisible = !argsData.cancel;\n    point.text = point.label = argsData.text;\n    point.labelCollection = [];\n    this.marginValue = argsData.border.width ? 5 + argsData.border.width : 1;\n    var childElement = createElement('div', {\n      id: this.accumulation.element.id + '_Series_' + 0 + '_DataLabel_' + point.index,\n      styles: 'position: absolute;background-color:' + argsData.color + ';' + getFontStyle(dataLabel.font, this.accumulation.themeStyle.datalabelFont) + ';border:' + argsData.border.width + 'px solid ' + argsData.border.color + ';'\n    });\n    this.calculateLabelSize(isTemplate, childElement, point, points, argsData, datalabelGroup, id, dataLabel, redraw);\n  };\n  AccumulationDataLabel.prototype.getDatalabelText = function (labelFormat, chart, labelText) {\n    if (Number(labelText)) {\n      var customLabelFormat = labelFormat.match('{value}') !== null;\n      var format = chart.intl.getNumberFormat({\n        format: customLabelFormat ? '' : labelFormat,\n        useGrouping: chart.useGroupingSeparator\n      });\n      labelText = customLabelFormat ? labelFormat.replace('{value}', format(parseFloat(labelText))) : format(parseFloat(labelText));\n    }\n    return labelText;\n  };\n  /**\n   * To calculate label size.\n   *\n   * @param {boolean} isTemplate - Indicates whether the label is a template.\n   * @param {HTMLElement} childElement - The child element of the label.\n   * @param {AccPoints} point - The point associated with the label.\n   * @param {AccPoints[]} points - The collection of points.\n   * @param {IAccTextRenderEventArgs} argsData - The arguments data for text rendering.\n   * @param {Element} datalabelGroup - The group element for data labels.\n   * @param {string} id - The id of the label.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n   * @param {boolean} redraw - Indicates whether the labels are being redrawn.\n   * @param {ClientRect} clientRect - The client rectangle.\n   * @param {boolean} isReactCallback - Indicates whether a React callback is being used.\n   * @returns {void}\n   * @private\n   */\n  AccumulationDataLabel.prototype.calculateLabelSize = function (isTemplate, childElement, point, points, argsData, datalabelGroup, id, dataLabel, redraw, clientRect, isReactCallback) {\n    this.calculateLabelCollection(point, dataLabel);\n    var textSize = isTemplate ? isReactCallback ? {\n      width: clientRect.width,\n      height: clientRect.height\n    } : this.getTemplateSize(childElement, point, argsData, redraw, isTemplate, points, datalabelGroup, id, dataLabel) : this.getTextSize(point.labelCollection, dataLabel);\n    textSize.height += 4; // 4 for calculation with padding for smart label shape\n    textSize.width += 4;\n    point.textSize = textSize;\n    point.templateElement = childElement;\n    this.getDataLabelPosition(point, dataLabel, textSize, points);\n    if (point.labelRegion) {\n      this.correctLabelRegion(point.labelRegion, point.textSize);\n    }\n  };\n  /**\n   * To draw a data label.\n   *\n   * @param {AccumulationSeries} series - The series associated with the data label.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n   * @param {HTMLElement} parent - The parent element of the data labels.\n   * @param {HTMLElement} templateElement - The template element for the data label.\n   * @param {boolean} redraw - Indicates whether the data labels are being redrawn.\n   * @returns {void}\n   * @private\n   */\n  AccumulationDataLabel.prototype.drawDataLabels = function (series, dataLabel, parent, templateElement, redraw) {\n    var angle;\n    var degree;\n    var modifiedPoints = series.leftSidePoints.concat(series.rightSidePoints);\n    modifiedPoints.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    if (series.type === 'Pie' && this.accumulation.enableSmartLabels) {\n      this.extendedLabelsCalculation();\n    }\n    for (var _i = 0, modifiedPoints_1 = modifiedPoints; _i < modifiedPoints_1.length; _i++) {\n      var point = modifiedPoints_1[_i];\n      if (!isNullOrUndefined(point.argsData) && !isNullOrUndefined(point.y)) {\n        this.finalizeDatalabels(point, modifiedPoints, dataLabel);\n        var pointElement = document.getElementById(this.accumulation.element.id + '_Series_0_Point_' + point.index);\n        var id = this.accumulation.element.id + '_datalabel_Series_' + 0 + '_';\n        var datalabelGroup = this.accumulation.renderer.createGroup({\n          id: id + 'g_' + point.index\n        });\n        datalabelGroup.setAttribute('aria-hidden', 'true');\n        var dataLabelElement = void 0;\n        var location_4 = void 0;\n        var element = void 0;\n        if (point.visible && point.labelVisible) {\n          angle = degree = dataLabel.angle;\n          if (point.argsData.template) {\n            this.setTemplateStyle(point.templateElement, point, templateElement, dataLabel.font.color, point.color, redraw);\n          } else {\n            location_4 = new ChartLocation(point.labelRegion.x + this.marginValue, point.labelRegion.y + point.textSize.height * 3 / (point.labelCollection.length * 4) + this.marginValue);\n            element = getElement(id + 'shape_' + point.index);\n            var startLocation = element ? new ChartLocation(+element.getAttribute('x'), +element.getAttribute('y')) : null;\n            var textWidth = point.textSize.width;\n            if (dataLabel.enableRotation) {\n              if (angle === 0) {\n                if (point.labelPosition === 'Outside') {\n                  degree = 0;\n                } else if (point.midAngle >= 90 && point.midAngle <= 260) {\n                  degree = point.midAngle + 180;\n                } else {\n                  degree = point.midAngle;\n                }\n              } else {\n                degree = angle > 360 ? angle - 360 : angle < -360 ? angle + 360 : angle;\n              }\n            } else {\n              degree = 0;\n            }\n            var rotate = 'rotate(' + degree + ',' + (location_4.x + textWidth / 2) + ',' + location_4.y + ')';\n            point.transform = rotate;\n            dataLabelElement = this.accumulation.renderer.drawRectangle(new RectOption(id + 'shape_' + point.index, point.argsData.color, point.argsData.border, 1, point.labelRegion, dataLabel.rx, dataLabel.ry, rotate, series.dataLabel.border.dashArray));\n            appendChildElement(false, datalabelGroup, dataLabelElement, redraw, true, 'x', 'y', startLocation, null, false, false, null, this.accumulation.duration);\n            textElement(this.accumulation.renderer, new TextOption(id + 'text_' + point.index, location_4.x, location_4.y, this.accumulation.enableRtl ? 'end' : 'start', point.labelCollection, rotate, 'auto', degree), point.argsData.font, point.argsData.font.color || this.getSaturatedColor(point, point.argsData.color), datalabelGroup, false, redraw, true, false, this.accumulation.duration, null, null, null, null, true, this.accumulation.themeStyle.datalabelFont);\n            element = null;\n          }\n          if (pointElement && this.accumulation.highlightMode !== 'None') {\n            datalabelGroup.setAttribute('class', pointElement.getAttribute('class') ? pointElement.getAttribute('class') : '');\n            for (var i = 0; i < datalabelGroup.children.length; i++) {\n              var existing = document.getElementById(datalabelGroup.children[i].id);\n              if (existing) {\n                datalabelGroup.children[i].style.opacity = existing.style.opacity;\n              }\n            }\n          }\n          if (this.accumulation.accumulationLegendModule && this.accumulation.legendSettings.visible && !this.accumulation.redraw && (dataLabel.position === 'Outside' || this.accumulation.enableSmartLabels)) {\n            this.accumulation.visibleSeries[0].findMaxBounds(this.accumulation.visibleSeries[0].labelBound, point.labelRegion);\n          }\n          if (point.labelPosition === 'Outside') {\n            var element_1 = getElement(id + 'connector_' + point.index);\n            var previousDirection = element_1 ? element_1.getAttribute('d') : '';\n            var pathElement = this.accumulation.renderer.drawPath(new PathOption(id + 'connector_' + point.index, 'transparent', dataLabel.connectorStyle.width, dataLabel.connectorStyle.color || point.color, 1, dataLabel.connectorStyle.dashArray, this.getConnectorPath(extend({}, point.labelRegion, null, true), point, dataLabel, point.labelAngle)));\n            appendChildElement(false, datalabelGroup, pathElement, redraw, true, null, null, null, previousDirection, false, false, null, this.accumulation.duration);\n          }\n          appendChildElement(false, parent, datalabelGroup, redraw);\n        } else if (getElement(datalabelGroup.id)) {\n          getElement(datalabelGroup.id).parentNode.removeChild(getElement(datalabelGroup.id));\n        }\n      }\n    }\n    if (this.accumulation.type === 'Pie' && dataLabel.textWrap === 'Normal' && dataLabel.textOverflow === 'Clip') {\n      this.dataLabelClipPath(dataLabel, parent);\n    }\n  };\n  /**\n   * To calculate data label clip path.\n   *\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n   * @param {HTMLElement} parent - The parent element of the data labels.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.dataLabelClipPath = function (dataLabel, parent) {\n    var id = this.accumulation.element.id + '_datalabel_Series_' + 0 + '_';\n    var clippath = this.accumulation.renderer.createClipPath({\n      id: id + 'clipPath'\n    });\n    var clipRect;\n    var radius = this.accumulation.pieSeriesModule.pieBaseRadius;\n    if (dataLabel.position === 'Inside') {\n      clipRect = this.accumulation.renderer.drawCircle(new CircleOption(id + 'clipPath_rect', 'transparent', {\n        width: 0\n      }, 0, this.center.x, this.center.y, radius));\n    } else if (dataLabel.maxWidth) {\n      var x = this.center.x - radius - stringToNumber(dataLabel.connectorStyle.length || '4%', radius) - dataLabel.maxWidth;\n      var y = this.center.y - radius - stringToNumber(dataLabel.connectorStyle.length || '4%', radius) - dataLabel.maxWidth;\n      var height = (radius + stringToNumber(dataLabel.connectorStyle.length || '4%', radius) + dataLabel.maxWidth) * 2;\n      var width = height;\n      if (this.accumulation.legendSettings.visible) {\n        var legendModule = this.accumulation.accumulationLegendModule;\n        if (legendModule.position === 'Left') {\n          width = legendModule.legendBounds.x + legendModule.legendBounds.width - x > 0 ? width - (legendModule.legendBounds.width - x) : width;\n          x = legendModule.legendBounds.x + legendModule.legendBounds.width < x ? x : legendModule.legendBounds.x + legendModule.legendBounds.width;\n        } else if (legendModule.position === 'Right') {\n          width = x + width - legendModule.legendBounds.x > 0 ? width - (x + width - legendModule.legendBounds.x) : width;\n        }\n      }\n      clipRect = this.accumulation.renderer.drawRectangle(new RectOption(id + 'clipPath_rect', 'transparent', {\n        width: 0\n      }, 0, new Rect(x, y, height, width), 0, 0));\n    }\n    if (dataLabel.position === 'Inside' || dataLabel.maxWidth) {\n      clippath.appendChild(clipRect);\n      appendChildElement(false, this.accumulation.svgObject, clippath);\n      parent.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n    }\n  };\n  /**\n   * In this method datalabels region checked with legebdBounds and areaBounds.\n   * Trimming of datalabel and point's visibility again changed here.\n   *\n   * @param {AccPoints} point - Current point in which trimming and visibility to be checked.\n   * @param {AccPoints[]} points - Finalized points.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - Datalabel model.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.finalizeDatalabels = function (point, points, dataLabel) {\n    if (this.isOverlapping(point, points) || this.titleRect && point.labelRegion && isOverlap(point.labelRegion, this.titleRect)) {\n      if (this.isCircular() && point.labelPosition === 'Outside' && this.accumulation.enableSmartLabels) {\n        this.setPointVisibileFalse(point);\n      }\n    }\n    if (this.accumulation.accumulationLegendModule && this.accumulation.legendSettings.visible && point.labelVisible && point.labelRegion && (!dataLabel.maxWidth ? dataLabel.textOverflow === 'Clip' ? dataLabel.textWrap !== 'Normal' : true : false)) {\n      var rect = this.accumulation.accumulationLegendModule.legendBounds;\n      if (this.accumulation.visibleSeries[0].type !== 'Pie' && this.accumulation.legendSettings.position === 'Left' && dataLabel.position === 'Outside') {\n        point.labelRegion.x = point.labelRegion.x + rect.width;\n      }\n      var padding = this.accumulation.legendSettings.border.width / 2;\n      this.textTrimming(point, new Rect(rect.x - padding, rect.y - padding, rect.width + 2 * padding, rect.height + 2 * padding), dataLabel.font, this.accumulation.accumulationLegendModule.position, dataLabel);\n    }\n    if (point.labelVisible && point.labelRegion && (!dataLabel.maxWidth ? dataLabel.textOverflow === 'Clip' ? dataLabel.textWrap !== 'Normal' : true : false)) {\n      var position = this.isCircular() ? point.labelRegion.x >= this.center.x ? 'InsideRight' : 'InsideLeft' : point.labelRegion.x >= point.region.x ? 'InsideRight' : 'InsideLeft';\n      this.textTrimming(point, this.areaRect, dataLabel.font, position, dataLabel);\n    }\n    if (point.labelVisible && point.labelRegion && !dataLabel.maxWidth && dataLabel.textOverflow !== 'Clip' && this.accumulation.enableSmartLabels && (point.labelRegion.y + point.labelRegion.height / 2 > this.areaRect.y + this.areaRect.height || point.labelRegion.y < this.areaRect.y || point.labelRegion.x < this.areaRect.x || point.labelRegion.x + point.labelRegion.width > this.areaRect.x + this.areaRect.width)) {\n      this.setPointVisibileFalse(point);\n    }\n  };\n  /**\n   * To find the template element size.\n   *\n   * @param {HTMLElement} element - To get a template element.\n   * @param {AccPoints} point - The accumulation point for the template.\n   * @param {IAccTextRenderEventArgs} argsData - The arguments for the accumulation points.\n   * @param {boolean} redraw - Indicates whether to redraw the template.\n   * @param {boolean} isTemplate - Indicates whether the element is a template.\n   * @param {AccPoints[]} points - The accumulation points for the template.\n   * @param {Element} datalabelGroup - The group element for the data labels.\n   * @param {string} id - The identifier for the template.\n   * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n   * @returns {Size} - The size of the template.\n   */\n  AccumulationDataLabel.prototype.getTemplateSize = function (element, point, argsData, redraw, isTemplate, points, datalabelGroup, id, dataLabel) {\n    element = createTemplate(element, point.index, argsData.template, this.accumulation, point, this.accumulation.visibleSeries[0], this.accumulation.element.id + '_DataLabel', 0, argsData, isTemplate, points, datalabelGroup, id, dataLabel, redraw);\n    var clientRect = measureElementRect(element, redraw);\n    return {\n      width: clientRect.width,\n      height: clientRect.height\n    };\n  };\n  /**\n   * To set the template element style.\n   *\n   * @param {HTMLElement} childElement - The child element of the template.\n   * @param {AccPoints} point - The point data for the template.\n   * @param {Element} parent - The parent element of the template.\n   * @param {string} labelColor - The color of the label in the template.\n   * @param {string} fill - The fill color of the template.\n   * @param {boolean} redraw - Indicates whether to redraw the template.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.setTemplateStyle = function (childElement, point, parent, labelColor, fill, redraw) {\n    childElement.style.left = point.labelRegion.x + 'px';\n    childElement.style.top = point.labelRegion.y + 'px';\n    childElement.style.color = labelColor || this.getSaturatedColor(point, point.labelPosition === 'Inside' ? fill : this.getLabelBackground(point));\n    if (this.accumulation.isBlazor) {\n      var position = this.isCircular() ? point.labelRegion.x >= this.center.x ? 'InsideRight' : 'InsideLeft' : point.labelRegion.x >= point.region.x ? 'InsideRight' : 'InsideLeft';\n      if (position === 'InsideRight') {\n        childElement.style.transform = 'translate(0%, -50%)';\n      } else {\n        childElement.style.transform = 'translate(-100%, -50%)';\n      }\n    }\n    if (childElement.childElementCount) {\n      appendChildElement(false, parent, childElement, redraw, true, 'left', 'top');\n      this.doTemplateAnimation(this.accumulation, childElement);\n    }\n  };\n  /**\n   * To find saturated color for datalabel\n   *\n   * @param {AccPoints} point - The accumulation point.\n   * @param {string} color - The original color.\n   * @returns {string} - Get a saturated color.\n   */\n  AccumulationDataLabel.prototype.getSaturatedColor = function (point, color) {\n    var saturatedColor;\n    if (this.marginValue >= 1) {\n      saturatedColor = color === 'transparent' ? this.getLabelBackground(point) : color;\n    } else {\n      saturatedColor = this.getLabelBackground(point);\n    }\n    saturatedColor = saturatedColor === 'transparent' ? this.accumulation.theme.indexOf('Dark') > -1 || this.accumulation.theme.indexOf('HighContrast') > -1 ? 'black' : 'white' : saturatedColor;\n    var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n    var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n    return this.accumulation.theme === 'Bootstrap5' ? '#212529' : this.accumulation.theme === 'Bootstrap5Dark' ? '#DEE2E6' : contrast >= 128 ? this.accumulation.theme.indexOf('Tailwind3') > -1 ? '#111827' : 'black' : this.accumulation.theme.indexOf('Tailwind3') > -1 ? '#FFFFFF' : 'white';\n  };\n  /**\n   * Animates the data label template.\n   *\n   * @param {AccumulationChart} accumulation - The accumulation chart control.\n   * @param {Element} element - The element to animate.\n   * @returns {void}\n   * @private\n   */\n  AccumulationDataLabel.prototype.doTemplateAnimation = function (accumulation, element) {\n    var series = accumulation.visibleSeries[0];\n    var delay = series.animation.delay + series.animation.duration;\n    if ((series.animation.enable && animationMode !== 'Disable' || animationMode === 'Enable') && accumulation.animateSeries) {\n      element.style.visibility = 'hidden';\n      templateAnimate(element, delay, 200, 'ZoomIn');\n    }\n  };\n  /**\n   * To find background color for the datalabel.\n   *\n   * @param {AccPoints} point - The data point for which to determine the background color.\n   * @returns {string} - The background color for the data label.\n   */\n  AccumulationDataLabel.prototype.getLabelBackground = function (point) {\n    return point.labelPosition === 'Outside' ? this.accumulation.background || this.accumulation.themeStyle.background : !point.y ? this.accumulation.theme.indexOf('dark') ? 'white' : 'black' : point.color;\n  };\n  /**\n   * To correct the padding between datalabel regions.\n   *\n   * @param {Rect} labelRegion - The region occupied by the data label.\n   * @param {Size} textSize - The size of the text within the data label.\n   * @param {number} padding - The padding value to adjust the spacing.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.correctLabelRegion = function (labelRegion, textSize, padding) {\n    if (padding === void 0) {\n      padding = 4;\n    }\n    labelRegion.height -= padding;\n    labelRegion.width -= padding;\n    labelRegion.x += padding / 2;\n    labelRegion.y += padding / 2;\n    textSize.height -= padding;\n    textSize.width -= padding;\n  };\n  /**\n   * To get the dataLabel module name.\n   *\n   * @returns {string} - Returns the module name.\n   */\n  AccumulationDataLabel.prototype.getModuleName = function () {\n    return 'AccumulationDataLabel';\n  };\n  /**\n   * To destroy the data label.\n   *\n   * @returns {void}\n   * @private\n   */\n  AccumulationDataLabel.prototype.destroy = function () {\n    /**\n     * Destroy method performed here.\n     */\n  };\n  //calculation for placing labels smartly\n  AccumulationDataLabel.prototype.extendedLabelsCalculation = function () {\n    var _this = this;\n    var series = this.accumulation.series[0];\n    series.rightSidePoints.forEach(function (point, index, halfSidePoints) {\n      point.initialLabelRegion = point.labelRegion;\n      point.isLabelUpdated = 0;\n      _this.skipPoints(point, halfSidePoints, index);\n    });\n    series.leftSidePoints.forEach(function (point, index, halfSidePoints) {\n      point.initialLabelRegion = point.labelRegion;\n      point.isLabelUpdated = 0;\n      _this.skipPoints(point, halfSidePoints, index);\n    });\n    this.arrangeLeftSidePoints(series);\n    this.isIncreaseAngle = false;\n    this.arrangeRightSidePoints(series);\n  };\n  /**\n   * Rightside points alignments calculation.\n   *\n   * @param {AccumulationSeries} series - To get a proper series.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.arrangeRightSidePoints = function (series) {\n    var startFresh;\n    var angleChanged;\n    var rightSideRenderPoints = series.rightSidePoints.filter(function (point) {\n      return point.labelVisible && point.labelPosition === 'Outside';\n    });\n    this.rightSideRenderingPoints = rightSideRenderPoints;\n    var checkAngle;\n    var currentPoint;\n    var lastPoint = rightSideRenderPoints[rightSideRenderPoints.length - 1];\n    var nextPoint;\n    if (lastPoint) {\n      if (lastPoint.labelAngle > 90 && lastPoint.labelAngle < 270) {\n        this.isIncreaseAngle = true;\n        this.changeLabelAngle(lastPoint, 89);\n      }\n    }\n    /**\n     * Right side points arranged from last point.\n     * A point checked with successive points for overlapping.\n     * If that is overlapped, its label angle is decreased and placing in optimal position\n     * If one point's angle is decreased, its previous points in the half side points also decreased until it reaced optimum position.\n     * When decreasing angle falls beyond 270, label angle increased.\n     * If one point's angle is increased, its successive points in that half point also increased until it reaced optimum position.\n     */\n    for (var i = rightSideRenderPoints.length - 1; i >= 0; i--) {\n      currentPoint = rightSideRenderPoints[i];\n      nextPoint = rightSideRenderPoints[i + 1];\n      // A point checked for overlapping, label visibility\n      if (this.isOverlapWithNext(currentPoint, rightSideRenderPoints, i) && currentPoint.labelVisible || !(currentPoint.labelAngle <= 90 || currentPoint.labelAngle >= 270)) {\n        checkAngle = lastPoint.labelAngle + 10;\n        angleChanged = true;\n        //If last's point change angle in beyond the limit, stop the increasing angle and do decrease the angle.\n        if (startFresh) {\n          this.isIncreaseAngle = false;\n        } else if (checkAngle > 90 && checkAngle < 270 && nextPoint.isLabelUpdated) {\n          this.isIncreaseAngle = true;\n        }\n        if (!this.isIncreaseAngle) {\n          for (var k = i + 1; k < rightSideRenderPoints.length; k++) {\n            this.increaseAngle(rightSideRenderPoints[k - 1], rightSideRenderPoints[k], series, true);\n          }\n        } else {\n          for (var k = i + 1; k > 0; k--) {\n            this.decreaseAngle(rightSideRenderPoints[k], rightSideRenderPoints[k - 1], series, true);\n          }\n        }\n      } else {\n        //If a point did not overlapped with previous points, increase the angle always for right side points.\n        if (angleChanged && nextPoint && !nextPoint.isLabelUpdated) {\n          startFresh = true;\n        }\n      }\n    }\n  };\n  /**\n   * Leftside points alignments calculation.\n   *\n   * @param {AccumulationSeries} series - To get a proper series.\n   * @returns {void}\n   */\n  AccumulationDataLabel.prototype.arrangeLeftSidePoints = function (series) {\n    var _this = this;\n    var leftSideRenderPoints = series.leftSidePoints.filter(function (point) {\n      return point.labelVisible && point.labelPosition === 'Outside';\n    });\n    this.leftSideRenderingPoints = leftSideRenderPoints;\n    var previousPoint;\n    var currentPoint;\n    var angleChanged;\n    var startFresh;\n    /**\n     * Left side points arranged from first point.\n     * A point checked with previous points for overlapping.\n     * If that is overlapped, its label angle is decreased and placing in optimal position\n     * If one point's angle is decreased, its previous points in the half side points also decreased until it reaced optimum position.\n     * When decreasing angle falls beyond 90, label angle increased.\n     * If one point's angle is increased, its successive points in that half point also increased until it reaced optimum position.\n     */\n    for (var i = 0; i < leftSideRenderPoints.length; i++) {\n      currentPoint = leftSideRenderPoints[i];\n      previousPoint = leftSideRenderPoints[i - 1];\n      // A point checked\n      if (this.isOverlapWithPrevious(currentPoint, leftSideRenderPoints, i) && currentPoint.labelVisible || !(currentPoint.labelAngle < 270)) {\n        angleChanged = true;\n        if (startFresh) {\n          this.isIncreaseAngle = false;\n        }\n        if (!this.isIncreaseAngle) {\n          for (var k = i; k > 0; k--) {\n            this.decreaseAngle(leftSideRenderPoints[k], leftSideRenderPoints[k - 1], series, false);\n            leftSideRenderPoints.filter(function (point, index) {\n              if (point.isLabelUpdated && leftSideRenderPoints[index].labelAngle - 10 < 100) {\n                _this.isIncreaseAngle = true;\n              }\n            });\n          }\n        } else {\n          for (var k = i; k < leftSideRenderPoints.length; k++) {\n            this.increaseAngle(leftSideRenderPoints[k - 1], leftSideRenderPoints[k], series, false);\n          }\n        }\n      } else {\n        if (angleChanged && previousPoint && previousPoint.isLabelUpdated) {\n          startFresh = true;\n        }\n      }\n    }\n  };\n  AccumulationDataLabel.prototype.decreaseAngle = function (currentPoint, previousPoint, series, isRightSide) {\n    if (isNullOrUndefined(currentPoint) || isNullOrUndefined(previousPoint)) {\n      return null;\n    }\n    var count = 1;\n    if (isRightSide) {\n      while (isOverlap(currentPoint.labelRegion, previousPoint.labelRegion) || !this.isVariousRadius() && !(previousPoint.labelRegion.height + previousPoint.labelRegion.y < currentPoint.labelRegion.y)) {\n        var newAngle = previousPoint.midAngle - count;\n        if (newAngle < 0) {\n          newAngle = 360 + newAngle;\n        }\n        if (newAngle <= 270 && newAngle >= 90) {\n          newAngle = 270;\n          this.isIncreaseAngle = true;\n          break;\n        }\n        this.changeLabelAngle(previousPoint, newAngle);\n        count++;\n      }\n    } else {\n      if (currentPoint.labelAngle > 270) {\n        this.changeLabelAngle(currentPoint, 270);\n        previousPoint.labelAngle = 270;\n      }\n      while (isOverlap(currentPoint.labelRegion, previousPoint.labelRegion) || !this.isVariousRadius() && currentPoint.labelRegion.y + currentPoint.labelRegion.height > previousPoint.labelRegion.y) {\n        var newAngle = previousPoint.midAngle - count;\n        if (!(newAngle <= 270 && newAngle >= 90)) {\n          newAngle = 90;\n          this.isIncreaseAngle = true;\n          break;\n        }\n        this.changeLabelAngle(previousPoint, newAngle);\n        if (isOverlap(currentPoint.labelRegion, previousPoint.labelRegion) && !series.leftSidePoints.indexOf(previousPoint) && newAngle - 1 < 90 && newAngle - 1 > 270) {\n          this.changeLabelAngle(currentPoint, currentPoint.labelAngle + 1);\n          this.arrangeLeftSidePoints(series);\n          break;\n        }\n        count++;\n      }\n    }\n  };\n  AccumulationDataLabel.prototype.increaseAngle = function (currentPoint, nextPoint, series, isRightSide) {\n    if (isNullOrUndefined(currentPoint) || isNullOrUndefined(nextPoint)) {\n      return null;\n    }\n    var count = 1;\n    if (isRightSide) {\n      while (isOverlap(currentPoint.labelRegion, nextPoint.labelRegion) || !this.isVariousRadius() && !(currentPoint.labelRegion.y + currentPoint.labelRegion.height < nextPoint.labelRegion.y)) {\n        var newAngle = nextPoint.midAngle + count;\n        if (newAngle < 270 && newAngle > 90) {\n          newAngle = 90;\n          this.isIncreaseAngle = true;\n          break;\n        }\n        this.changeLabelAngle(nextPoint, newAngle);\n        if (isOverlap(currentPoint.labelRegion, nextPoint.labelRegion) && newAngle + 1 > 90 && newAngle + 1 < 270 && this.rightSideRenderingPoints.indexOf(nextPoint) === this.rightSideRenderingPoints.length - 1) {\n          this.changeLabelAngle(currentPoint, currentPoint.labelAngle - 1);\n          nextPoint.labelRegion = nextPoint.initialLabelRegion;\n          this.arrangeRightSidePoints(series);\n          break;\n        }\n        if (count > 360) {\n          break;\n        }\n        count++;\n      }\n    } else {\n      while (isOverlap(currentPoint.labelRegion, nextPoint.labelRegion) || !this.isVariousRadius() && currentPoint.labelRegion.y < nextPoint.labelRegion.y + nextPoint.labelRegion.height) {\n        var newAngle = nextPoint.midAngle + count;\n        if (!(newAngle < 270 && newAngle > 90)) {\n          newAngle = 270;\n          this.isIncreaseAngle = false;\n          break;\n        }\n        this.changeLabelAngle(nextPoint, newAngle);\n        if (count > 360) {\n          break;\n        }\n        count++;\n      }\n    }\n  };\n  AccumulationDataLabel.prototype.changeLabelAngle = function (currentPoint, newAngle) {\n    var dataLabel = this.accumulation.series[0].dataLabel;\n    var variableR;\n    if (this.isVariousRadius()) {\n      variableR = this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], currentPoint);\n    }\n    //padding 10px is added to label radius for increasing the angle and avoid congestion.\n    var labelRadius = currentPoint.labelPosition === 'Outside' && this.accumulation.enableSmartLabels && dataLabel.position === 'Inside' ? this.radius + stringToNumber(dataLabel.connectorStyle.length || '4%', this.accumulation.pieSeriesModule.size / 2) : !this.isVariousRadius() ? this.accumulation.pieSeriesModule.labelRadius + 10 : variableR;\n    var radius = !this.isVariousRadius() ? labelRadius : variableR;\n    this.getLabelRegion(currentPoint, 'Outside', currentPoint.textSize, radius, this.marginValue, newAngle);\n    currentPoint.isLabelUpdated = 1;\n    currentPoint.labelAngle = newAngle;\n  };\n  AccumulationDataLabel.prototype.isOverlapWithPrevious = function (currentPoint, points, currentPointIndex) {\n    for (var i = 0; i < currentPointIndex; i++) {\n      if (i !== points.indexOf(currentPoint) && points[i].visible && points[i].labelVisible && points[i].labelRegion && currentPoint.labelRegion && currentPoint.labelVisible && isOverlap(currentPoint.labelRegion, points[i].labelRegion)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  AccumulationDataLabel.prototype.isOverlapWithNext = function (point, points, pointIndex) {\n    for (var i = pointIndex; i < points.length; i++) {\n      if (i !== points.indexOf(point) && points[i].visible && points[i].labelVisible && points[i].labelRegion && point.labelRegion && point.labelVisible && isOverlap(point.labelRegion, points[i].labelRegion)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  AccumulationDataLabel.prototype.skipPoints = function (currentPoint, halfsidePoints, pointIndex) {\n    if (pointIndex > 0 && (currentPoint.midAngle < 285 && currentPoint.midAngle > 255 || currentPoint.midAngle < 105 && currentPoint.midAngle > 75)) {\n      var previousPoint = halfsidePoints[pointIndex - 1];\n      var angleDiff = currentPoint.endAngle % 360 - currentPoint.startAngle % 360;\n      var prevAngleDiff = previousPoint.endAngle % 360 - previousPoint.startAngle % 360;\n      if (prevAngleDiff <= angleDiff && angleDiff < 5 && previousPoint.labelVisible) {\n        this.setPointVisibleTrue(currentPoint);\n      }\n    } else if (pointIndex > 1 && (currentPoint.midAngle < 300 && currentPoint.midAngle > 240 || currentPoint.midAngle < 120 && currentPoint.midAngle > 60)) {\n      var prevPoint = halfsidePoints[pointIndex - 1];\n      var secondPrevPoint = halfsidePoints[pointIndex - 2];\n      var angleDiff = currentPoint.endAngle % 360 - currentPoint.startAngle % 360;\n      var prevAngleDiff = prevPoint.endAngle % 360 - prevPoint.startAngle % 360;\n      var thirdAngleDiff = secondPrevPoint.endAngle % 360 - secondPrevPoint.startAngle % 360;\n      if (angleDiff < 3 && prevAngleDiff < 3 && thirdAngleDiff < 3 && prevPoint.labelVisible && currentPoint.labelVisible) {\n        this.setPointVisibleTrue(currentPoint);\n      }\n    }\n  };\n  AccumulationDataLabel.prototype.getPerpendicularDistance = function (startPoint, point) {\n    var increasedLocation;\n    var add = 10;\n    var height = add + 10 * Math.sin(point.midAngle * Math.PI / 360);\n    if (point.midAngle > 270 && point.midAngle < 360) {\n      increasedLocation = new ChartLocation(startPoint.x + height * Math.cos((360 - point.midAngle) * Math.PI / 180), startPoint.y - height * Math.sin((360 - point.midAngle) * Math.PI / 180));\n    } else if (point.midAngle > 0 && point.midAngle < 90) {\n      increasedLocation = new ChartLocation(startPoint.x + height * Math.cos(point.midAngle * Math.PI / 180), startPoint.y + height * Math.sin(point.midAngle * Math.PI / 180));\n      // eslint-disable-next-line no-dupe-else-if\n    } else if (point.midAngle > 0 && point.midAngle < 90) {\n      increasedLocation = new ChartLocation(startPoint.x - height * Math.cos((point.midAngle - 90) * Math.PI / 180), startPoint.y + height * Math.sin((point.midAngle - 90) * Math.PI / 180));\n    } else {\n      increasedLocation = new ChartLocation(startPoint.x - height * Math.cos((point.midAngle - 180) * Math.PI / 180), startPoint.y - height * Math.sin((point.midAngle - 180) * Math.PI / 180));\n    }\n    return increasedLocation;\n  };\n  return AccumulationDataLabel;\n}(AccumulationBase);\nexport { AccumulationDataLabel };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","extend","createElement","getValue","isNullOrUndefined","animationMode","Rect","Size","PathOption","measureText","TextOption","ChartLocation","degreeToLocation","isOverlap","stringToNumber","getAngle","appendChildElement","textTrim","subtractThickness","Thickness","getElement","removeElement","RectOption","textElement","showTooltip","colorNameToHex","convertHexToColor","containsRect","textWrap","CircleOption","getSeriesFromIndex","textRender","getFontStyle","createTemplate","measureElementRect","templateAnimate","AccumulationBase","AccumulationDataLabel","_super","accumulation","_this","call","rightSideRenderingPoints","leftSideRenderingPoints","id","element","getDataLabelPosition","point","dataLabel","textSize","points","radius","isCircular","isVariousRadius","pieSeriesModule","labelRadius","getLabelRadius","visibleSeries","getLabelDistance","title","titleSize","titleStyle","themeStyle","datalabelFont","titleRect","availableSize","width","margin","top","height","getLabelRegion","position","marginValue","labelAngle","midAngle","labelPosition","enableSmartLabels","getSmartLabel","endAngle","space","location","center","getLabelLocation","y","x","labelRegion","calculateLabelCollection","argsData","template","innerRadius","padding","maxWidth","areaRect","region","label","indexOf","labelCollection","split","textOverflow","font","enableRtl","getTextSize","i","length","Math","max","circular","connectorLength","connectorStyle","previousPoint","findPreviousPoint","index","enableRotation","isOverlapping","isConnectorLineOverlapping","setOuterSmartLabel","border","type","labelRadius_1","location_1","move","e","isTouch","target","textContent","targetId","seriesIndex","parseInt","pointIndex","isNaN","text","toString","initialClipRect","clearTimeout","clearTooltip","setTimeout","visible","labelVisible","currentPoint","textTrimming","rect","size","setPointVisibileFalse","setPointVisibleTrue","textsize","setSmartLabelForSegments","getOverlappedAngle","prevPoint","textRegion","overlapHeight","previous","start","end","getEdgeOfLabel","previousstart","previousend","isLineRectangleIntersect","line1","line2","rectPoints","round","isLinesIntersect","point1","point2","point11","point12","a1","b1","c1","a2","b2","c2","delta","lies","min","first","second","angle","getConnectorPath","connector","getConnectorStartPoint","middle","endPoint","r","sliceRadius","isLabelUpdated","getPerpendicularDistance","getPolyLinePath","controlPoints","path","t","getBezierPoint","count","p0","p1","x1","y1","x2","y2","labelshape","edge","length_1","series","extraSpace","triangleSize","labelLocation","symbolLocation","labelOffset","funnelMode","location_2","location_3","seriesRadius","findAreaRect","left","right","bottom","renderDataLabel","parent","templateElement","redraw","datalabelGroup","renderer","createGroup","color","argsFont","getDatalabelText","format","originalText","cancel","name","fill","enableHtmlSanitizer","sanitize","trigger","isTemplate","childElement","styles","calculateLabelSize","labelFormat","chart","labelText","Number","customLabelFormat","match","intl","getNumberFormat","useGrouping","useGroupingSeparator","replace","parseFloat","clientRect","isReactCallback","getTemplateSize","correctLabelRegion","drawDataLabels","degree","modifiedPoints","leftSidePoints","concat","rightSidePoints","sort","a","extendedLabelsCalculation","_i","modifiedPoints_1","finalizeDatalabels","pointElement","document","getElementById","setAttribute","dataLabelElement","location_4","setTemplateStyle","startLocation","getAttribute","textWidth","rotate","transform","drawRectangle","rx","ry","dashArray","duration","getSaturatedColor","highlightMode","children","existing","style","opacity","accumulationLegendModule","legendSettings","findMaxBounds","labelBound","element_1","previousDirection","pathElement","drawPath","parentNode","removeChild","dataLabelClipPath","clippath","createClipPath","clipRect","pieBaseRadius","drawCircle","legendModule","legendBounds","appendChild","svgObject","cssText","labelColor","getLabelBackground","isBlazor","childElementCount","doTemplateAnimation","saturatedColor","theme","rgbValue","contrast","g","delay","animation","enable","animateSeries","visibility","background","getModuleName","destroy","forEach","halfSidePoints","initialLabelRegion","skipPoints","arrangeLeftSidePoints","isIncreaseAngle","arrangeRightSidePoints","startFresh","angleChanged","rightSideRenderPoints","filter","checkAngle","lastPoint","nextPoint","changeLabelAngle","isOverlapWithNext","k","increaseAngle","decreaseAngle","leftSideRenderPoints","isOverlapWithPrevious","isRightSide","newAngle","variableR","currentPointIndex","halfsidePoints","angleDiff","startAngle","prevAngleDiff","secondPrevPoint","thirdAngleDiff","startPoint","increasedLocation","add","sin","PI","cos"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/accumulation-chart/renderer/dataLabel.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * AccumulationChart DataLabel module file\n */\nimport { extend, createElement, getValue, isNullOrUndefined, animationMode } from '@syncfusion/ej2-base';\nimport { Rect, Size, PathOption, measureText, TextOption } from '@syncfusion/ej2-svg-base';\nimport { ChartLocation, degreeToLocation, isOverlap, stringToNumber, getAngle, appendChildElement } from '../../common/utils/helper';\nimport { textTrim, subtractThickness, Thickness, getElement } from '../../common/utils/helper';\nimport { removeElement, RectOption, textElement, showTooltip } from '../../common/utils/helper';\nimport { colorNameToHex, convertHexToColor, containsRect, textWrap, CircleOption } from '../../common/utils/helper';\nimport { getSeriesFromIndex } from '../model/acc-base';\nimport { textRender } from '../../common/model/constants';\nimport { getFontStyle, createTemplate, measureElementRect, templateAnimate } from '../../common/utils/helper';\nimport { AccumulationBase } from './accumulation-base';\n/**\n * The `AccumulationDataLabel` module is used to render data labels for the Accumulation chart.\n */\nvar AccumulationDataLabel = /** @class */ (function (_super) {\n    __extends(AccumulationDataLabel, _super);\n    function AccumulationDataLabel(accumulation) {\n        var _this = _super.call(this, accumulation) || this;\n        _this.rightSideRenderingPoints = [];\n        _this.leftSideRenderingPoints = [];\n        _this.id = accumulation.element.id + '_datalabel_Series_';\n        return _this;\n    }\n    /**\n     * Method to get datalabel text location.\n     *\n     * @private\n     * @param {AccPoints} point - The data point for which to calculate the label text location.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n     * @param {Size} textSize - The size of the text to be displayed.\n     * @param {AccPoints[]} points - The array of data points in the series.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.getDataLabelPosition = function (point, dataLabel, textSize, points) {\n        var radius = this.isCircular() ? (!this.isVariousRadius() ? this.accumulation.pieSeriesModule.labelRadius :\n            this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point)) :\n            this.getLabelDistance(point, dataLabel);\n        //let radius: number = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n        if (this.accumulation.title) {\n            var titleSize = measureText(this.accumulation.title, this.accumulation.titleStyle, this.accumulation.themeStyle.datalabelFont);\n            this.titleRect = new Rect(this.accumulation.availableSize.width / 2 - titleSize.width / 2, this.accumulation.margin.top, titleSize.width, titleSize.height);\n        }\n        this.getLabelRegion(point, dataLabel.position, textSize, radius, this.marginValue);\n        point.labelAngle = point.midAngle;\n        point.labelPosition = dataLabel.position;\n        if (this.accumulation.enableSmartLabels) {\n            this.getSmartLabel(point, dataLabel, textSize, points);\n        }\n    };\n    /**\n     * Method to get datalabel bound.\n     */\n    AccumulationDataLabel.prototype.getLabelRegion = function (point, position, textSize, labelRadius, margin, endAngle) {\n        if (endAngle === void 0) { endAngle = 0; }\n        var labelAngle = endAngle || point.midAngle;\n        var space = 20;\n        var location = degreeToLocation(labelAngle, labelRadius, this.isCircular() ? this.center :\n            this.getLabelLocation(point, position));\n        location.y = (position === 'Inside') ? (location.y - textSize.height / 2) : location.y;\n        location.x = (position === 'Inside') ? (location.x - textSize.width / 2) : location.x;\n        point.labelRegion = new Rect(location.x, location.y, textSize.width + (margin * 2), textSize.height + (margin * 2));\n        if (position === 'Outside') {\n            point.labelRegion.y -= point.labelRegion.height / 2;\n            if (labelAngle >= 90 && labelAngle <= 270) {\n                point.labelRegion.x -= (point.labelRegion.width + space);\n            }\n            else {\n                point.labelRegion.x += space;\n            }\n        }\n    };\n    /**\n     * Method to get data label collection.\n     *\n     * @param {AccPoints} point - The data point for which to calculate the label collection.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n     * @returns {void}\n     * @private\n     */\n    AccumulationDataLabel.prototype.calculateLabelCollection = function (point, dataLabel) {\n        if (point.argsData.template !== null) {\n            return null;\n        }\n        var position = point.labelPosition || dataLabel.position;\n        var labelRadius = this.isCircular() ? (!this.isVariousRadius() ? this.accumulation.pieSeriesModule.labelRadius :\n            this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point)) :\n            this.getLabelDistance(point, dataLabel);\n        var radius = (!this.isVariousRadius() ?\n            (this.accumulation.pieSeriesModule.radius - this.accumulation.pieSeriesModule.innerRadius) :\n            this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point));\n        var location = degreeToLocation(point.midAngle, labelRadius, this.isCircular() ? this.center :\n            this.getLabelLocation(point, position));\n        var padding = 20;\n        var maxWidth = dataLabel.maxWidth;\n        if (!maxWidth) {\n            if (position === 'Outside') {\n                maxWidth = this.isCircular() ? (location.x >= this.center.x) ? (this.areaRect.x + this.areaRect.width - location.x) :\n                    (location.x - this.areaRect.x) : (location.x >= point.region.x) ?\n                    (this.areaRect.x + this.areaRect.width - location.x) : (location.x - this.areaRect.x);\n            }\n            else {\n                maxWidth = this.isCircular() ? (radius - padding) : point.region.width;\n            }\n        }\n        if ((point.label.indexOf('<br>') !== -1)) {\n            point.labelCollection = point.label.split('<br>');\n        }\n        else if (dataLabel.textWrap === 'Normal' && dataLabel.textOverflow === 'Ellipsis') {\n            point.labelCollection[0] = textTrim(maxWidth, point.label, point.argsData.font, this.accumulation.enableRtl, this.accumulation.themeStyle.datalabelFont);\n        }\n        else if (dataLabel.textWrap === 'Wrap' || dataLabel.textWrap === 'AnyWhere') {\n            point.labelCollection = textWrap(point.label, maxWidth, point.argsData.font, this.accumulation.enableRtl, dataLabel.textWrap === 'AnyWhere', dataLabel.textOverflow === 'Clip', this.accumulation.themeStyle.datalabelFont);\n        }\n        else {\n            point.labelCollection[0] = point.label;\n        }\n    };\n    /**\n     * To calculate label collection text size.\n     *\n     * @param {string[]} labelCollection - The collection of label texts.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n     * @returns {Size} - The size of the label text collection.\n     * @private\n     */\n    AccumulationDataLabel.prototype.getTextSize = function (labelCollection, dataLabel) {\n        var height = 0;\n        var font = dataLabel.font;\n        var width = dataLabel.maxWidth ? dataLabel.maxWidth : 0;\n        var textSize;\n        for (var i = 0; i < labelCollection.length; i++) {\n            textSize = measureText(labelCollection[i], font, this.accumulation.themeStyle.datalabelFont);\n            width = Math.max(textSize.width, width);\n            height += textSize.height;\n        }\n        if (dataLabel.textOverflow === 'Clip' && dataLabel.textWrap !== 'Normal' && dataLabel.maxWidth) {\n            width = dataLabel.maxWidth;\n        }\n        return (new Size(width, height));\n    };\n    /**\n     * Method to get datalabel smart position.\n     *\n     * @param {AccPoints} point - The data point for which to calculate the label smart position.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings for the series.\n     * @param {Size} textSize - The size of the text.\n     * @param {AccPoints[]} points - The collection of data points.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.getSmartLabel = function (point, dataLabel, textSize, points) {\n        var circular = this.isCircular();\n        var labelRadius = circular ? this.radius : this.getLabelDistance(point, dataLabel);\n        var connectorLength = circular ? (dataLabel.connectorStyle.length || '4%') :\n            '0px';\n        labelRadius += stringToNumber(connectorLength, labelRadius);\n        var previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n        if (dataLabel.position === 'Inside') {\n            // `4` is padding adding to height and width of label region.\n            point.labelRegion.height -= 4;\n            point.labelRegion.width -= 4;\n            if (previousPoint && previousPoint.labelRegion && !dataLabel.enableRotation &&\n                (isOverlap(point.labelRegion, previousPoint.labelRegion)\n                    || this.isOverlapping(point, points)) || !circular && !containsRect(point.region, point.labelRegion)) {\n                point.labelPosition = 'Outside';\n                if (!circular) {\n                    labelRadius = this.getLabelDistance(point, dataLabel);\n                }\n                this.calculateLabelCollection(point, dataLabel);\n                textSize = this.getTextSize(point.labelCollection, dataLabel);\n                textSize.height += 4; // 4 for calculation with padding for smart label shape\n                textSize.width += 4;\n                point.textSize = textSize;\n                this.getLabelRegion(point, point.labelPosition, textSize, labelRadius, this.marginValue);\n                previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n                if (previousPoint && (isOverlap(point.labelRegion, previousPoint.labelRegion) ||\n                    this.isConnectorLineOverlapping(point, previousPoint))) {\n                    this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n                }\n            }\n        }\n        else {\n            if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion)\n                || this.isOverlapping(point, points) || this.isConnectorLineOverlapping(point, previousPoint))) {\n                this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n            }\n        }\n        if (this.isOverlapping(point, points) && (this.accumulation.type === 'Pyramid' || this.accumulation.type === 'Funnel')) {\n            var position = 'OutsideLeft';\n            var space = 20;\n            var labelAngle = point.midAngle || 0;\n            var labelRadius_1 = circular ? this.radius : this.getLabelDistance(point, dataLabel);\n            var location_1 = degreeToLocation(labelAngle, -labelRadius_1, this.isCircular() ? this.center :\n                this.getLabelLocation(point, position));\n            point.labelRegion = new Rect(location_1.x, location_1.y, textSize.width + (this.marginValue * 2), textSize.height + (this.marginValue * 2));\n            point.labelRegion.y -= point.labelRegion.height / 2;\n            point.labelRegion.x = point.labelRegion.x - space - point.labelRegion.width;\n            if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion)\n                || this.isOverlapping(point, points) || this.isConnectorLineOverlapping(point, previousPoint))) {\n                this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius_1, textSize, this.marginValue);\n            }\n        }\n    };\n    /**\n     * To find trimmed datalabel tooltip needed.\n     *\n     * @param {Event} e - The move event.\n     * @param {number} x - The x-coordinate.\n     * @param {number} y - The y-coordinate.\n     * @param {boolean} isTouch - Indicates if the interaction is touch-based.\n     * @returns {void}\n     * @private\n     */\n    AccumulationDataLabel.prototype.move = function (e, x, y, isTouch) {\n        var _this = this;\n        if (e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.id);\n            if (targetId.length === 2) {\n                var seriesIndex = parseInt(targetId[1].split('_text_')[0], 10);\n                var pointIndex = parseInt(targetId[1].split('_text_')[1], 10);\n                if (!isNaN(seriesIndex) && !isNaN(pointIndex)) {\n                    if (isTouch) {\n                        removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n                    }\n                    var point = getSeriesFromIndex(seriesIndex, (this.accumulation).visibleSeries).points[pointIndex];\n                    showTooltip(point.text || point.y.toString(), x, y, this.areaRect.width, this.accumulation.element.id + '_EJ2_Datalabel_Tooltip', getElement(this.accumulation.element.id + '_Secondary_Element'), null, null, this.accumulation.initialClipRect);\n                }\n            }\n        }\n        else {\n            removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n        }\n        if (isTouch) {\n            clearTimeout(this.clearTooltip);\n            this.clearTooltip = +setTimeout(function () { removeElement(_this.accumulation.element.id + '_EJ2_Datalabel_Tooltip'); }, 1000);\n        }\n    };\n    /**\n     * To find previous valid label point.\n     *\n     * @param {AccPoints[]} points - The array of accumulation points.\n     * @param {number} index - The index of the current point.\n     * @param {AccumulationLabelPosition} position - The position of the label.\n     * @returns {AccPoints} - Find the previous value of accumulation point.\n     */\n    AccumulationDataLabel.prototype.findPreviousPoint = function (points, index, position) {\n        var point = points[0];\n        for (var i = index - 1; i >= 0; i--) {\n            point = points[i];\n            if (point.visible && point.labelVisible && point.labelRegion && point.labelPosition === position) {\n                return point;\n            }\n        }\n        return null;\n    };\n    /**\n     * To find current point datalabel is overlapping with other points.\n     *\n     * @param {AccPoints} currentPoint - The current point.\n     * @param {AccPoints[]} points - The array of accumulation points.\n     * @returns {boolean} - It returns boolean value of overlapping.\n     */\n    AccumulationDataLabel.prototype.isOverlapping = function (currentPoint, points) {\n        for (var i = currentPoint.index - 1; i >= 0; i--) {\n            if (points[i].visible && points[i].labelVisible &&\n                points[i].labelRegion && currentPoint.labelRegion &&\n                currentPoint.labelVisible && isOverlap(currentPoint.labelRegion, points[i].labelRegion)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * To get text trimmed while exceeds the accumulation chart area.\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @param {Rect} rect - The area of the accumulation chart.\n     * @param {FontModel} font - The font settings.\n     * @param {string} position - The position of the data label.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.textTrimming = function (point, rect, font, position, dataLabel) {\n        if (isOverlap(point.labelRegion, rect)) {\n            var size = point.labelRegion.width;\n            if (position === 'Right') {\n                size = rect.x - point.labelRegion.x;\n            }\n            else if (position === 'Left') {\n                size = point.labelRegion.x - (rect.x + rect.width);\n                if (size < 0) {\n                    size += point.labelRegion.width;\n                    point.labelRegion.x = rect.x + rect.width;\n                }\n            }\n            else if (position === 'InsideRight') {\n                size = (rect.x + rect.width) - point.labelRegion.x;\n            }\n            else if (position === 'InsideLeft') {\n                size = (point.labelRegion.x + point.labelRegion.width) - rect.x;\n                if (size < point.labelRegion.width) {\n                    point.labelRegion.x = rect.x;\n                }\n            }\n            else if (this.accumulation.enableSmartLabels) {\n                this.setPointVisibileFalse(point);\n            }\n            if (point.labelVisible && point.labelRegion) {\n                if ((point.label.indexOf('<br>') !== -1)) {\n                    point.labelCollection = point.label.split('<br>');\n                }\n                else if (size < point.labelRegion.width) {\n                    if (dataLabel.textWrap === 'Normal' && dataLabel.textOverflow === 'Ellipsis') {\n                        point.labelCollection[0] = textTrim(size - (this.marginValue * 2), point.label, font, this.accumulation.enableRtl, this.accumulation.themeStyle.datalabelFont);\n                    }\n                    else if (dataLabel.textWrap === 'Wrap' || dataLabel.textWrap === 'AnyWhere') {\n                        point.labelCollection = textWrap(point.label, size - (this.marginValue * 2), font, this.accumulation.enableRtl, dataLabel.textWrap === 'AnyWhere', dataLabel.textOverflow === 'Clip', this.accumulation.themeStyle.datalabelFont);\n                    }\n                    point.labelRegion.width = size;\n                }\n                for (var i = 0; i < point.labelCollection.length; i++) {\n                    if (point.labelCollection[i].length === 3 && point.labelCollection[i].indexOf('...') > -1) {\n                        this.setPointVisibileFalse(point);\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To set point label visible and region to disable.\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.setPointVisibileFalse = function (point) {\n        point.labelVisible = false;\n        point.labelRegion = null;\n    };\n    /**\n     * To set point label visible to enable.\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.setPointVisibleTrue = function (point) {\n        point.labelVisible = true;\n    };\n    /**\n     * To set datalabel angle position for outside labels.\n     *\n     * @param {AccPoints} previousPoint - The previous accumulation point.\n     * @param {AccPoints} point - The accumulation point.\n     * @param {number} border - The border size.\n     * @param {number} labelRadius - The radius for the labels.\n     * @param {Size} textsize - The size of the labels.\n     * @param {number} margin - The margin value.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.setOuterSmartLabel = function (previousPoint, point, border, labelRadius, textsize, margin) {\n        if (!this.isCircular()) {\n            this.setSmartLabelForSegments(point, previousPoint);\n        }\n        else {\n            var labelAngle = this.getOverlappedAngle(previousPoint.labelRegion, point.labelRegion, point.midAngle, border * 2);\n            this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n            if (labelAngle > point.endAngle) {\n                labelAngle = point.midAngle;\n                //this.setPointVisibileFalse(point);\n            }\n            point.labelAngle = labelAngle;\n            while (point.labelVisible && (isOverlap(previousPoint.labelRegion, point.labelRegion) || labelAngle <= previousPoint.labelAngle\n                || labelAngle <= point.midAngle * 0.9 || this.isConnectorLineOverlapping(point, previousPoint))) {\n                if (labelAngle > point.endAngle) {\n                    //this.setPointVisibileFalse(point);\n                    break;\n                }\n                point.labelAngle = labelAngle;\n                this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n                labelAngle += 0.1;\n            }\n        }\n    };\n    /**\n     * Sets smart label positions for funnel and pyramid series.\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @param {AccPoints} prevPoint - The previous point.\n     * @returns {void} setSmartLabelForSegments.\n     */\n    AccumulationDataLabel.prototype.setSmartLabelForSegments = function (point, prevPoint) {\n        var textRegion = point.labelRegion;\n        //let overlapWidth: number = prevPoint.labelRegion.x + prevPoint.labelRegion.width - textRegion.x;\n        var overlapHeight = this.accumulation.type === 'Funnel' ?\n            prevPoint.labelRegion.y - (textRegion.y + textRegion.height) :\n            point.labelRegion.y - (prevPoint.labelRegion.y + prevPoint.labelRegion.height);\n        if (overlapHeight < 0) {\n            point.labelRegion.y += this.accumulation.type === 'Funnel' ? overlapHeight : -overlapHeight;\n        }\n    };\n    /**\n     * To find connector line overlapping.\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @param {AccPoints} previous - The previous point.\n     * @returns {boolean} - To find connector line overlapping or not.\n     */\n    AccumulationDataLabel.prototype.isConnectorLineOverlapping = function (point, previous) {\n        var position;\n        if (!this.isCircular() && point.labelRegion.x < point.region.x) {\n            position = 'outsideLeft';\n        }\n        var start = this.getLabelLocation(point, position);\n        var end = new ChartLocation(0, 0);\n        this.getEdgeOfLabel(point.labelRegion, point.labelAngle, end, 0, point);\n        var previousstart = this.getLabelLocation(previous);\n        var previousend = new ChartLocation(0, 0);\n        this.getEdgeOfLabel(previous.labelRegion, previous.labelAngle, previousend, 0, point);\n        return this.isLineRectangleIntersect(start, end, point.labelRegion) ||\n            this.isLineRectangleIntersect(start, end, previous.labelRegion) ||\n            this.isLineRectangleIntersect(previousstart, previousend, point.labelRegion);\n    };\n    /**\n     * To find two rectangle intersect.\n     *\n     * @param {ChartLocation} line1 - The first line.\n     * @param {ChartLocation} line2 - The second line.\n     * @param {Rect} rect - The rectangle to check against.\n     * @returns {boolean} - To find line rectangle intersect value.\n     */\n    AccumulationDataLabel.prototype.isLineRectangleIntersect = function (line1, line2, rect) {\n        var rectPoints = [\n            new ChartLocation(Math.round(rect.x), Math.round(rect.y)),\n            new ChartLocation(Math.round((rect.x + rect.width)), Math.round(rect.y)),\n            new ChartLocation(Math.round((rect.x + rect.width)), Math.round((rect.y + rect.height))),\n            new ChartLocation(Math.round(rect.x), Math.round((rect.y + rect.height)))\n        ];\n        line1.x = Math.round(line1.x);\n        line1.y = Math.round(line1.y);\n        line2.x = Math.round(line2.x);\n        line2.y = Math.round(line2.y);\n        for (var i = 0; i < rectPoints.length; i++) {\n            if (this.isLinesIntersect(line1, line2, rectPoints[i], rectPoints[(i + 1) % rectPoints.length])) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * To find two line intersect.\n     *\n     * @param {ChartLocation} point1 - The first point of the first line.\n     * @param {ChartLocation} point2 - The second point of the first line.\n     * @param {ChartLocation} point11 - The first point of the second line.\n     * @param {ChartLocation} point12 - The second point of the second line.\n     * @returns {boolean} - To find line intersect or not.\n     */\n    AccumulationDataLabel.prototype.isLinesIntersect = function (point1, point2, point11, point12) {\n        var a1 = point2.y - point1.y;\n        var b1 = point1.x - point2.x;\n        var c1 = a1 * point1.x + b1 * point1.y;\n        var a2 = point12.y - point11.y;\n        var b2 = point11.x - point12.x;\n        var c2 = a2 * point11.x + b2 * point11.y;\n        var delta = a1 * b2 - a2 * b1;\n        if (delta !== 0) {\n            var x = (b2 * c1 - b1 * c2) / delta;\n            var y = (a1 * c2 - a2 * c1) / delta;\n            var lies = Math.min(point1.x, point2.x) <= x && x <= Math.max(point1.x, point2.x);\n            lies = lies && Math.min(point1.y, point2.y) <= y && y <= Math.max(point1.y, point2.y);\n            lies = lies && Math.min(point11.x, point12.x) <= x && x <= Math.max(point11.x, point12.x);\n            lies = lies && Math.min(point11.y, point12.y) <= y && y <= Math.max(point11.y, point12.y);\n            return lies;\n        }\n        return false;\n    };\n    /**\n     * To get two rectangle overlapping angles.\n     *\n     * @param {Rect} first - The first rectangle.\n     * @param {Rect} second - The second rectangle.\n     * @param {number} angle - The angle.\n     * @param {number} padding - The padding.\n     * @returns {number} - Get overlapped angle.\n     */\n    AccumulationDataLabel.prototype.getOverlappedAngle = function (first, second, angle, padding) {\n        var x = first.x;\n        if (angle >= 90 && angle <= 270) {\n            second.y = first.y - (padding + second.height / 2);\n            x = first.x + first.width;\n        }\n        else {\n            second.y = first.y + first.height + padding;\n        }\n        return getAngle(this.center, new ChartLocation(x, second.y));\n    };\n    /**\n     * To get connector line path.\n     *\n     * @param {Rect} label - The label.\n     * @param {AccPoints} point - The accumulation point.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n     * @param {number} end - The end.\n     * @returns {string} - Get connector line path.\n     */\n    AccumulationDataLabel.prototype.getConnectorPath = function (label, point, dataLabel, end) {\n        if (end === void 0) { end = 0; }\n        var connector = dataLabel.connectorStyle;\n        var labelRadius = this.isCircular() ? (!this.isVariousRadius() ? this.labelRadius :\n            this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], point)) :\n            this.getLabelDistance(point, dataLabel);\n        //let labelRadius: number = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n        var start = this.getConnectorStartPoint(point, connector);\n        var labelAngle = this.accumulation.enableSmartLabels ? point.midAngle : end || point.midAngle;\n        var middle = new ChartLocation(0, 0);\n        var endPoint = this.getEdgeOfLabel(label, labelAngle, middle, connector.width, point);\n        if (connector.type === 'Curve') {\n            if (this.isCircular()) {\n                var r = labelRadius - (this.isVariousRadius() ? stringToNumber(point.sliceRadius, this.accumulation.pieSeriesModule.size / 2) :\n                    this.radius);\n                //let r: number = labelRadius - this.radius;\n                if (point.isLabelUpdated) {\n                    middle = this.getPerpendicularDistance(start, point);\n                }\n                else {\n                    middle = degreeToLocation(labelAngle, labelRadius - (r / 2), this.center);\n                    if (point.labelPosition === 'Outside' && dataLabel.position === 'Inside') {\n                        middle = degreeToLocation(labelAngle, labelRadius - r * 1.25, this.center);\n                    }\n                }\n                return 'M ' + start.x + ' ' + start.y + ' Q ' + middle.x + ' ' + middle.y + ' ' + endPoint.x + ' ' + endPoint.y;\n            }\n            else {\n                return this.getPolyLinePath(start, endPoint);\n            }\n        }\n        else {\n            return 'M ' + start.x + ' ' + start.y + ' L ' + middle.x + ' ' + middle.y + ' L ' + endPoint.x + ' ' + endPoint.y;\n        }\n    };\n    /**\n     * Finds the curved path for funnel/pyramid data label connectors.\n     *\n     * @param {ChartLocation} start - The start location.\n     * @param {ChartLocation} end - The end location.\n     * @returns {string} - Get poly line path.\n     */\n    AccumulationDataLabel.prototype.getPolyLinePath = function (start, end) {\n        var controlPoints = [start, end];\n        if (start.y === end.y) {\n            return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y;\n        }\n        var path = 'M';\n        for (var i = 0; i <= 16; i++) {\n            var t = i / 16;\n            var points = this.getBezierPoint(t, controlPoints, 0, 2);\n            path += points.x + ',' + points.y;\n            if (i !== 16) {\n                path += ' L';\n            }\n        }\n        return path;\n    };\n    /**\n     * Finds the bezier point for funnel/pyramid data label connectors.\n     *\n     * @param {number} t - The parameter value.\n     * @param {ChartLocation[]} controlPoints - The control points for the bezier point.\n     * @param {number} index - The index of the point.\n     * @param {number} count - The total count of points.\n     * @returns {ChartLocation} - Get bazier point.\n     */\n    AccumulationDataLabel.prototype.getBezierPoint = function (t, controlPoints, index, count) {\n        if (count === 1) {\n            return controlPoints[index];\n        }\n        var p0 = this.getBezierPoint(t, controlPoints, index, count - 1);\n        var p1 = this.getBezierPoint(t, controlPoints, index + 1, count - 1);\n        var x = (p0.x) ? p0.x : p0.x;\n        var y = (p0.y) ? p0.y : p0.y;\n        var x1 = (p1.x) ? p1.x : p1.x;\n        var y1 = (p1.y) ? p1.y : p1.y;\n        var x2 = (1 - t) * x + t * x1;\n        var y2 = (1 - t) * y + t * y1;\n        if (p0.x) {\n            return { x: x2, y: y2 };\n        }\n        else {\n            return { x: x2, y: y2 };\n        }\n    };\n    /**\n     * To get label edges based on the center and label rect position.\n     *\n     * @param {Rect} labelshape - The label shape.\n     * @param {number} angle - The angle of the label.\n     * @param {ChartLocation} middle - The middle point of the label.\n     * @param {number} border - The border value.\n     * @param {AccPoints} point - The accumulation point.\n     * @returns {ChartLocation} - Get label edge value.\n     */\n    AccumulationDataLabel.prototype.getEdgeOfLabel = function (labelshape, angle, middle, border, point) {\n        if (border === void 0) { border = 1; }\n        var edge = new ChartLocation(labelshape.x, labelshape.y);\n        var space = 10;\n        if (angle >= 90 && angle <= 270) {\n            edge.x += labelshape.width + border / 2 + space;\n            edge.y += labelshape.height / 2;\n            middle.x = edge.x + 10;\n            middle.y = edge.y;\n        }\n        else if (point && point.region && point.region.x > point.labelRegion.x) {\n            edge.x += border * 2 + labelshape.width + space;\n            edge.y += labelshape.height / 2;\n            middle.x = edge.x + 10;\n            middle.y = edge.y;\n        }\n        else {\n            edge.x -= space - border / 2;\n            edge.y += labelshape.height / 2;\n            middle.x = edge.x - 10;\n            middle.y = edge.y;\n        }\n        return edge;\n    };\n    /**\n     * Finds the distance between the label position and the edge/center of the funnel/pyramid.\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The data label settings.\n     * @returns {number} - Get label distance.\n     */\n    AccumulationDataLabel.prototype.getLabelDistance = function (point, dataLabel) {\n        if (point.labelPosition && dataLabel.position !== point.labelPosition || (dataLabel.connectorStyle.length && dataLabel.position === 'Outside')) {\n            var length_1 = stringToNumber(dataLabel.connectorStyle.length || '70px', this.accumulation.initialClipRect.width);\n            if (length_1 < this.accumulation.initialClipRect.width) {\n                return length_1;\n            }\n        }\n        var position = point.labelPosition || dataLabel.position;\n        var series = this.accumulation.visibleSeries[0];\n        var extraSpace = (this.accumulation.initialClipRect.width - series.triangleSize.width) / 2;\n        var labelLocation;\n        switch (position) {\n            case 'Inside':\n                return 0;\n            case 'Outside':\n                labelLocation = point.symbolLocation.x + point.labelOffset.x;\n                return this.accumulation.initialClipRect.width - labelLocation - extraSpace;\n        }\n    };\n    /**\n     * Finds the label position / beginning of the connector(ouside funnel labels).\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @param {AccumulationLabelPosition | string} position - The data label position.\n     * @returns {ChartLocation} - Get label location.\n     */\n    AccumulationDataLabel.prototype.getLabelLocation = function (point, position) {\n        if (position === void 0) { position = 'Outside'; }\n        if (this.accumulation.type !== 'Pie' && this.accumulation.series[0].funnelMode !== 'Trapezoidal') {\n            position = position === 'OutsideLeft' ? 'OutsideLeft' : point.labelPosition || position;\n            var location_2 = {\n                x: point.symbolLocation.x,\n                y: point.symbolLocation.y - point.labelOffset.y\n            };\n            switch (position) {\n                case 'Inside':\n                    location_2.y = point.region.y + point.region.height / 2;\n                    break;\n                case 'Outside':\n                    location_2.x += point.labelOffset.x;\n                    break;\n                case 'OutsideLeft':\n                    location_2.x -= point.labelOffset.x;\n            }\n            return location_2;\n        }\n        else if (this.accumulation.series[0].funnelMode === 'Trapezoidal' && this.accumulation.type === 'Funnel') {\n            var location_3 = {\n                x: point.symbolLocation.x,\n                y: point.symbolLocation.y\n            };\n            if (position === 'Outside') {\n                location_3.x = point.labelOffset.x;\n            }\n            return location_3;\n        }\n        else {\n            //return degreeToLocation(point.midAngle, this.radius, this.center);\n            return degreeToLocation(point.midAngle, (this.isVariousRadius() ? stringToNumber(point.sliceRadius, this.accumulation.pieSeriesModule.seriesRadius) :\n                this.radius), this.center);\n        }\n    };\n    /**\n     * Finds the beginning of connector line.\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @param {ConnectorModel} connector - The connector line.\n     * @returns {ChartLocation} - Staring point of connector line.\n     */\n    AccumulationDataLabel.prototype.getConnectorStartPoint = function (point, connector) {\n        // return this.isCircular() ? degreeToLocation(point.midAngle, this.radius - connector.width, this.center) :\n        //     this.getLabelLocation(point);\n        var position;\n        if (!this.isCircular() && point.region.x > point.labelRegion.x) {\n            position = 'OutsideLeft';\n        }\n        return this.isCircular() ? degreeToLocation(point.midAngle, (this.isVariousRadius() ? stringToNumber(point.sliceRadius, this.accumulation.pieSeriesModule.seriesRadius) :\n            this.radius) - connector.width, this.center) : this.getLabelLocation(point, position);\n    };\n    /**\n     * To find area rect based on margin, available size.\n     *\n     * @private\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.findAreaRect = function () {\n        this.areaRect = new Rect(0, 0, this.accumulation.availableSize.width, this.accumulation.availableSize.height);\n        var margin = this.accumulation.margin;\n        subtractThickness(this.areaRect, new Thickness(margin.left, margin.right, margin.top, margin.bottom));\n    };\n    /**\n     * To render the data labels from series points.\n     *\n     * @param {AccPoints} point - The point for which to render the data label.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n     * @param {Element} parent - The parent element to which the data labels are appended.\n     * @param {AccPoints[]} points - The collection of points in the series.\n     * @param {number} series - The index of the series.\n     * @param {HTMLElement} templateElement - The template element for the data label.\n     * @param {boolean} redraw - Indicates whether the data labels are being redrawn.\n     * @returns {void}\n     * @private\n     */\n    AccumulationDataLabel.prototype.renderDataLabel = function (point, dataLabel, parent, points, series, templateElement, redraw) {\n        var id = this.accumulation.element.id + '_datalabel_Series_' + series + '_';\n        var datalabelGroup = this.accumulation.renderer.createGroup({ id: id + 'g_' + point.index });\n        var border = { width: dataLabel.border.width, color: dataLabel.border.color };\n        var argsFont = (extend({}, getValue('properties', dataLabel.font), null, true));\n        point.label = this.getDatalabelText(dataLabel.format, this.accumulation, point.originalText || point.y.toString());\n        var argsData = {\n            cancel: false, name: textRender, series: this.accumulation.visibleSeries[0], point: point,\n            text: point.label, border: border, color: dataLabel.fill, template: this.accumulation.enableHtmlSanitizer ?\n                this.accumulation.sanitize(dataLabel.template) : dataLabel.template, font: argsFont\n        };\n        this.accumulation.trigger(textRender, argsData);\n        point.argsData = argsData;\n        var isTemplate = argsData.template !== null;\n        point.labelVisible = !argsData.cancel;\n        point.text = point.label = argsData.text;\n        point.labelCollection = [];\n        this.marginValue = argsData.border.width ? (5 + argsData.border.width) : 1;\n        var childElement = createElement('div', {\n            id: this.accumulation.element.id + '_Series_' + 0 + '_DataLabel_' + point.index,\n            styles: 'position: absolute;background-color:' + argsData.color + ';' +\n                getFontStyle(dataLabel.font, this.accumulation.themeStyle.datalabelFont) + ';border:' + argsData.border.width + 'px solid ' + argsData.border.color + ';'\n        });\n        this.calculateLabelSize(isTemplate, childElement, point, points, argsData, datalabelGroup, id, dataLabel, redraw);\n    };\n    AccumulationDataLabel.prototype.getDatalabelText = function (labelFormat, chart, labelText) {\n        if (Number(labelText)) {\n            var customLabelFormat = labelFormat.match('{value}') !== null;\n            var format = chart.intl.getNumberFormat({\n                format: customLabelFormat ? '' : labelFormat,\n                useGrouping: chart.useGroupingSeparator\n            });\n            labelText = customLabelFormat ? labelFormat.replace('{value}', format(parseFloat(labelText))) : format(parseFloat(labelText));\n        }\n        return labelText;\n    };\n    /**\n     * To calculate label size.\n     *\n     * @param {boolean} isTemplate - Indicates whether the label is a template.\n     * @param {HTMLElement} childElement - The child element of the label.\n     * @param {AccPoints} point - The point associated with the label.\n     * @param {AccPoints[]} points - The collection of points.\n     * @param {IAccTextRenderEventArgs} argsData - The arguments data for text rendering.\n     * @param {Element} datalabelGroup - The group element for data labels.\n     * @param {string} id - The id of the label.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n     * @param {boolean} redraw - Indicates whether the labels are being redrawn.\n     * @param {ClientRect} clientRect - The client rectangle.\n     * @param {boolean} isReactCallback - Indicates whether a React callback is being used.\n     * @returns {void}\n     * @private\n     */\n    AccumulationDataLabel.prototype.calculateLabelSize = function (isTemplate, childElement, point, points, argsData, datalabelGroup, id, dataLabel, redraw, clientRect, isReactCallback) {\n        this.calculateLabelCollection(point, dataLabel);\n        var textSize = isTemplate ? (isReactCallback ? { width: clientRect.width, height: clientRect.height } :\n            this.getTemplateSize(childElement, point, argsData, redraw, isTemplate, points, datalabelGroup, id, dataLabel)) : this.getTextSize(point.labelCollection, dataLabel);\n        textSize.height += 4; // 4 for calculation with padding for smart label shape\n        textSize.width += 4;\n        point.textSize = textSize;\n        point.templateElement = childElement;\n        this.getDataLabelPosition(point, dataLabel, textSize, points);\n        if (point.labelRegion) {\n            this.correctLabelRegion(point.labelRegion, point.textSize);\n        }\n    };\n    /**\n     * To draw a data label.\n     *\n     * @param {AccumulationSeries} series - The series associated with the data label.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n     * @param {HTMLElement} parent - The parent element of the data labels.\n     * @param {HTMLElement} templateElement - The template element for the data label.\n     * @param {boolean} redraw - Indicates whether the data labels are being redrawn.\n     * @returns {void}\n     * @private\n     */\n    AccumulationDataLabel.prototype.drawDataLabels = function (series, dataLabel, parent, templateElement, redraw) {\n        var angle;\n        var degree;\n        var modifiedPoints = series.leftSidePoints.concat(series.rightSidePoints);\n        modifiedPoints.sort(function (a, b) { return a.index - b.index; });\n        if (series.type === 'Pie' && this.accumulation.enableSmartLabels) {\n            this.extendedLabelsCalculation();\n        }\n        for (var _i = 0, modifiedPoints_1 = modifiedPoints; _i < modifiedPoints_1.length; _i++) {\n            var point = modifiedPoints_1[_i];\n            if (!isNullOrUndefined(point.argsData) && !isNullOrUndefined(point.y)) {\n                this.finalizeDatalabels(point, modifiedPoints, dataLabel);\n                var pointElement = document.getElementById(this.accumulation.element.id + '_Series_0_Point_' + point.index);\n                var id = this.accumulation.element.id + '_datalabel_Series_' + 0 + '_';\n                var datalabelGroup = this.accumulation.renderer.createGroup({ id: id + 'g_' + point.index });\n                datalabelGroup.setAttribute('aria-hidden', 'true');\n                var dataLabelElement = void 0;\n                var location_4 = void 0;\n                var element = void 0;\n                if (point.visible && point.labelVisible) {\n                    angle = degree = dataLabel.angle;\n                    if (point.argsData.template) {\n                        this.setTemplateStyle(point.templateElement, point, templateElement, dataLabel.font.color, point.color, redraw);\n                    }\n                    else {\n                        location_4 = new ChartLocation(point.labelRegion.x + this.marginValue, point.labelRegion.y\n                            + (point.textSize.height * 3 / (point.labelCollection.length * 4)) + this.marginValue);\n                        element = getElement(id + 'shape_' + point.index);\n                        var startLocation = element ? new ChartLocation(+element.getAttribute('x'), +element.getAttribute('y')) : null;\n                        var textWidth = point.textSize.width;\n                        if (dataLabel.enableRotation) {\n                            if (angle === 0) {\n                                if (point.labelPosition === 'Outside') {\n                                    degree = 0;\n                                }\n                                else if (point.midAngle >= 90 && point.midAngle <= 260) {\n                                    degree = point.midAngle + 180;\n                                }\n                                else {\n                                    degree = point.midAngle;\n                                }\n                            }\n                            else {\n                                degree = (angle > 360) ? angle - 360 : (angle < -360) ? angle + 360 : angle;\n                            }\n                        }\n                        else {\n                            degree = 0;\n                        }\n                        var rotate = 'rotate(' + degree + ',' + (location_4.x + (textWidth / 2)) + ',' + (location_4.y) + ')';\n                        point.transform = rotate;\n                        dataLabelElement = this.accumulation.renderer.drawRectangle(new RectOption(id + 'shape_' + point.index, point.argsData.color, point.argsData.border, 1, point.labelRegion, dataLabel.rx, dataLabel.ry, rotate, series.dataLabel.border.dashArray));\n                        appendChildElement(false, datalabelGroup, dataLabelElement, redraw, true, 'x', 'y', startLocation, null, false, false, null, this.accumulation.duration);\n                        textElement(this.accumulation.renderer, new TextOption(id + 'text_' + point.index, location_4.x, location_4.y, this.accumulation.enableRtl ? 'end' : 'start', point.labelCollection, rotate, 'auto', degree), point.argsData.font, point.argsData.font.color || this.getSaturatedColor(point, point.argsData.color), datalabelGroup, false, redraw, true, false, this.accumulation.duration, null, null, null, null, true, this.accumulation.themeStyle.datalabelFont);\n                        element = null;\n                    }\n                    if (pointElement && this.accumulation.highlightMode !== 'None') {\n                        datalabelGroup.setAttribute('class', pointElement.getAttribute('class') ? pointElement.getAttribute('class') : '');\n                        for (var i = 0; i < datalabelGroup.children.length; i++) {\n                            var existing = document.getElementById(datalabelGroup.children[i].id);\n                            if (existing) {\n                                datalabelGroup.children[i].style.opacity = existing.style.opacity;\n                            }\n                        }\n                    }\n                    if (this.accumulation.accumulationLegendModule && this.accumulation.legendSettings.visible && !this.accumulation.redraw && (dataLabel.position === 'Outside'\n                        || this.accumulation.enableSmartLabels)) {\n                        this.accumulation.visibleSeries[0].findMaxBounds(this.accumulation.visibleSeries[0].labelBound, point.labelRegion);\n                    }\n                    if (point.labelPosition === 'Outside') {\n                        var element_1 = getElement(id + 'connector_' + point.index);\n                        var previousDirection = element_1 ? element_1.getAttribute('d') : '';\n                        var pathElement = this.accumulation.renderer.drawPath(new PathOption(id + 'connector_' + point.index, 'transparent', dataLabel.connectorStyle.width, dataLabel.connectorStyle.color || point.color, 1, dataLabel.connectorStyle.dashArray, this.getConnectorPath(extend({}, point.labelRegion, null, true), point, dataLabel, point.labelAngle)));\n                        appendChildElement(false, datalabelGroup, pathElement, redraw, true, null, null, null, previousDirection, false, false, null, this.accumulation.duration);\n                    }\n                    appendChildElement(false, parent, datalabelGroup, redraw);\n                }\n                else if (getElement(datalabelGroup.id)) {\n                    (getElement(datalabelGroup.id)).parentNode.removeChild(getElement(datalabelGroup.id));\n                }\n            }\n        }\n        if (this.accumulation.type === 'Pie' && dataLabel.textWrap === 'Normal' && dataLabel.textOverflow === 'Clip') {\n            this.dataLabelClipPath(dataLabel, parent);\n        }\n    };\n    /**\n     * To calculate data label clip path.\n     *\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n     * @param {HTMLElement} parent - The parent element of the data labels.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.dataLabelClipPath = function (dataLabel, parent) {\n        var id = this.accumulation.element.id + '_datalabel_Series_' + 0 + '_';\n        var clippath = this.accumulation.renderer.createClipPath({ id: id + 'clipPath' });\n        var clipRect;\n        var radius = this.accumulation.pieSeriesModule.pieBaseRadius;\n        if (dataLabel.position === 'Inside') {\n            clipRect = this.accumulation.renderer.drawCircle(new CircleOption(id + 'clipPath_rect', 'transparent', { width: 0 }, 0, this.center.x, this.center.y, radius));\n        }\n        else if (dataLabel.maxWidth) {\n            var x = this.center.x - radius - stringToNumber((dataLabel.connectorStyle.length || '4%'), radius) - dataLabel.maxWidth;\n            var y = this.center.y - radius - stringToNumber((dataLabel.connectorStyle.length || '4%'), radius) - dataLabel.maxWidth;\n            var height = (radius + stringToNumber((dataLabel.connectorStyle.length || '4%'), radius) + dataLabel.maxWidth) * 2;\n            var width = height;\n            if (this.accumulation.legendSettings.visible) {\n                var legendModule = this.accumulation.accumulationLegendModule;\n                if (legendModule.position === 'Left') {\n                    width = (legendModule.legendBounds.x + legendModule.legendBounds.width - x) > 0 ?\n                        (width - (legendModule.legendBounds.width - x)) : width;\n                    x = (legendModule.legendBounds.x + legendModule.legendBounds.width) < x ? x :\n                        (legendModule.legendBounds.x + legendModule.legendBounds.width);\n                }\n                else if (legendModule.position === 'Right') {\n                    width = (x + width - legendModule.legendBounds.x) > 0 ? (width - (x + width - legendModule.legendBounds.x)) : width;\n                }\n            }\n            clipRect = this.accumulation.renderer.drawRectangle(new RectOption(id + 'clipPath_rect', 'transparent', { width: 0 }, 0, new Rect(x, y, height, width), 0, 0));\n        }\n        if (dataLabel.position === 'Inside' || dataLabel.maxWidth) {\n            clippath.appendChild(clipRect);\n            appendChildElement(false, this.accumulation.svgObject, clippath);\n            parent.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n        }\n    };\n    /**\n     * In this method datalabels region checked with legebdBounds and areaBounds.\n     * Trimming of datalabel and point's visibility again changed here.\n     *\n     * @param {AccPoints} point - Current point in which trimming and visibility to be checked.\n     * @param {AccPoints[]} points - Finalized points.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - Datalabel model.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.finalizeDatalabels = function (point, points, dataLabel) {\n        if (this.isOverlapping(point, points) ||\n            (this.titleRect && point.labelRegion && isOverlap(point.labelRegion, this.titleRect))) {\n            if (this.isCircular() && point.labelPosition === 'Outside' && this.accumulation.enableSmartLabels) {\n                this.setPointVisibileFalse(point);\n            }\n        }\n        if (this.accumulation.accumulationLegendModule && this.accumulation.legendSettings.visible &&\n            point.labelVisible && point.labelRegion && (!dataLabel.maxWidth ? dataLabel.textOverflow === 'Clip' ? dataLabel.textWrap !== 'Normal' : true : false)) {\n            var rect = this.accumulation.accumulationLegendModule.legendBounds;\n            if (this.accumulation.visibleSeries[0].type !== 'Pie' && this.accumulation.legendSettings.position === 'Left'\n                && dataLabel.position === 'Outside') {\n                point.labelRegion.x = point.labelRegion.x + rect.width;\n            }\n            var padding = this.accumulation.legendSettings.border.width / 2;\n            this.textTrimming(point, new Rect(rect.x - padding, rect.y - padding, rect.width + (2 * padding), rect.height + (2 * padding)), dataLabel.font, this.accumulation.accumulationLegendModule.position, dataLabel);\n        }\n        if (point.labelVisible && point.labelRegion && (!dataLabel.maxWidth ? dataLabel.textOverflow === 'Clip' ? dataLabel.textWrap !== 'Normal' : true : false)) {\n            var position = this.isCircular() ? (point.labelRegion.x >= this.center.x) ? 'InsideRight' : 'InsideLeft' :\n                (point.labelRegion.x >= point.region.x) ? 'InsideRight' : 'InsideLeft';\n            this.textTrimming(point, this.areaRect, dataLabel.font, position, dataLabel);\n        }\n        if (point.labelVisible && point.labelRegion && !dataLabel.maxWidth && dataLabel.textOverflow !== 'Clip' && this.accumulation.enableSmartLabels && ((point.labelRegion.y + point.labelRegion.height / 2 >\n            this.areaRect.y + this.areaRect.height || point.labelRegion.y < this.areaRect.y) || (point.labelRegion.x < this.areaRect.x ||\n            point.labelRegion.x + point.labelRegion.width > this.areaRect.x + this.areaRect.width))) {\n            this.setPointVisibileFalse(point);\n        }\n    };\n    /**\n     * To find the template element size.\n     *\n     * @param {HTMLElement} element - To get a template element.\n     * @param {AccPoints} point - The accumulation point for the template.\n     * @param {IAccTextRenderEventArgs} argsData - The arguments for the accumulation points.\n     * @param {boolean} redraw - Indicates whether to redraw the template.\n     * @param {boolean} isTemplate - Indicates whether the element is a template.\n     * @param {AccPoints[]} points - The accumulation points for the template.\n     * @param {Element} datalabelGroup - The group element for the data labels.\n     * @param {string} id - The identifier for the template.\n     * @param {AccumulationDataLabelSettingsModel} dataLabel - The settings for the data labels.\n     * @returns {Size} - The size of the template.\n     */\n    AccumulationDataLabel.prototype.getTemplateSize = function (element, point, argsData, redraw, isTemplate, points, datalabelGroup, id, dataLabel) {\n        element = createTemplate(element, point.index, argsData.template, this.accumulation, point, this.accumulation.visibleSeries[0], this.accumulation.element.id + '_DataLabel', 0, argsData, isTemplate, points, datalabelGroup, id, dataLabel, redraw);\n        var clientRect = measureElementRect(element, redraw);\n        return { width: clientRect.width, height: clientRect.height };\n    };\n    /**\n     * To set the template element style.\n     *\n     * @param {HTMLElement} childElement - The child element of the template.\n     * @param {AccPoints} point - The point data for the template.\n     * @param {Element} parent - The parent element of the template.\n     * @param {string} labelColor - The color of the label in the template.\n     * @param {string} fill - The fill color of the template.\n     * @param {boolean} redraw - Indicates whether to redraw the template.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.setTemplateStyle = function (childElement, point, parent, labelColor, fill, redraw) {\n        childElement.style.left = (point.labelRegion.x) + 'px';\n        childElement.style.top = (point.labelRegion.y) + 'px';\n        childElement.style.color = labelColor || this.getSaturatedColor(point, point.labelPosition === 'Inside' ? fill : this.getLabelBackground(point));\n        if (this.accumulation.isBlazor) {\n            var position = this.isCircular() ? (point.labelRegion.x >= this.center.x) ? 'InsideRight' : 'InsideLeft' :\n                (point.labelRegion.x >= point.region.x) ? 'InsideRight' : 'InsideLeft';\n            if (position === 'InsideRight') {\n                childElement.style.transform = 'translate(0%, -50%)';\n            }\n            else {\n                childElement.style.transform = 'translate(-100%, -50%)';\n            }\n        }\n        if (childElement.childElementCount) {\n            appendChildElement(false, parent, childElement, redraw, true, 'left', 'top');\n            this.doTemplateAnimation(this.accumulation, childElement);\n        }\n    };\n    /**\n     * To find saturated color for datalabel\n     *\n     * @param {AccPoints} point - The accumulation point.\n     * @param {string} color - The original color.\n     * @returns {string} - Get a saturated color.\n     */\n    AccumulationDataLabel.prototype.getSaturatedColor = function (point, color) {\n        var saturatedColor;\n        if (this.marginValue >= 1) {\n            saturatedColor = color === 'transparent' ? this.getLabelBackground(point) : color;\n        }\n        else {\n            saturatedColor = this.getLabelBackground(point);\n        }\n        saturatedColor = (saturatedColor === 'transparent') ? ((this.accumulation.theme.indexOf('Dark') > -1 || this.accumulation.theme.indexOf('HighContrast') > -1) ? 'black' : 'white') : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return this.accumulation.theme === 'Bootstrap5' ? '#212529' : this.accumulation.theme === 'Bootstrap5Dark' ? '#DEE2E6' : contrast >= 128 ? this.accumulation.theme.indexOf('Tailwind3') > -1 ? '#111827' : 'black' : this.accumulation.theme.indexOf('Tailwind3') > -1 ? '#FFFFFF' : 'white';\n    };\n    /**\n     * Animates the data label template.\n     *\n     * @param {AccumulationChart} accumulation - The accumulation chart control.\n     * @param {Element} element - The element to animate.\n     * @returns {void}\n     * @private\n     */\n    AccumulationDataLabel.prototype.doTemplateAnimation = function (accumulation, element) {\n        var series = accumulation.visibleSeries[0];\n        var delay = series.animation.delay + series.animation.duration;\n        if (((series.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && accumulation.animateSeries) {\n            element.style.visibility = 'hidden';\n            templateAnimate(element, delay, 200, 'ZoomIn');\n        }\n    };\n    /**\n     * To find background color for the datalabel.\n     *\n     * @param {AccPoints} point - The data point for which to determine the background color.\n     * @returns {string} - The background color for the data label.\n     */\n    AccumulationDataLabel.prototype.getLabelBackground = function (point) {\n        return point.labelPosition === 'Outside' ?\n            this.accumulation.background || this.accumulation.themeStyle.background : !point.y ? this.accumulation.theme.indexOf('dark') ? 'white' : 'black' : point.color;\n    };\n    /**\n     * To correct the padding between datalabel regions.\n     *\n     * @param {Rect} labelRegion - The region occupied by the data label.\n     * @param {Size} textSize - The size of the text within the data label.\n     * @param {number} padding - The padding value to adjust the spacing.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.correctLabelRegion = function (labelRegion, textSize, padding) {\n        if (padding === void 0) { padding = 4; }\n        labelRegion.height -= padding;\n        labelRegion.width -= padding;\n        labelRegion.x += padding / 2;\n        labelRegion.y += padding / 2;\n        textSize.height -= padding;\n        textSize.width -= padding;\n    };\n    /**\n     * To get the dataLabel module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    AccumulationDataLabel.prototype.getModuleName = function () {\n        return 'AccumulationDataLabel';\n    };\n    /**\n     * To destroy the data label.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationDataLabel.prototype.destroy = function () {\n        /**\n         * Destroy method performed here.\n         */\n    };\n    //calculation for placing labels smartly\n    AccumulationDataLabel.prototype.extendedLabelsCalculation = function () {\n        var _this = this;\n        var series = this.accumulation.series[0];\n        series.rightSidePoints.forEach(function (point, index, halfSidePoints) {\n            point.initialLabelRegion = point.labelRegion;\n            point.isLabelUpdated = 0;\n            _this.skipPoints(point, halfSidePoints, index);\n        });\n        series.leftSidePoints.forEach(function (point, index, halfSidePoints) {\n            point.initialLabelRegion = point.labelRegion;\n            point.isLabelUpdated = 0;\n            _this.skipPoints(point, halfSidePoints, index);\n        });\n        this.arrangeLeftSidePoints(series);\n        this.isIncreaseAngle = false;\n        this.arrangeRightSidePoints(series);\n    };\n    /**\n     * Rightside points alignments calculation.\n     *\n     * @param {AccumulationSeries} series - To get a proper series.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.arrangeRightSidePoints = function (series) {\n        var startFresh;\n        var angleChanged;\n        var rightSideRenderPoints = series.rightSidePoints.filter(function (point) { return (point.labelVisible && point.labelPosition === 'Outside'); });\n        this.rightSideRenderingPoints = rightSideRenderPoints;\n        var checkAngle;\n        var currentPoint;\n        var lastPoint = rightSideRenderPoints[rightSideRenderPoints.length - 1];\n        var nextPoint;\n        if (lastPoint) {\n            if (lastPoint.labelAngle > 90 && lastPoint.labelAngle < 270) {\n                this.isIncreaseAngle = true;\n                this.changeLabelAngle(lastPoint, 89);\n            }\n        }\n        /**\n         * Right side points arranged from last point.\n         * A point checked with successive points for overlapping.\n         * If that is overlapped, its label angle is decreased and placing in optimal position\n         * If one point's angle is decreased, its previous points in the half side points also decreased until it reaced optimum position.\n         * When decreasing angle falls beyond 270, label angle increased.\n         * If one point's angle is increased, its successive points in that half point also increased until it reaced optimum position.\n         */\n        for (var i = rightSideRenderPoints.length - 1; i >= 0; i--) {\n            currentPoint = rightSideRenderPoints[i];\n            nextPoint = rightSideRenderPoints[i + 1];\n            // A point checked for overlapping, label visibility\n            if (this.isOverlapWithNext(currentPoint, rightSideRenderPoints, i) && currentPoint.labelVisible\n                || !(currentPoint.labelAngle <= 90 || currentPoint.labelAngle >= 270)) {\n                checkAngle = lastPoint.labelAngle + 10;\n                angleChanged = true;\n                //If last's point change angle in beyond the limit, stop the increasing angle and do decrease the angle.\n                if (startFresh) {\n                    this.isIncreaseAngle = false;\n                }\n                else if (checkAngle > 90 && checkAngle < 270 && nextPoint.isLabelUpdated) {\n                    this.isIncreaseAngle = true;\n                }\n                if (!this.isIncreaseAngle) {\n                    for (var k = i + 1; k < rightSideRenderPoints.length; k++) {\n                        this.increaseAngle(rightSideRenderPoints[k - 1], rightSideRenderPoints[k], series, true);\n                    }\n                }\n                else {\n                    for (var k = i + 1; k > 0; k--) {\n                        this.decreaseAngle(rightSideRenderPoints[k], rightSideRenderPoints[k - 1], series, true);\n                    }\n                }\n            }\n            else {\n                //If a point did not overlapped with previous points, increase the angle always for right side points.\n                if (angleChanged && nextPoint && !nextPoint.isLabelUpdated) {\n                    startFresh = true;\n                }\n            }\n        }\n    };\n    /**\n     * Leftside points alignments calculation.\n     *\n     * @param {AccumulationSeries} series - To get a proper series.\n     * @returns {void}\n     */\n    AccumulationDataLabel.prototype.arrangeLeftSidePoints = function (series) {\n        var _this = this;\n        var leftSideRenderPoints = series.leftSidePoints.filter(function (point) { return (point.labelVisible && point.labelPosition === 'Outside'); });\n        this.leftSideRenderingPoints = leftSideRenderPoints;\n        var previousPoint;\n        var currentPoint;\n        var angleChanged;\n        var startFresh;\n        /**\n         * Left side points arranged from first point.\n         * A point checked with previous points for overlapping.\n         * If that is overlapped, its label angle is decreased and placing in optimal position\n         * If one point's angle is decreased, its previous points in the half side points also decreased until it reaced optimum position.\n         * When decreasing angle falls beyond 90, label angle increased.\n         * If one point's angle is increased, its successive points in that half point also increased until it reaced optimum position.\n         */\n        for (var i = 0; i < leftSideRenderPoints.length; i++) {\n            currentPoint = leftSideRenderPoints[i];\n            previousPoint = leftSideRenderPoints[i - 1];\n            // A point checked\n            if (this.isOverlapWithPrevious(currentPoint, leftSideRenderPoints, i) && currentPoint.labelVisible\n                || !(currentPoint.labelAngle < 270)) {\n                angleChanged = true;\n                if (startFresh) {\n                    this.isIncreaseAngle = false;\n                }\n                if (!this.isIncreaseAngle) {\n                    for (var k = i; k > 0; k--) {\n                        this.decreaseAngle(leftSideRenderPoints[k], leftSideRenderPoints[k - 1], series, false);\n                        leftSideRenderPoints.filter(function (point, index) {\n                            if (point.isLabelUpdated && leftSideRenderPoints[index].labelAngle - 10 < 100) {\n                                _this.isIncreaseAngle = true;\n                            }\n                        });\n                    }\n                }\n                else {\n                    for (var k = i; k < leftSideRenderPoints.length; k++) {\n                        this.increaseAngle(leftSideRenderPoints[k - 1], leftSideRenderPoints[k], series, false);\n                    }\n                }\n            }\n            else {\n                if (angleChanged && previousPoint && previousPoint.isLabelUpdated) {\n                    startFresh = true;\n                }\n            }\n        }\n    };\n    AccumulationDataLabel.prototype.decreaseAngle = function (currentPoint, previousPoint, series, isRightSide) {\n        if (isNullOrUndefined(currentPoint) || isNullOrUndefined(previousPoint)) {\n            return null;\n        }\n        var count = 1;\n        if (isRightSide) {\n            while (isOverlap(currentPoint.labelRegion, previousPoint.labelRegion) || (!this.isVariousRadius() &&\n                !((previousPoint.labelRegion.height + previousPoint.labelRegion.y) < currentPoint.labelRegion.y))) {\n                var newAngle = previousPoint.midAngle - count;\n                if (newAngle < 0) {\n                    newAngle = 360 + newAngle;\n                }\n                if (newAngle <= 270 && newAngle >= 90) {\n                    newAngle = 270;\n                    this.isIncreaseAngle = true;\n                    break;\n                }\n                this.changeLabelAngle(previousPoint, newAngle);\n                count++;\n            }\n        }\n        else {\n            if (currentPoint.labelAngle > 270) {\n                this.changeLabelAngle(currentPoint, 270);\n                previousPoint.labelAngle = 270;\n            }\n            while (isOverlap(currentPoint.labelRegion, previousPoint.labelRegion) || (!this.isVariousRadius() &&\n                ((currentPoint.labelRegion.y + currentPoint.labelRegion.height) > previousPoint.labelRegion.y))) {\n                var newAngle = previousPoint.midAngle - count;\n                if (!(newAngle <= 270 && newAngle >= 90)) {\n                    newAngle = 90;\n                    this.isIncreaseAngle = true;\n                    break;\n                }\n                this.changeLabelAngle(previousPoint, newAngle);\n                if (isOverlap(currentPoint.labelRegion, previousPoint.labelRegion) &&\n                    !series.leftSidePoints.indexOf(previousPoint) && (newAngle - 1 < 90 && newAngle - 1 > 270)) {\n                    this.changeLabelAngle(currentPoint, currentPoint.labelAngle + 1);\n                    this.arrangeLeftSidePoints(series);\n                    break;\n                }\n                count++;\n            }\n        }\n    };\n    AccumulationDataLabel.prototype.increaseAngle = function (currentPoint, nextPoint, series, isRightSide) {\n        if (isNullOrUndefined(currentPoint) || isNullOrUndefined(nextPoint)) {\n            return null;\n        }\n        var count = 1;\n        if (isRightSide) {\n            while (isOverlap(currentPoint.labelRegion, nextPoint.labelRegion) || (!this.isVariousRadius() &&\n                !((currentPoint.labelRegion.y + currentPoint.labelRegion.height) < nextPoint.labelRegion.y))) {\n                var newAngle = nextPoint.midAngle + count;\n                if (newAngle < 270 && newAngle > 90) {\n                    newAngle = 90;\n                    this.isIncreaseAngle = true;\n                    break;\n                }\n                this.changeLabelAngle(nextPoint, newAngle);\n                if (isOverlap(currentPoint.labelRegion, nextPoint.labelRegion) && (newAngle + 1 > 90 && newAngle + 1 < 270) &&\n                    this.rightSideRenderingPoints.indexOf(nextPoint) === this.rightSideRenderingPoints.length - 1) {\n                    this.changeLabelAngle(currentPoint, currentPoint.labelAngle - 1);\n                    nextPoint.labelRegion = nextPoint.initialLabelRegion;\n                    this.arrangeRightSidePoints(series);\n                    break;\n                }\n                if (count > 360) {\n                    break;\n                }\n                count++;\n            }\n        }\n        else {\n            while (isOverlap(currentPoint.labelRegion, nextPoint.labelRegion) || (!this.isVariousRadius() &&\n                (currentPoint.labelRegion.y < (nextPoint.labelRegion.y + nextPoint.labelRegion.height)))) {\n                var newAngle = nextPoint.midAngle + count;\n                if (!(newAngle < 270 && newAngle > 90)) {\n                    newAngle = 270;\n                    this.isIncreaseAngle = false;\n                    break;\n                }\n                this.changeLabelAngle(nextPoint, newAngle);\n                if (count > 360) {\n                    break;\n                }\n                count++;\n            }\n        }\n    };\n    AccumulationDataLabel.prototype.changeLabelAngle = function (currentPoint, newAngle) {\n        var dataLabel = this.accumulation.series[0].dataLabel;\n        var variableR;\n        if (this.isVariousRadius()) {\n            variableR = this.accumulation.pieSeriesModule.getLabelRadius(this.accumulation.visibleSeries[0], currentPoint);\n        }\n        //padding 10px is added to label radius for increasing the angle and avoid congestion.\n        var labelRadius = (currentPoint.labelPosition === 'Outside' && this.accumulation.enableSmartLabels &&\n            dataLabel.position === 'Inside') ?\n            this.radius + stringToNumber(dataLabel.connectorStyle.length || '4%', this.accumulation.pieSeriesModule.size / 2) :\n            (!this.isVariousRadius() ? this.accumulation.pieSeriesModule.labelRadius + 10 : variableR);\n        var radius = (!this.isVariousRadius() ? labelRadius : variableR);\n        this.getLabelRegion(currentPoint, 'Outside', currentPoint.textSize, radius, this.marginValue, newAngle);\n        currentPoint.isLabelUpdated = 1;\n        currentPoint.labelAngle = newAngle;\n    };\n    AccumulationDataLabel.prototype.isOverlapWithPrevious = function (currentPoint, points, currentPointIndex) {\n        for (var i = 0; i < currentPointIndex; i++) {\n            if (i !== points.indexOf(currentPoint) &&\n                points[i].visible && points[i].labelVisible &&\n                points[i].labelRegion && currentPoint.labelRegion &&\n                currentPoint.labelVisible && isOverlap(currentPoint.labelRegion, points[i].labelRegion)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    AccumulationDataLabel.prototype.isOverlapWithNext = function (point, points, pointIndex) {\n        for (var i = pointIndex; i < points.length; i++) {\n            if (i !== points.indexOf(point) && points[i].visible &&\n                points[i].labelVisible && points[i].labelRegion &&\n                point.labelRegion && point.labelVisible && isOverlap(point.labelRegion, points[i].labelRegion)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    AccumulationDataLabel.prototype.skipPoints = function (currentPoint, halfsidePoints, pointIndex) {\n        if (pointIndex > 0 && ((currentPoint.midAngle < 285 && currentPoint.midAngle > 255) ||\n            (currentPoint.midAngle < 105 && currentPoint.midAngle > 75))) {\n            var previousPoint = halfsidePoints[pointIndex - 1];\n            var angleDiff = currentPoint.endAngle % 360 - currentPoint.startAngle % 360;\n            var prevAngleDiff = previousPoint.endAngle % 360 - previousPoint.startAngle % 360;\n            if (prevAngleDiff <= angleDiff && angleDiff < 5 && previousPoint.labelVisible) {\n                this.setPointVisibleTrue(currentPoint);\n            }\n        }\n        else if (pointIndex > 1 && ((currentPoint.midAngle < 300 && currentPoint.midAngle > 240) ||\n            (currentPoint.midAngle < 120 && currentPoint.midAngle > 60))) {\n            var prevPoint = halfsidePoints[pointIndex - 1];\n            var secondPrevPoint = halfsidePoints[pointIndex - 2];\n            var angleDiff = currentPoint.endAngle % 360 - currentPoint.startAngle % 360;\n            var prevAngleDiff = prevPoint.endAngle % 360 - prevPoint.startAngle % 360;\n            var thirdAngleDiff = secondPrevPoint.endAngle % 360 - secondPrevPoint.startAngle % 360;\n            if (angleDiff < 3 && prevAngleDiff < 3 && thirdAngleDiff < 3 && prevPoint.labelVisible && currentPoint.labelVisible) {\n                this.setPointVisibleTrue(currentPoint);\n            }\n        }\n    };\n    AccumulationDataLabel.prototype.getPerpendicularDistance = function (startPoint, point) {\n        var increasedLocation;\n        var add = 10;\n        var height = add + 10 * Math.sin(point.midAngle * Math.PI / 360);\n        if (point.midAngle > 270 && point.midAngle < 360) {\n            increasedLocation = new ChartLocation(startPoint.x + height * (Math.cos((360 - point.midAngle) * Math.PI / 180)), startPoint.y - height * (Math.sin((360 - point.midAngle) * Math.PI / 180)));\n        }\n        else if (point.midAngle > 0 && point.midAngle < 90) {\n            increasedLocation = new ChartLocation(startPoint.x + height * (Math.cos((point.midAngle) * Math.PI / 180)), startPoint.y + height * (Math.sin((point.midAngle) * Math.PI / 180)));\n            // eslint-disable-next-line no-dupe-else-if\n        }\n        else if (point.midAngle > 0 && point.midAngle < 90) {\n            increasedLocation = new ChartLocation(startPoint.x - height * (Math.cos((point.midAngle - 90) * Math.PI / 180)), startPoint.y + height * (Math.sin((point.midAngle - 90) * Math.PI / 180)));\n        }\n        else {\n            increasedLocation = new ChartLocation(startPoint.x - height * (Math.cos((point.midAngle - 180) * Math.PI / 180)), startPoint.y - height * (Math.sin((point.midAngle - 180) * Math.PI / 180)));\n        }\n        return increasedLocation;\n    };\n    return AccumulationDataLabel;\n}(AccumulationBase));\nexport { AccumulationDataLabel };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}