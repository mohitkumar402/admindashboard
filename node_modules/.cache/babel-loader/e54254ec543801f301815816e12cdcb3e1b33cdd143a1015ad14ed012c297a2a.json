{"ast":null,"code":"import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement } from '../utils/helper';\nimport { afterExport } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap, SizeF, PdfStandardFont, PdfPageTemplateElement, PdfSolidBrush, PdfColor } from '@syncfusion/ej2-pdf-export';\n/** @private */\nvar ExportUtils = /** @class */function () {\n  /**\n   * Constructor for chart and accumulation annotation\n   *\n   * @param control\n   */\n  function ExportUtils(control) {\n    this.control = control;\n  }\n  /**\n   * To export the file as image/svg format.\n   *\n   * @param type\n   * @param fileName\n   */\n  ExportUtils.prototype.export = function (type, fileName, orientation, controls, width, height, isVertical, header, footer, exportToMultiplePage) {\n    var _this = this;\n    var controlValue = this.getControlsValue(controls, isVertical, exportToMultiplePage && type === 'PDF', type);\n    var canvasElements = [];\n    var controlWidth = [];\n    var controlHeight = [];\n    var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n    orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n    var _loop_1 = function (i) {\n      controlWidth.push(width ? width : controlValue[i].width);\n      controlHeight.push(height ? height : controlValue[i].height);\n      var element = controls[i].svgObject;\n      var isCanvas = controls[i].enableCanvas;\n      var image = void 0;\n      if (!isCanvas) {\n        element = createElement('canvas', {\n          id: 'ej2-canvas',\n          attrs: {\n            'width': controlWidth[i].toString(),\n            'height': controlHeight[i].toString()\n          }\n        });\n      }\n      var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' + controlValue[i].svg.outerHTML + '</svg>';\n      var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] : [new XMLSerializer().serializeToString(controlValue[i].svg)], {\n        type: 'image/svg+xml'\n      }));\n      if (type === 'SVG') {\n        if (Browser.info.name === 'msie') {\n          var svg = new Blob([new XMLSerializer().serializeToString(controlValue[i].svg)], {\n            type: 'application/octet-stream'\n          });\n          window.navigator.msSaveOrOpenBlob(svg, fileName + '.' + type.toLocaleLowerCase());\n        } else {\n          this_1.triggerDownload(fileName, type, url, isDownload);\n        }\n      } else if (Browser.info.name === 'msie') {\n        var canvas = element;\n        if (!isCanvas) {\n          canvas = this_1.createCanvas();\n        }\n        image = canvas.toDataURL();\n        canvasElements.push(element);\n        if (type === 'PDF') {\n          if (canvasElements.length === controlValue.length) {\n            this_1.exportPdf(canvasElements, orientation, controlWidth, controlHeight, isDownload, fileName, header, footer);\n          }\n        } else {\n          this_1.doexport(type, image, fileName);\n        }\n      } else {\n        var image_1 = new Image();\n        var ctx_1 = element.getContext('2d');\n        image_1.onload = function () {\n          ctx_1.drawImage(image_1, 0, 0);\n          window.URL.revokeObjectURL(url);\n          canvasElements.push(element);\n          if (type === 'PDF') {\n            if (canvasElements.length === controlValue.length) {\n              _this.exportPdf(canvasElements, orientation, controlWidth, controlHeight, isDownload, fileName, header, footer);\n            }\n          } else {\n            if (window.navigator.msSaveOrOpenBlob) {\n              window.navigator.msSaveOrOpenBlob(element.toBlob(null), fileName + '.' + type.toLocaleLowerCase());\n            } else {\n              _this.triggerDownload(fileName, type, element.toDataURL('image/' + type.toLowerCase()), isDownload);\n            }\n          }\n        };\n        image_1.src = url;\n      }\n      if (!isCanvas) {\n        removeElement(document.getElementById(controls[i].element.id + '_canvas'));\n      }\n    };\n    var this_1 = this;\n    for (var i = 0; i < controlValue.length; i++) {\n      _loop_1(i);\n    }\n  };\n  /**\n   * To get data url for charts.\n   *\n   * @param chart\n   */\n  ExportUtils.prototype.getDataUrl = function (chart) {\n    var controlValue = this.getControlsValue([chart]);\n    var element = this.control.svgObject;\n    var isCanvas = this.control.enableCanvas;\n    if (!isCanvas) {\n      element = createElement('canvas', {\n        id: 'ej2-canvas',\n        attrs: {\n          'width': controlValue[0].width.toString(),\n          'height': controlValue[0].height.toString()\n        }\n      });\n    }\n    var url = window.URL.createObjectURL(new Blob([new XMLSerializer().serializeToString(controlValue[0].svg)], {\n      type: 'image/svg+xml'\n    }));\n    if (Browser.info.name === 'msie') {\n      var canvas = element;\n      if (!isCanvas) {\n        canvas = this.createCanvas();\n      }\n      var argsData = {\n        name: afterExport,\n        cancel: false,\n        dataUrl: element.toDataURL('image/png')\n      };\n      chart.trigger(afterExport, argsData);\n      return {\n        element: canvas,\n        dataUrl: canvas.toDataURL()\n      };\n    } else {\n      var image_2 = new Image();\n      var ctx_2 = element.getContext('2d');\n      image_2.onload = function () {\n        ctx_2.drawImage(image_2, 0, 0);\n        window.URL.revokeObjectURL(url);\n        var argsData = {\n          name: afterExport,\n          cancel: false,\n          dataUrl: element.toDataURL('image/png')\n        };\n        chart.trigger(afterExport, argsData);\n        return argsData.dataUrl;\n      };\n      image_2.src = url;\n      return {\n        element: element,\n        blobUrl: url\n      };\n    }\n  };\n  /**\n   * To trigger the download element.\n   *\n   * @param fileName\n   * @param type\n   * @param url\n   */\n  ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n    createElement('a', {\n      attrs: {\n        'download': fileName + '.' + type.toLocaleLowerCase(),\n        'href': url\n      }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    }));\n  };\n  /**\n   * To get the maximum size value.\n   *\n   * @param {(Chart | RangeNavigator | AccumulationChart | StockChart | BulletChart | Chart3D | CircularChart3D)[]} controls - The array of controls to retrieve the maximum size value.\n   * @param {boolean} isVertical - Indicates whether the orientation is vertical.\n   * @param {boolean} isMultiPages - Indicates whether multiple pages are used.\n   * @param {ExportType} type - The type of export.\n   * @returns {IControlValue[]} - An array of control values.\n   */\n  ExportUtils.prototype.getControlsValue = function (controls, isVertical, isMultiPages, type) {\n    var width = 0;\n    var height = 0;\n    var svgObject = new SvgRenderer('').createSvg({\n      id: 'Svg_Export_Element',\n      width: 200,\n      height: 200\n    });\n    var controlValues = [];\n    var backgroundColor;\n    for (var i = 0; i < controls.length; i++) {\n      var control = controls[i];\n      if (control.enableRtl) {\n        svgObject.setAttribute('direction', 'rtl');\n      }\n      var isCanvas = control.enableCanvas;\n      var svg = control.svgObject.cloneNode(true);\n      var groupEle = control.renderer.createGroup({\n        style: isNullOrUndefined(isVertical) || isVertical ? 'transform: translateY(' + height + 'px)' : 'transform: translateX(' + width + 'px)'\n      });\n      backgroundColor = svg.childNodes[0] ? svg.childNodes[0].getAttribute('fill') : 'transparent';\n      if (backgroundColor === 'transparent') {\n        if (control.theme.indexOf('Dark') > -1 || control.theme.indexOf('HighContrast') > -1) {\n          backgroundColor = 'rgba(0, 0, 0, 1)';\n        } else {\n          backgroundColor = 'rgba(255, 255, 255, 1)';\n        }\n      }\n      if (!isCanvas) {\n        if (control.getModuleName() === 'stockChart') {\n          svg.childNodes[0].firstChild.setAttribute('fill', backgroundColor);\n          for (var index = 1; index < svg.childNodes.length; index++) {\n            svg.childNodes[index].childNodes[0].setAttribute('fill', backgroundColor);\n          }\n        } else if (type === 'SVG') {\n          svg.childNodes[0].setAttribute('fill', backgroundColor);\n        }\n        groupEle.appendChild(svg);\n      }\n      var top_1 = 0;\n      var left = 0;\n      if (control.stockLegendModule && control.legendSettings.visible) {\n        if (control.legendSettings.position === 'Bottom' || control.legendSettings.position === 'Top' || control.legendSettings.position === 'Auto') {\n          top_1 += control.stockLegendModule.legendBounds.height;\n        } else if (control.legendSettings.position === 'Left' || control.legendSettings.position === 'Right') {\n          left += control.stockLegendModule.legendBounds.width;\n        }\n      }\n      width = isNullOrUndefined(isVertical) || isVertical ? Math.max(control.availableSize.width + left, width) : width + control.availableSize.width + left;\n      height = isNullOrUndefined(isVertical) || isVertical ? height + control.availableSize.height + top_1 : Math.max(control.availableSize.height + top_1, height);\n      if (!isCanvas) {\n        svgObject.appendChild(groupEle);\n      }\n      if (isMultiPages || i === controls.length - 1) {\n        if (!isMultiPages && !this.control.enableCanvas || isMultiPages && !isCanvas) {\n          svgObject.setAttribute('width', width + '');\n          svgObject.setAttribute('height', height + '');\n          svgObject.style.backgroundColor = backgroundColor;\n        }\n        controlValues.push({\n          'width': width,\n          'height': height,\n          'svg': svgObject\n        });\n      }\n      if (isMultiPages && i < controls.length) {\n        width = 0;\n        height = 0;\n        svgObject = new SvgRenderer('').createSvg({\n          id: 'Svg_Export_Element',\n          width: 200,\n          height: 200\n        });\n      }\n    }\n    return controlValues;\n  };\n  ExportUtils.prototype.createCanvas = function () {\n    var chart = this.control;\n    this.canvasRender(true, chart);\n    var canvas = chart.svgObject;\n    this.canvasRender(false, chart);\n    return canvas;\n  };\n  /**\n   * To convert svg chart into canvas chart to fix export issue in IE\n   * We cant export svg to other formats in IE\n   *\n   * @param enableCanvas\n   * @param chart\n   * @param enableCanvas\n   * @param chart\n   */\n  ExportUtils.prototype.canvasRender = function (enableCanvas, chart) {\n    chart.enableCanvas = enableCanvas;\n    chart['preRender']();\n    chart['render']();\n  };\n  ExportUtils.prototype.exportPdf = function (element, orientation, width, height, isDownload, fileName, header, footer) {\n    var document = new PdfDocument();\n    var margin = document.pageSettings.margins;\n    var pdfDefaultWidth = document.pageSettings.width;\n    var pdfDefaultHeight = document.pageSettings.height;\n    for (var i = 0; element.length > i; i++) {\n      var imageString = element[i].toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n      document.pageSettings.orientation = orientation;\n      var exactWidth = pdfDefaultWidth < width[i] ? width[i] + margin.left + margin.right : pdfDefaultWidth;\n      var exactHeight = orientation === 0 && pdfDefaultHeight > height[i] ? width[i] + margin.left + margin.right : pdfDefaultHeight < height[i] ? height[i] + margin.top + margin.bottom : pdfDefaultHeight;\n      if (header !== undefined) {\n        var font = new PdfStandardFont(1, header.fontSize || 15);\n        var pdfHeader = new PdfPageTemplateElement(exactWidth, 30);\n        pdfHeader.graphics.drawString(header.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), header.x, header.y, null);\n        document.template.top = pdfHeader;\n      }\n      if (footer !== undefined) {\n        var font = new PdfStandardFont(1, footer.fontSize || 15);\n        var pdfFooter = new PdfPageTemplateElement(exactWidth, 30);\n        pdfFooter.graphics.drawString(footer.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), footer.x, footer.y, null);\n        document.template.bottom = pdfFooter;\n      }\n      document.pageSettings.size = new SizeF(exactWidth, exactHeight);\n      imageString = imageString.slice(imageString.indexOf(',') + 1);\n      document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, width[i], height[i]);\n    }\n    if (isDownload) {\n      document.save(fileName + '.pdf');\n      document.destroy();\n    }\n  };\n  ExportUtils.prototype.doexport = function (type, image, fileName) {\n    var images = [];\n    var fileType = type || 'JPG';\n    images = [image];\n    this.exportImage(images, fileName, fileType, image);\n  };\n  /**\n   * Exports the given images as a file with the specified name and type.\n   *\n   * @param {string[] | HTMLElement} images - The images to be exported. Can be an array of image URLs or an HTML element containing the image.\n   * @param {string} fileName - The name of the exported file.\n   * @param {string} fileType - The type of the exported file (e.g., 'png', 'jpeg').\n   * @param {string} image - The image data to be used for export.\n   * @returns {void}\n   * @private\n   */\n  ExportUtils.prototype.exportImage = function (images, fileName, fileType, image) {\n    var buffers = [];\n    var length = !(images instanceof HTMLElement) ? images.length : 0;\n    for (var g = 0; g < length; g++) {\n      image = images[g];\n      image = image.replace(/^data:[a-z]*;,/, '');\n      var image1 = image.split(',');\n      var byteString = atob(image1[1]);\n      var buffer = new ArrayBuffer(byteString.length);\n      var intArray = new Uint8Array(buffer);\n      for (var i = 0; i < byteString.length; i++) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n      buffers.push(buffer);\n    }\n    for (var j = 0; j < buffers.length; j++) {\n      var b = new Blob([buffers[j]], {\n        type: 'application/octet-stream'\n      });\n      if (Browser.info.name === 'msie') {\n        window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType.toLocaleLowerCase());\n      }\n    }\n  };\n  return ExportUtils;\n}();\nexport { ExportUtils };","map":{"version":3,"names":["createElement","isNullOrUndefined","Browser","SvgRenderer","removeElement","afterExport","PdfPageOrientation","PdfDocument","PdfBitmap","SizeF","PdfStandardFont","PdfPageTemplateElement","PdfSolidBrush","PdfColor","ExportUtils","control","prototype","export","type","fileName","orientation","controls","width","height","isVertical","header","footer","exportToMultiplePage","_this","controlValue","getControlsValue","canvasElements","controlWidth","controlHeight","isDownload","userAgent","toString","indexOf","Landscape","_loop_1","i","push","element","svgObject","isCanvas","enableCanvas","image","id","attrs","svgData","svg","outerHTML","url","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","info","name","navigator","msSaveOrOpenBlob","toLocaleLowerCase","this_1","triggerDownload","canvas","createCanvas","toDataURL","length","exportPdf","doexport","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","toBlob","toLowerCase","src","document","getElementById","getDataUrl","chart","argsData","cancel","dataUrl","trigger","image_2","ctx_2","blobUrl","dispatchEvent","MouseEvent","view","bubbles","cancelable","isMultiPages","createSvg","controlValues","backgroundColor","enableRtl","setAttribute","cloneNode","groupEle","renderer","createGroup","style","childNodes","getAttribute","theme","getModuleName","firstChild","index","appendChild","top_1","left","stockLegendModule","legendSettings","visible","position","legendBounds","Math","max","availableSize","canvasRender","margin","pageSettings","margins","pdfDefaultWidth","pdfDefaultHeight","imageString","replace","exactWidth","right","exactHeight","top","bottom","undefined","font","fontSize","pdfHeader","graphics","drawString","content","x","y","template","pdfFooter","size","slice","pages","add","save","destroy","images","fileType","exportImage","buffers","HTMLElement","g","image1","split","byteString","atob","buffer","ArrayBuffer","intArray","Uint8Array","charCodeAt","j","b"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/common/utils/export.js"],"sourcesContent":["import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement } from '../utils/helper';\nimport { afterExport } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap, SizeF, PdfStandardFont, PdfPageTemplateElement, PdfSolidBrush, PdfColor } from '@syncfusion/ej2-pdf-export';\n/** @private */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for chart and accumulation annotation\n     *\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format.\n     *\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation, controls, width, height, isVertical, header, footer, exportToMultiplePage) {\n        var _this = this;\n        var controlValue = this.getControlsValue(controls, isVertical, (exportToMultiplePage && type === 'PDF'), type);\n        var canvasElements = [];\n        var controlWidth = [];\n        var controlHeight = [];\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var _loop_1 = function (i) {\n            controlWidth.push(width ? width : controlValue[i].width);\n            controlHeight.push(height ? height : controlValue[i].height);\n            var element = controls[i].svgObject;\n            var isCanvas = controls[i].enableCanvas;\n            var image = void 0;\n            if (!isCanvas) {\n                element = createElement('canvas', {\n                    id: 'ej2-canvas',\n                    attrs: {\n                        'width': controlWidth[i].toString(),\n                        'height': controlHeight[i].toString()\n                    }\n                });\n            }\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                controlValue[i].svg.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(controlValue[i].svg)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (Browser.info.name === 'msie') {\n                    var svg = new Blob([(new XMLSerializer()).serializeToString(controlValue[i].svg)], { type: 'application/octet-stream' });\n                    window.navigator.msSaveOrOpenBlob(svg, fileName + '.' + type.toLocaleLowerCase());\n                }\n                else {\n                    this_1.triggerDownload(fileName, type, url, isDownload);\n                }\n            }\n            else if (Browser.info.name === 'msie') {\n                var canvas = element;\n                if (!isCanvas) {\n                    canvas = this_1.createCanvas();\n                }\n                image = canvas.toDataURL();\n                canvasElements.push(element);\n                if (type === 'PDF') {\n                    if (canvasElements.length === controlValue.length) {\n                        this_1.exportPdf(canvasElements, orientation, controlWidth, controlHeight, isDownload, fileName, header, footer);\n                    }\n                }\n                else {\n                    this_1.doexport(type, image, fileName);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var ctx_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    ctx_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    canvasElements.push(element);\n                    if (type === 'PDF') {\n                        if (canvasElements.length === controlValue.length) {\n                            _this.exportPdf(canvasElements, orientation, controlWidth, controlHeight, isDownload, fileName, header, footer);\n                        }\n                    }\n                    else {\n                        if (window.navigator.msSaveOrOpenBlob) {\n                            window.navigator.msSaveOrOpenBlob(element.toBlob(null), fileName + '.' + type.toLocaleLowerCase());\n                        }\n                        else {\n                            _this.triggerDownload(fileName, type, element.toDataURL('image/' + type.toLowerCase()), isDownload);\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n            if (!isCanvas) {\n                removeElement(document.getElementById(controls[i].element.id + '_canvas'));\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < controlValue.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To get data url for charts.\n     *\n     * @param chart\n     */\n    ExportUtils.prototype.getDataUrl = function (chart) {\n        var controlValue = this.getControlsValue([chart]);\n        var element = this.control.svgObject;\n        var isCanvas = this.control.enableCanvas;\n        if (!isCanvas) {\n            element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': controlValue[0].width.toString(),\n                    'height': controlValue[0].height.toString()\n                }\n            });\n        }\n        var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(controlValue[0].svg)], { type: 'image/svg+xml' }));\n        if (Browser.info.name === 'msie') {\n            var canvas = element;\n            if (!isCanvas) {\n                canvas = this.createCanvas();\n            }\n            var argsData = {\n                name: afterExport, cancel: false, dataUrl: element.toDataURL('image/png')\n            };\n            chart.trigger(afterExport, argsData);\n            return { element: canvas, dataUrl: canvas.toDataURL() };\n        }\n        else {\n            var image_2 = new Image();\n            var ctx_2 = element.getContext('2d');\n            image_2.onload = (function () {\n                ctx_2.drawImage(image_2, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var argsData = {\n                    name: afterExport, cancel: false, dataUrl: element.toDataURL('image/png')\n                };\n                chart.trigger(afterExport, argsData);\n                return argsData.dataUrl;\n            });\n            image_2.src = url;\n            return { element: element, blobUrl: url };\n        }\n    };\n    /**\n     * To trigger the download element.\n     *\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    /**\n     * To get the maximum size value.\n     *\n     * @param {(Chart | RangeNavigator | AccumulationChart | StockChart | BulletChart | Chart3D | CircularChart3D)[]} controls - The array of controls to retrieve the maximum size value.\n     * @param {boolean} isVertical - Indicates whether the orientation is vertical.\n     * @param {boolean} isMultiPages - Indicates whether multiple pages are used.\n     * @param {ExportType} type - The type of export.\n     * @returns {IControlValue[]} - An array of control values.\n     */\n    ExportUtils.prototype.getControlsValue = function (controls, isVertical, isMultiPages, type) {\n        var width = 0;\n        var height = 0;\n        var svgObject = new SvgRenderer('').createSvg({\n            id: 'Svg_Export_Element',\n            width: 200, height: 200\n        });\n        var controlValues = [];\n        var backgroundColor;\n        for (var i = 0; i < controls.length; i++) {\n            var control = controls[i];\n            if (control.enableRtl) {\n                svgObject.setAttribute('direction', 'rtl');\n            }\n            var isCanvas = control.enableCanvas;\n            var svg = control.svgObject.cloneNode(true);\n            var groupEle = control.renderer.createGroup({\n                style: (isNullOrUndefined(isVertical) || isVertical) ? 'transform: translateY(' + height + 'px)' :\n                    'transform: translateX(' + width + 'px)'\n            });\n            backgroundColor = svg.childNodes[0] ? svg.childNodes[0].getAttribute('fill') : 'transparent';\n            if (backgroundColor === 'transparent') {\n                if (control.theme.indexOf('Dark') > -1 || control.theme.indexOf('HighContrast') > -1) {\n                    backgroundColor = 'rgba(0, 0, 0, 1)';\n                }\n                else {\n                    backgroundColor = 'rgba(255, 255, 255, 1)';\n                }\n            }\n            if (!isCanvas) {\n                if (control.getModuleName() === 'stockChart') {\n                    svg.childNodes[0].firstChild.setAttribute('fill', backgroundColor);\n                    for (var index = 1; index < svg.childNodes.length; index++) {\n                        svg.childNodes[index].childNodes[0].setAttribute('fill', backgroundColor);\n                    }\n                }\n                else if (type === 'SVG') {\n                    svg.childNodes[0].setAttribute('fill', backgroundColor);\n                }\n                groupEle.appendChild(svg);\n            }\n            var top_1 = 0;\n            var left = 0;\n            if (control.stockLegendModule && control.legendSettings.visible) {\n                if (control.legendSettings.position === 'Bottom' || control.legendSettings.position === 'Top'\n                    || control.legendSettings.position === 'Auto') {\n                    top_1 += control.stockLegendModule.legendBounds.height;\n                }\n                else if (control.legendSettings.position === 'Left' || control.legendSettings.position === 'Right') {\n                    left += control.stockLegendModule.legendBounds.width;\n                }\n            }\n            width = (isNullOrUndefined(isVertical) || isVertical) ? Math.max(control.availableSize.width + left, width) :\n                width + control.availableSize.width + left;\n            height = (isNullOrUndefined(isVertical) || isVertical) ? height + control.availableSize.height + top_1 :\n                Math.max(control.availableSize.height + top_1, height);\n            if (!isCanvas) {\n                svgObject.appendChild(groupEle);\n            }\n            if (isMultiPages || i === controls.length - 1) {\n                if ((!isMultiPages && !(this.control.enableCanvas)) || (isMultiPages && !isCanvas)) {\n                    svgObject.setAttribute('width', width + '');\n                    svgObject.setAttribute('height', height + '');\n                    svgObject.style.backgroundColor = backgroundColor;\n                }\n                controlValues.push({\n                    'width': width,\n                    'height': height,\n                    'svg': svgObject\n                });\n            }\n            if (isMultiPages && (i < controls.length)) {\n                width = 0;\n                height = 0;\n                svgObject = new SvgRenderer('').createSvg({\n                    id: 'Svg_Export_Element',\n                    width: 200, height: 200\n                });\n            }\n        }\n        return controlValues;\n    };\n    ExportUtils.prototype.createCanvas = function () {\n        var chart = this.control;\n        this.canvasRender(true, chart);\n        var canvas = chart.svgObject;\n        this.canvasRender(false, chart);\n        return canvas;\n    };\n    /**\n     * To convert svg chart into canvas chart to fix export issue in IE\n     * We cant export svg to other formats in IE\n     *\n     * @param enableCanvas\n     * @param chart\n     * @param enableCanvas\n     * @param chart\n     */\n    ExportUtils.prototype.canvasRender = function (enableCanvas, chart) {\n        chart.enableCanvas = enableCanvas;\n        chart['preRender']();\n        chart['render']();\n    };\n    ExportUtils.prototype.exportPdf = function (element, orientation, width, height, isDownload, fileName, header, footer) {\n        var document = new PdfDocument();\n        var margin = document.pageSettings.margins;\n        var pdfDefaultWidth = document.pageSettings.width;\n        var pdfDefaultHeight = document.pageSettings.height;\n        for (var i = 0; element.length > i; i++) {\n            var imageString = element[i].toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n            document.pageSettings.orientation = orientation;\n            var exactWidth = (pdfDefaultWidth < width[i]) ? (width[i] + margin.left + margin.right) :\n                pdfDefaultWidth;\n            var exactHeight = (orientation === 0 && pdfDefaultHeight > height[i]) ?\n                (width[i] + margin.left + margin.right) : (pdfDefaultHeight < height[i]) ?\n                (height[i] + margin.top + margin.bottom) : pdfDefaultHeight;\n            if (header !== undefined) {\n                var font = new PdfStandardFont(1, header.fontSize || 15);\n                var pdfHeader = new PdfPageTemplateElement(exactWidth, 30);\n                pdfHeader.graphics.drawString(header.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), header.x, header.y, null);\n                document.template.top = pdfHeader;\n            }\n            if (footer !== undefined) {\n                var font = new PdfStandardFont(1, footer.fontSize || 15);\n                var pdfFooter = new PdfPageTemplateElement(exactWidth, 30);\n                pdfFooter.graphics.drawString(footer.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), footer.x, footer.y, null);\n                document.template.bottom = pdfFooter;\n            }\n            document.pageSettings.size = new SizeF(exactWidth, exactHeight);\n            imageString = imageString.slice(imageString.indexOf(',') + 1);\n            document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, width[i], height[i]);\n        }\n        if (isDownload) {\n            document.save(fileName + '.pdf');\n            document.destroy();\n        }\n    };\n    ExportUtils.prototype.doexport = function (type, image, fileName) {\n        var images = [];\n        var fileType = type || 'JPG';\n        images = [image];\n        this.exportImage(images, fileName, fileType, image);\n    };\n    /**\n     * Exports the given images as a file with the specified name and type.\n     *\n     * @param {string[] | HTMLElement} images - The images to be exported. Can be an array of image URLs or an HTML element containing the image.\n     * @param {string} fileName - The name of the exported file.\n     * @param {string} fileType - The type of the exported file (e.g., 'png', 'jpeg').\n     * @param {string} image - The image data to be used for export.\n     * @returns {void}\n     * @private\n     */\n    ExportUtils.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        for (var j = 0; j < buffers.length; j++) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType.toLocaleLowerCase());\n            }\n        }\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}