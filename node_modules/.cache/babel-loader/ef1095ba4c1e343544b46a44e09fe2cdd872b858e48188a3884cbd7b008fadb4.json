{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Browser } from '@syncfusion/ej2-base';\nimport { rotateTextSize, firstToLowerCase, isBreakLabel, getTitle } from '../../common/utils/helper';\nimport { Size, Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Double3D } from '../axis/double-axis';\nimport { axisRangeCalculated } from '../../common/model/constants';\nimport { textWrap } from '../../common/utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Chart3DTextFont } from '../model/chart3d-Interface';\nimport { valueToCoefficients } from '../utils/chart3dRender';\n/**\n * Configures the `rows` of the chart.\n */\nvar Chart3DRow = /** @class */function (_super) {\n  __extends(Chart3DRow, _super);\n  function Chart3DRow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n    _this.axes = [];\n    /** @private */\n    _this.nearSizes = [];\n    /** @private */\n    _this.farSizes = [];\n    return _this;\n  }\n  /**\n   * Computes the size for a three-dimensional axis, row, or column within the 3D chart.\n   *\n   * @param {Chart3DAxis} axis - The three-dimensional axis to compute the size for.\n   * @param {Chart3D} chart - The 3D chart containing the axis and data definitions.\n   * @returns {void}\n   */\n  Chart3DRow.prototype.computeSize = function (axis, chart) {\n    var width = 0;\n    var innerPadding = 5;\n    if (axis.visible && axis.internalVisibility) {\n      width += axis.majorTickLines.height + axis.findLabelSize(innerPadding, chart);\n    }\n    if (axis.isAxisOpposedPosition) {\n      this.farSizes.push(width);\n    } else {\n      this.nearSizes.push(width);\n    }\n  };\n  __decorate([Property('100%')], Chart3DRow.prototype, \"height\", void 0);\n  return Chart3DRow;\n}(ChildProperty);\nexport { Chart3DRow };\n/**\n * Configures the `columns` of the chart.\n */\nvar Chart3DColumn = /** @class */function (_super) {\n  __extends(Chart3DColumn, _super);\n  function Chart3DColumn() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n    _this.axes = [];\n    /** @private */\n    _this.nearSizes = [];\n    /** @private */\n    _this.farSizes = [];\n    return _this;\n  }\n  /**\n   * Computes the size for a three-dimensional axis, row, or column within the 3D chart.\n   *\n   * @param {Chart3DAxis} axis - The three-dimensional axis to compute the size for.\n   * @param {Chart3D} chart - The 3D chart containing the axis and data definitions.\n   * @returns {void}\n   */\n  Chart3DColumn.prototype.computeSize = function (axis, chart) {\n    var height = 0;\n    var innerPadding = 5;\n    if (axis.visible && axis.internalVisibility) {\n      height += axis.majorTickLines.height + axis.findLabelSize(innerPadding, chart);\n    }\n    if (axis.isAxisOpposedPosition) {\n      this.farSizes.push(height);\n    } else {\n      this.nearSizes.push(height);\n    }\n  };\n  __decorate([Property('100%')], Chart3DColumn.prototype, \"width\", void 0);\n  return Chart3DColumn;\n}(ChildProperty);\nexport { Chart3DColumn };\n/**\n * Configures the major grid lines in the `axis`.\n */\nvar Chart3DMajorGridLines = /** @class */function (_super) {\n  __extends(Chart3DMajorGridLines, _super);\n  function Chart3DMajorGridLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(1)], Chart3DMajorGridLines.prototype, \"width\", void 0);\n  __decorate([Property(null)], Chart3DMajorGridLines.prototype, \"color\", void 0);\n  return Chart3DMajorGridLines;\n}(ChildProperty);\nexport { Chart3DMajorGridLines };\n/**\n * Configures the minor grid lines in the `axis`.\n */\nvar Chart3DMinorGridLines = /** @class */function (_super) {\n  __extends(Chart3DMinorGridLines, _super);\n  function Chart3DMinorGridLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(0.7)], Chart3DMinorGridLines.prototype, \"width\", void 0);\n  __decorate([Property(null)], Chart3DMinorGridLines.prototype, \"color\", void 0);\n  return Chart3DMinorGridLines;\n}(ChildProperty);\nexport { Chart3DMinorGridLines };\n/**\n * Configures the major tick lines.\n */\nvar Chart3DMajorTickLines = /** @class */function (_super) {\n  __extends(Chart3DMajorTickLines, _super);\n  function Chart3DMajorTickLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(0)], Chart3DMajorTickLines.prototype, \"width\", void 0);\n  __decorate([Property(5)], Chart3DMajorTickLines.prototype, \"height\", void 0);\n  __decorate([Property(null)], Chart3DMajorTickLines.prototype, \"color\", void 0);\n  return Chart3DMajorTickLines;\n}(ChildProperty);\nexport { Chart3DMajorTickLines };\n/**\n * Configures the minor tick lines.\n */\nvar Chart3DMinorTickLines = /** @class */function (_super) {\n  __extends(Chart3DMinorTickLines, _super);\n  function Chart3DMinorTickLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(0)], Chart3DMinorTickLines.prototype, \"width\", void 0);\n  __decorate([Property(5)], Chart3DMinorTickLines.prototype, \"height\", void 0);\n  __decorate([Property(null)], Chart3DMinorTickLines.prototype, \"color\", void 0);\n  return Chart3DMinorTickLines;\n}(ChildProperty);\nexport { Chart3DMinorTickLines };\n/**\n * Configures the axes in the chart.\n *\n * @public\n */\nvar Chart3DAxis = /** @class */function (_super) {\n  __extends(Chart3DAxis, _super);\n  function Chart3DAxis(parent, propName, defaultValue, isArray) {\n    var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n    /** @private */\n    _this.visibleLabels = [];\n    /** @private */\n    _this.series = [];\n    /** @private */\n    _this.rect = new Rect(undefined, undefined, 0, 0);\n    /** @private */\n    _this.isStack100 = false;\n    /** @private */\n    _this.updatedRect = null;\n    /** @private */\n    _this.isIntervalInDecimal = true;\n    /** @private */\n    _this.intervalDivs = [10, 5, 2, 1];\n    /** @private */\n    _this.titleCollection = [];\n    /** @private */\n    _this.titleSize = new Size(0, 0);\n    /**\n     * This property used to hide the axis when series hide from legend click.\n     *\n     * @private\n     */\n    _this.internalVisibility = true;\n    /**\n     * This property is used to place the vertical axis in opposed position and horizontal axis in inversed.\n     * when RTL is enabled in chart\n     *\n     * @private */\n    _this.isRTLEnabled = false;\n    _this.angle = _this.labelRotation;\n    return _this;\n  }\n  /**\n   * Finds the size of labels with specified inner padding within the 3D chart.\n   *\n   * @param {number} innerPadding - The inner padding value for labels.\n   * @param {Chart3D} chart - The 3D chart for which label size is calculated.\n   * @returns {number} - The size of labels accounting for the inner padding.\n   */\n  Chart3DAxis.prototype.findLabelSize = function (innerPadding, chart) {\n    var titleSize = 0;\n    var isHorizontal = this.orientation === 'Horizontal';\n    if (this.title) {\n      var angle = this.titleRotation;\n      if (isNullOrUndefined(angle)) {\n        this.titleSize = measureText(this.title, this.titleStyle, chart.themeStyle.axisTitleFont);\n        titleSize = this.titleSize.height + innerPadding;\n      } else {\n        this.titleSize = rotateTextSize(this.titleStyle, this.title, angle, chart, chart.themeStyle.axisTitleFont);\n        titleSize = (this.orientation === 'Vertical' ? this.titleSize.width : this.titleSize.height) + innerPadding;\n      }\n      if (this.rect.width || this.rect.height) {\n        var length_1 = isHorizontal ? this.rect.width : this.rect.height;\n        this.titleCollection = getTitle(this.title, this.titleStyle, length_1, chart.enableRtl, chart.themeStyle.axisTitleFont);\n        titleSize = titleSize * this.titleCollection.length;\n      }\n    }\n    var labelSize = titleSize + innerPadding + this.titlePadding + this.labelPadding + (this.orientation === 'Vertical' ? this.maxLabelSize.width : this.maxLabelSize.height);\n    return labelSize;\n  };\n  /**\n   * Triggers the axis range calculated event with specified minimum, maximum, and interval values.\n   *\n   * @param {Chart3D} chart - The 3D chart for which the range is being calculated.\n   * @param {number} minimum - The minimum value of the range.\n   * @param {number} maximum - The maximum value of the range.\n   * @param {number} interval - The interval value for the range.\n   * @returns {void}\n   */\n  Chart3DAxis.prototype.triggerRangeRender = function (chart, minimum, maximum, interval) {\n    var argsData = {\n      cancel: false,\n      axis: this,\n      minimum: minimum,\n      maximum: maximum,\n      interval: interval\n    };\n    chart.trigger(axisRangeCalculated, argsData);\n    if (!argsData.cancel) {\n      this.visibleRange = {\n        min: argsData.minimum,\n        max: argsData.maximum,\n        interval: argsData.interval,\n        delta: argsData.maximum - argsData.minimum\n      };\n    }\n  };\n  /**\n   * Calculate padding for the axis.\n   *\n   * @param {Chart3D} chart - Chart instance.\n   * @returns {string} - Padding value.\n   * @private\n   */\n  Chart3DAxis.prototype.getRangePadding = function (chart) {\n    var padding = this.rangePadding;\n    if (padding !== 'Auto') {\n      return padding;\n    }\n    switch (this.orientation) {\n      case 'Horizontal':\n        if (chart.requireInvertedAxis) {\n          padding = this.isStack100 ? 'Round' : 'Normal';\n        } else {\n          padding = 'None';\n        }\n        break;\n      case 'Vertical':\n        if (!chart.requireInvertedAxis) {\n          padding = this.isStack100 ? 'Round' : 'Normal';\n        } else {\n          padding = 'None';\n        }\n        break;\n    }\n    return padding;\n  };\n  /**\n   * Calculate maximum label width for the axis.\n   *\n   * @param {Chart3D} chart - Chart instance.\n   * @returns {void}\n   * @private\n   */\n  Chart3DAxis.prototype.getMaxLabelWidth = function (chart) {\n    var pointX;\n    var previousEnd = 0;\n    var isIntersect = false;\n    var isAxisLabelBreak;\n    this.angle = this.labelRotation;\n    this.maxLabelSize = new Size(0, 0);\n    var action = this.labelIntersectAction;\n    var label;\n    for (var i = 0, len = this.visibleLabels.length; i < len; i++) {\n      label = this.visibleLabels[i];\n      isAxisLabelBreak = isBreakLabel(label.originalText);\n      if (isAxisLabelBreak) {\n        label.size = measureText(label.originalText.replace(/<br>/g, ' '), this.labelStyle, chart.themeStyle.axisLabelFont);\n        label.breakLabelSize = measureText(this.enableTrim ? label.text.join('<br>') : label.originalText, this.labelStyle, chart.themeStyle.axisLabelFont);\n      } else {\n        label.size = measureText(label.text, this.labelStyle, chart.themeStyle.axisLabelFont);\n      }\n      var width = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\n      if (width > this.maxLabelSize.width) {\n        this.maxLabelSize.width = width;\n        this.rotatedLabel = label.text;\n      }\n      var height = isAxisLabelBreak ? label.breakLabelSize.height : label.size.height;\n      if (height > this.maxLabelSize.height) {\n        this.maxLabelSize.height = height;\n      }\n      if (isAxisLabelBreak) {\n        label.text = this.enableTrim ? label.text : label.originalText.split('<br>');\n      }\n      if (action === 'None' || action === 'Hide' || action === 'Trim') {\n        continue;\n      }\n      if ((action !== 'None' || this.angle % 360 === 0) && this.orientation === 'Horizontal' && this.rect.width > 0 && !isIntersect) {\n        var width1 = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\n        pointX = valueToCoefficients(label.value, this) * this.rect.width + this.rect.x;\n        pointX -= width1 / 2;\n        if (this.edgeLabelPlacement === 'Shift') {\n          if (i === 0 && pointX < this.rect.x) {\n            pointX = this.rect.x;\n          }\n          if (i === this.visibleLabels.length - 1 && pointX + width1 > this.rect.x + this.rect.width) {\n            pointX = this.rect.x + this.rect.width - width1;\n          }\n        }\n        switch (action) {\n          case 'MultipleRows':\n            if (i > 0) {\n              this.findMultiRows(i, pointX, label, isAxisLabelBreak);\n            }\n            break;\n          case 'Rotate45':\n          case 'Rotate90':\n            if (i > 0 && (!this.isAxisInverse ? pointX <= previousEnd : pointX + width1 >= previousEnd)) {\n              this.angle = action === 'Rotate45' ? 45 : 90;\n              isIntersect = true;\n            }\n            break;\n          default:\n            {\n              if (isAxisLabelBreak) {\n                var result = void 0;\n                var result1 = [];\n                var str = void 0;\n                for (var index = 0; index < label.text.length; index++) {\n                  result = textWrap(label.text[index], this.rect.width / this.visibleLabels.length, this.labelStyle, chart.enableRtl, null, null, chart.themeStyle.axisLabelFont);\n                  if (result.length > 1) {\n                    for (var j = 0; j < result.length; j++) {\n                      str = result[j];\n                      result1.push(str);\n                    }\n                  } else {\n                    result1.push(result[0]);\n                  }\n                }\n                label.text = result1;\n              } else {\n                label.text = textWrap(label.text, this.rect.width / this.visibleLabels.length, this.labelStyle, chart.enableRtl, null, null, chart.themeStyle.axisLabelFont);\n              }\n              var height_1 = label.size.height * label.text.length;\n              if (height_1 > this.maxLabelSize.height) {\n                this.maxLabelSize.height = height_1;\n              }\n              break;\n            }\n        }\n        previousEnd = this.isAxisInverse ? pointX : pointX + width1;\n      }\n    }\n    if (this.angle !== 0 && this.orientation === 'Horizontal') {\n      this.rotatedLabel = isNullOrUndefined(this.rotatedLabel) ? '' : this.rotatedLabel;\n      var isHorizontalAngle = this.angle === -360 || this.angle === 0 || this.angle === -180 || this.angle === 180 || this.angle === 360;\n      if (!isHorizontalAngle && isBreakLabel(this.rotatedLabel)) {\n        this.maxLabelSize = new Size(this.maxLabelSize.height, this.maxLabelSize.width);\n      }\n      this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart, chart.themeStyle.axisLabelFont);\n    } else if (this.angle !== 0 && this.orientation === 'Vertical') {\n      this.rotatedLabel = isNullOrUndefined(this.rotatedLabel) ? '' : this.rotatedLabel;\n      var isHorizontalAngle = this.angle === -360 || this.angle === 0 || this.angle === -180 || this.angle === 180 || this.angle === 360;\n      // To avoid overlap axis label with chart title or chart legend when it is outside.\n      if (!isHorizontalAngle && isBreakLabel(this.rotatedLabel)) {\n        this.maxLabelSize = new Size(this.maxLabelSize.height, this.maxLabelSize.width);\n      }\n      this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart, chart.themeStyle.axisLabelFont);\n    }\n  };\n  /**\n   * Finds and manages multiple rows for labels within the 3D chart axis.\n   *\n   * @param {number} length - The length of the labels to be considered.\n   * @param {number} currentX - The current X position.\n   * @param {Visible3DLabels} currentLabel - The label for which multiple rows are being determined.\n   * @param {boolean} isBreakLabels - Indicates whether the labels are break labels.\n   * @returns {void}\n   */\n  Chart3DAxis.prototype.findMultiRows = function (length, currentX, currentLabel, isBreakLabels) {\n    var label;\n    var pointX;\n    var width2;\n    var store = [];\n    var isMultiRows;\n    for (var i = length - 1; i >= 0; i--) {\n      label = this.visibleLabels[i];\n      width2 = isBreakLabels ? label.breakLabelSize.width : label.size.width;\n      pointX = valueToCoefficients(label.value, this) * this.rect.width + this.rect.x;\n      isMultiRows = !this.isAxisInverse ? currentX < pointX + width2 * 0.5 : currentX + currentLabel.size.width > pointX - width2 * 0.5;\n      if (isMultiRows) {\n        store.push(label.index);\n        currentLabel.index = currentLabel.index > label.index ? currentLabel.index : label.index + 1;\n      } else {\n        currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\n      }\n    }\n    var height = (isBreakLabels ? currentLabel.breakLabelSize.height : currentLabel.size.height) * currentLabel.index + 5 * (currentLabel.index - 1);\n    if (height > this.maxLabelSize.height) {\n      this.maxLabelSize.height = height;\n    }\n  };\n  /**\n   * Finds the default module for axis.\n   *\n   * @param {Chart3D} chart - Chart instance.\n   * @returns {void}\n   * @private\n   */\n  Chart3DAxis.prototype.getModule = function (chart) {\n    if (this.valueType === 'Double') {\n      this.baseModule = new Double3D(chart);\n    } else {\n      this.baseModule = chart[firstToLowerCase(this.valueType) + '3DModule'];\n    }\n  };\n  /**\n   * Set the axis `opposedPosition` and `isInversed` properties.\n   *\n   * @returns {void}\n   * @private\n   */\n  Chart3DAxis.prototype.setIsInversedAndOpposedPosition = function () {\n    this.isAxisOpposedPosition = this.opposedPosition || this.isRTLEnabled && this.orientation === 'Vertical';\n    this.isAxisInverse = this.isInversed || this.isRTLEnabled && this.orientation === 'Horizontal';\n  };\n  __decorate([Complex({\n    fontFamily: null,\n    size: '12px',\n    fontStyle: 'Normal',\n    fontWeight: '400',\n    color: null\n  }, Chart3DTextFont)], Chart3DAxis.prototype, \"labelStyle\", void 0);\n  __decorate([Property('')], Chart3DAxis.prototype, \"title\", void 0);\n  __decorate([Complex({\n    fontFamily: null,\n    size: null,\n    fontStyle: null,\n    fontWeight: null,\n    color: null\n  }, Chart3DTextFont)], Chart3DAxis.prototype, \"titleStyle\", void 0);\n  __decorate([Property('')], Chart3DAxis.prototype, \"labelFormat\", void 0);\n  __decorate([Property('')], Chart3DAxis.prototype, \"skeleton\", void 0);\n  __decorate([Property('DateTime')], Chart3DAxis.prototype, \"skeletonType\", void 0);\n  __decorate([Property(0)], Chart3DAxis.prototype, \"plotOffset\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"plotOffsetLeft\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"plotOffsetTop\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"plotOffsetRight\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"plotOffsetBottom\", void 0);\n  __decorate([Property(false)], Chart3DAxis.prototype, \"isIndexed\", void 0);\n  __decorate([Property(10)], Chart3DAxis.prototype, \"logBase\", void 0);\n  __decorate([Property(0)], Chart3DAxis.prototype, \"columnIndex\", void 0);\n  __decorate([Property(0)], Chart3DAxis.prototype, \"rowIndex\", void 0);\n  __decorate([Property(1)], Chart3DAxis.prototype, \"span\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"desiredIntervals\", void 0);\n  __decorate([Property(3)], Chart3DAxis.prototype, \"maximumLabels\", void 0);\n  __decorate([Property(false)], Chart3DAxis.prototype, \"opposedPosition\", void 0);\n  __decorate([Property('Auto')], Chart3DAxis.prototype, \"rangePadding\", void 0);\n  __decorate([Property('Double')], Chart3DAxis.prototype, \"valueType\", void 0);\n  __decorate([Property('None')], Chart3DAxis.prototype, \"edgeLabelPlacement\", void 0);\n  __decorate([Property('Auto')], Chart3DAxis.prototype, \"intervalType\", void 0);\n  __decorate([Property('OnTicks')], Chart3DAxis.prototype, \"labelPlacement\", void 0);\n  __decorate([Property('')], Chart3DAxis.prototype, \"name\", void 0);\n  __decorate([Property(true)], Chart3DAxis.prototype, \"visible\", void 0);\n  __decorate([Property(0)], Chart3DAxis.prototype, \"minorTicksPerInterval\", void 0);\n  __decorate([Property(0)], Chart3DAxis.prototype, \"labelRotation\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"titleRotation\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"minimum\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"maximum\", void 0);\n  __decorate([Property(null)], Chart3DAxis.prototype, \"interval\", void 0);\n  __decorate([Property(34)], Chart3DAxis.prototype, \"maximumLabelWidth\", void 0);\n  __decorate([Property(false)], Chart3DAxis.prototype, \"enableTrim\", void 0);\n  __decorate([Property(5)], Chart3DAxis.prototype, \"labelPadding\", void 0);\n  __decorate([Property(5)], Chart3DAxis.prototype, \"titlePadding\", void 0);\n  __decorate([Complex({}, Chart3DMajorTickLines)], Chart3DAxis.prototype, \"majorTickLines\", void 0);\n  __decorate([Complex({}, Chart3DMinorTickLines)], Chart3DAxis.prototype, \"minorTickLines\", void 0);\n  __decorate([Complex({}, Chart3DMajorGridLines)], Chart3DAxis.prototype, \"majorGridLines\", void 0);\n  __decorate([Complex({}, Chart3DMinorGridLines)], Chart3DAxis.prototype, \"minorGridLines\", void 0);\n  __decorate([Property(Browser.isDevice ? 'Rotate45' : 'Trim')], Chart3DAxis.prototype, \"labelIntersectAction\", void 0);\n  __decorate([Property(false)], Chart3DAxis.prototype, \"isInversed\", void 0);\n  __decorate([Property(true)], Chart3DAxis.prototype, \"startFromZero\", void 0);\n  return Chart3DAxis;\n}(ChildProperty);\nexport { Chart3DAxis };\n/**\n * Calculates the axis visible labels.\n *\n * @private\n */\nvar Visible3DLabels = /** @class */function () {\n  function Visible3DLabels(text, value, labelStyle, originalText, size, breakLabelSize, index) {\n    if (size === void 0) {\n      size = new Size(0, 0);\n    }\n    if (breakLabelSize === void 0) {\n      breakLabelSize = new Size(0, 0);\n    }\n    if (index === void 0) {\n      index = 1;\n    }\n    this.text = text;\n    this.originalText = originalText;\n    this.value = value;\n    this.labelStyle = labelStyle;\n    this.size = size;\n    this.breakLabelSize = breakLabelSize;\n    this.index = index;\n  }\n  return Visible3DLabels;\n}();\nexport { Visible3DLabels };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Property","Complex","ChildProperty","Browser","rotateTextSize","firstToLowerCase","isBreakLabel","getTitle","Size","Rect","measureText","Double3D","axisRangeCalculated","textWrap","isNullOrUndefined","Chart3DTextFont","valueToCoefficients","Chart3DRow","_super","_this","apply","axes","nearSizes","farSizes","computeSize","axis","chart","width","innerPadding","visible","internalVisibility","majorTickLines","height","findLabelSize","isAxisOpposedPosition","push","Chart3DColumn","Chart3DMajorGridLines","Chart3DMinorGridLines","Chart3DMajorTickLines","Chart3DMinorTickLines","Chart3DAxis","parent","propName","defaultValue","isArray","call","visibleLabels","series","rect","undefined","isStack100","updatedRect","isIntervalInDecimal","intervalDivs","titleCollection","titleSize","isRTLEnabled","angle","labelRotation","isHorizontal","orientation","title","titleRotation","titleStyle","themeStyle","axisTitleFont","length_1","enableRtl","labelSize","titlePadding","labelPadding","maxLabelSize","triggerRangeRender","minimum","maximum","interval","argsData","cancel","trigger","visibleRange","min","max","delta","getRangePadding","padding","rangePadding","requireInvertedAxis","getMaxLabelWidth","pointX","previousEnd","isIntersect","isAxisLabelBreak","action","labelIntersectAction","label","len","originalText","size","replace","labelStyle","axisLabelFont","breakLabelSize","enableTrim","text","join","rotatedLabel","split","width1","value","x","edgeLabelPlacement","findMultiRows","isAxisInverse","result","result1","str","index","j","height_1","isHorizontalAngle","currentX","currentLabel","isBreakLabels","width2","store","isMultiRows","indexOf","getModule","valueType","baseModule","setIsInversedAndOpposedPosition","opposedPosition","isInversed","fontFamily","fontStyle","fontWeight","color","isDevice","Visible3DLabels"],"sources":["C:/Users/mkfun/Desktop/ct assignment/admin/node_modules/@syncfusion/ej2-charts/src/chart3d/axis/axis.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Browser } from '@syncfusion/ej2-base';\nimport { rotateTextSize, firstToLowerCase, isBreakLabel, getTitle } from '../../common/utils/helper';\nimport { Size, Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Double3D } from '../axis/double-axis';\nimport { axisRangeCalculated } from '../../common/model/constants';\nimport { textWrap } from '../../common/utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Chart3DTextFont } from '../model/chart3d-Interface';\nimport { valueToCoefficients } from '../utils/chart3dRender';\n/**\n * Configures the `rows` of the chart.\n */\nvar Chart3DRow = /** @class */ (function (_super) {\n    __extends(Chart3DRow, _super);\n    function Chart3DRow() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.axes = [];\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        return _this;\n    }\n    /**\n     * Computes the size for a three-dimensional axis, row, or column within the 3D chart.\n     *\n     * @param {Chart3DAxis} axis - The three-dimensional axis to compute the size for.\n     * @param {Chart3D} chart - The 3D chart containing the axis and data definitions.\n     * @returns {void}\n     */\n    Chart3DRow.prototype.computeSize = function (axis, chart) {\n        var width = 0;\n        var innerPadding = 5;\n        if (axis.visible && axis.internalVisibility) {\n            width += (axis.majorTickLines.height +\n                axis.findLabelSize(innerPadding, chart));\n        }\n        if (axis.isAxisOpposedPosition) {\n            this.farSizes.push(width);\n        }\n        else {\n            this.nearSizes.push(width);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Chart3DRow.prototype, \"height\", void 0);\n    return Chart3DRow;\n}(ChildProperty));\nexport { Chart3DRow };\n/**\n * Configures the `columns` of the chart.\n */\nvar Chart3DColumn = /** @class */ (function (_super) {\n    __extends(Chart3DColumn, _super);\n    function Chart3DColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.axes = [];\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        return _this;\n    }\n    /**\n     * Computes the size for a three-dimensional axis, row, or column within the 3D chart.\n     *\n     * @param {Chart3DAxis} axis - The three-dimensional axis to compute the size for.\n     * @param {Chart3D} chart - The 3D chart containing the axis and data definitions.\n     * @returns {void}\n     */\n    Chart3DColumn.prototype.computeSize = function (axis, chart) {\n        var height = 0;\n        var innerPadding = 5;\n        if (axis.visible && axis.internalVisibility) {\n            height += (axis.majorTickLines.height +\n                axis.findLabelSize(innerPadding, chart));\n        }\n        if (axis.isAxisOpposedPosition) {\n            this.farSizes.push(height);\n        }\n        else {\n            this.nearSizes.push(height);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Chart3DColumn.prototype, \"width\", void 0);\n    return Chart3DColumn;\n}(ChildProperty));\nexport { Chart3DColumn };\n/**\n * Configures the major grid lines in the `axis`.\n */\nvar Chart3DMajorGridLines = /** @class */ (function (_super) {\n    __extends(Chart3DMajorGridLines, _super);\n    function Chart3DMajorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], Chart3DMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DMajorGridLines.prototype, \"color\", void 0);\n    return Chart3DMajorGridLines;\n}(ChildProperty));\nexport { Chart3DMajorGridLines };\n/**\n * Configures the minor grid lines in the `axis`.\n */\nvar Chart3DMinorGridLines = /** @class */ (function (_super) {\n    __extends(Chart3DMinorGridLines, _super);\n    function Chart3DMinorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], Chart3DMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DMinorGridLines.prototype, \"color\", void 0);\n    return Chart3DMinorGridLines;\n}(ChildProperty));\nexport { Chart3DMinorGridLines };\n/**\n * Configures the major tick lines.\n */\nvar Chart3DMajorTickLines = /** @class */ (function (_super) {\n    __extends(Chart3DMajorTickLines, _super);\n    function Chart3DMajorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Chart3DMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], Chart3DMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DMajorTickLines.prototype, \"color\", void 0);\n    return Chart3DMajorTickLines;\n}(ChildProperty));\nexport { Chart3DMajorTickLines };\n/**\n * Configures the minor tick lines.\n */\nvar Chart3DMinorTickLines = /** @class */ (function (_super) {\n    __extends(Chart3DMinorTickLines, _super);\n    function Chart3DMinorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Chart3DMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], Chart3DMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DMinorTickLines.prototype, \"color\", void 0);\n    return Chart3DMinorTickLines;\n}(ChildProperty));\nexport { Chart3DMinorTickLines };\n/**\n * Configures the axes in the chart.\n *\n * @public\n */\nvar Chart3DAxis = /** @class */ (function (_super) {\n    __extends(Chart3DAxis, _super);\n    function Chart3DAxis(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        /** @private */\n        _this.series = [];\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.isStack100 = false;\n        /** @private */\n        _this.updatedRect = null;\n        /** @private */\n        _this.isIntervalInDecimal = true;\n        /** @private */\n        _this.intervalDivs = [10, 5, 2, 1];\n        /** @private */\n        _this.titleCollection = [];\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /**\n         * This property used to hide the axis when series hide from legend click.\n         *\n         * @private\n         */\n        _this.internalVisibility = true;\n        /**\n         * This property is used to place the vertical axis in opposed position and horizontal axis in inversed.\n         * when RTL is enabled in chart\n         *\n         * @private */\n        _this.isRTLEnabled = false;\n        _this.angle = _this.labelRotation;\n        return _this;\n    }\n    /**\n     * Finds the size of labels with specified inner padding within the 3D chart.\n     *\n     * @param {number} innerPadding - The inner padding value for labels.\n     * @param {Chart3D} chart - The 3D chart for which label size is calculated.\n     * @returns {number} - The size of labels accounting for the inner padding.\n     */\n    Chart3DAxis.prototype.findLabelSize = function (innerPadding, chart) {\n        var titleSize = 0;\n        var isHorizontal = this.orientation === 'Horizontal';\n        if (this.title) {\n            var angle = this.titleRotation;\n            if ((isNullOrUndefined(angle))) {\n                this.titleSize = measureText(this.title, this.titleStyle, chart.themeStyle.axisTitleFont);\n                titleSize = this.titleSize.height + innerPadding;\n            }\n            else {\n                this.titleSize = rotateTextSize(this.titleStyle, this.title, angle, chart, chart.themeStyle.axisTitleFont);\n                titleSize = (this.orientation === 'Vertical' ? this.titleSize.width : this.titleSize.height) + innerPadding;\n            }\n            if (this.rect.width || this.rect.height) {\n                var length_1 = isHorizontal ? this.rect.width : this.rect.height;\n                this.titleCollection = getTitle(this.title, this.titleStyle, length_1, chart.enableRtl, chart.themeStyle.axisTitleFont);\n                titleSize = (titleSize * this.titleCollection.length);\n            }\n        }\n        var labelSize = titleSize + innerPadding + this.titlePadding + this.labelPadding +\n            ((this.orientation === 'Vertical') ? this.maxLabelSize.width : this.maxLabelSize.height);\n        return labelSize;\n    };\n    /**\n     * Triggers the axis range calculated event with specified minimum, maximum, and interval values.\n     *\n     * @param {Chart3D} chart - The 3D chart for which the range is being calculated.\n     * @param {number} minimum - The minimum value of the range.\n     * @param {number} maximum - The maximum value of the range.\n     * @param {number} interval - The interval value for the range.\n     * @returns {void}\n     */\n    Chart3DAxis.prototype.triggerRangeRender = function (chart, minimum, maximum, interval) {\n        var argsData = {\n            cancel: false, axis: this,\n            minimum: minimum, maximum: maximum, interval: interval\n        };\n        chart.trigger(axisRangeCalculated, argsData);\n        if (!argsData.cancel) {\n            this.visibleRange = {\n                min: argsData.minimum, max: argsData.maximum, interval: argsData.interval,\n                delta: argsData.maximum - argsData.minimum\n            };\n        }\n    };\n    /**\n     * Calculate padding for the axis.\n     *\n     * @param {Chart3D} chart - Chart instance.\n     * @returns {string} - Padding value.\n     * @private\n     */\n    Chart3DAxis.prototype.getRangePadding = function (chart) {\n        var padding = this.rangePadding;\n        if (padding !== 'Auto') {\n            return padding;\n        }\n        switch (this.orientation) {\n            case 'Horizontal':\n                if (chart.requireInvertedAxis) {\n                    padding = (this.isStack100 ? 'Round' : 'Normal');\n                }\n                else {\n                    padding = 'None';\n                }\n                break;\n            case 'Vertical':\n                if (!chart.requireInvertedAxis) {\n                    padding = (this.isStack100 ? 'Round' : 'Normal');\n                }\n                else {\n                    padding = 'None';\n                }\n                break;\n        }\n        return padding;\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {Chart3D} chart - Chart instance.\n     * @returns {void}\n     * @private\n     */\n    Chart3DAxis.prototype.getMaxLabelWidth = function (chart) {\n        var pointX;\n        var previousEnd = 0;\n        var isIntersect = false;\n        var isAxisLabelBreak;\n        this.angle = this.labelRotation;\n        this.maxLabelSize = new Size(0, 0);\n        var action = this.labelIntersectAction;\n        var label;\n        for (var i = 0, len = this.visibleLabels.length; i < len; i++) {\n            label = this.visibleLabels[i];\n            isAxisLabelBreak = isBreakLabel(label.originalText);\n            if (isAxisLabelBreak) {\n                label.size = measureText(label.originalText.replace(/<br>/g, ' '), this.labelStyle, chart.themeStyle.axisLabelFont);\n                label.breakLabelSize = measureText(this.enableTrim ? label.text.join('<br>') : label.originalText, this.labelStyle, chart.themeStyle.axisLabelFont);\n            }\n            else {\n                label.size = measureText(label.text, this.labelStyle, chart.themeStyle.axisLabelFont);\n            }\n            var width = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\n            if (width > this.maxLabelSize.width) {\n                this.maxLabelSize.width = width;\n                this.rotatedLabel = label.text;\n            }\n            var height = isAxisLabelBreak ? label.breakLabelSize.height : label.size.height;\n            if (height > this.maxLabelSize.height) {\n                this.maxLabelSize.height = height;\n            }\n            if (isAxisLabelBreak) {\n                label.text = this.enableTrim ? label.text : label.originalText.split('<br>');\n            }\n            if (action === 'None' || action === 'Hide' || action === 'Trim') {\n                continue;\n            }\n            if ((action !== 'None' || this.angle % 360 === 0) && this.orientation === 'Horizontal' &&\n                this.rect.width > 0 && !isIntersect) {\n                var width1 = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\n                pointX = (valueToCoefficients(label.value, this) * this.rect.width) + this.rect.x;\n                pointX -= width1 / 2;\n                if (this.edgeLabelPlacement === 'Shift') {\n                    if (i === 0 && pointX < this.rect.x) {\n                        pointX = this.rect.x;\n                    }\n                    if (i === this.visibleLabels.length - 1 && ((pointX + width1) > (this.rect.x + this.rect.width))) {\n                        pointX = this.rect.x + this.rect.width - width1;\n                    }\n                }\n                switch (action) {\n                    case 'MultipleRows':\n                        if (i > 0) {\n                            this.findMultiRows(i, pointX, label, isAxisLabelBreak);\n                        }\n                        break;\n                    case 'Rotate45':\n                    case 'Rotate90':\n                        if (i > 0 && (!this.isAxisInverse ? pointX <= previousEnd : pointX + width1 >= previousEnd)) {\n                            this.angle = (action === 'Rotate45') ? 45 : 90;\n                            isIntersect = true;\n                        }\n                        break;\n                    default: {\n                        if (isAxisLabelBreak) {\n                            var result = void 0;\n                            var result1 = [];\n                            var str = void 0;\n                            for (var index = 0; index < label.text.length; index++) {\n                                result = textWrap(label.text[index], this.rect.width / this.visibleLabels.length, this.labelStyle, chart.enableRtl, null, null, chart.themeStyle.axisLabelFont);\n                                if (result.length > 1) {\n                                    for (var j = 0; j < result.length; j++) {\n                                        str = result[j];\n                                        result1.push(str);\n                                    }\n                                }\n                                else {\n                                    result1.push(result[0]);\n                                }\n                            }\n                            label.text = result1;\n                        }\n                        else {\n                            label.text = textWrap(label.text, this.rect.width / this.visibleLabels.length, this.labelStyle, chart.enableRtl, null, null, chart.themeStyle.axisLabelFont);\n                        }\n                        var height_1 = (label.size.height * label.text.length);\n                        if (height_1 > this.maxLabelSize.height) {\n                            this.maxLabelSize.height = height_1;\n                        }\n                        break;\n                    }\n                }\n                previousEnd = this.isAxisInverse ? pointX : pointX + width1;\n            }\n        }\n        if (this.angle !== 0 && this.orientation === 'Horizontal') {\n            this.rotatedLabel = isNullOrUndefined(this.rotatedLabel) ? '' : this.rotatedLabel;\n            var isHorizontalAngle = this.angle === -360 || this.angle === 0 || this.angle === -180 ||\n                this.angle === 180 || this.angle === 360;\n            if (!isHorizontalAngle && isBreakLabel(this.rotatedLabel)) {\n                this.maxLabelSize = new Size(this.maxLabelSize.height, this.maxLabelSize.width);\n            }\n            this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart, chart.themeStyle.axisLabelFont);\n        }\n        else if (this.angle !== 0 && this.orientation === 'Vertical') {\n            this.rotatedLabel = isNullOrUndefined(this.rotatedLabel) ? '' : this.rotatedLabel;\n            var isHorizontalAngle = this.angle === -360 || this.angle === 0 || this.angle === -180 ||\n                this.angle === 180 || this.angle === 360;\n            // To avoid overlap axis label with chart title or chart legend when it is outside.\n            if (!isHorizontalAngle && isBreakLabel(this.rotatedLabel)) {\n                this.maxLabelSize = new Size(this.maxLabelSize.height, this.maxLabelSize.width);\n            }\n            this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart, chart.themeStyle.axisLabelFont);\n        }\n    };\n    /**\n     * Finds and manages multiple rows for labels within the 3D chart axis.\n     *\n     * @param {number} length - The length of the labels to be considered.\n     * @param {number} currentX - The current X position.\n     * @param {Visible3DLabels} currentLabel - The label for which multiple rows are being determined.\n     * @param {boolean} isBreakLabels - Indicates whether the labels are break labels.\n     * @returns {void}\n     */\n    Chart3DAxis.prototype.findMultiRows = function (length, currentX, currentLabel, isBreakLabels) {\n        var label;\n        var pointX;\n        var width2;\n        var store = [];\n        var isMultiRows;\n        for (var i = length - 1; i >= 0; i--) {\n            label = this.visibleLabels[i];\n            width2 = isBreakLabels ? label.breakLabelSize.width : label.size.width;\n            pointX = (valueToCoefficients(label.value, this) * this.rect.width) + this.rect.x;\n            isMultiRows = !this.isAxisInverse ? currentX < (pointX + width2 * 0.5) :\n                currentX + currentLabel.size.width > (pointX - width2 * 0.5);\n            if (isMultiRows) {\n                store.push(label.index);\n                currentLabel.index = (currentLabel.index > label.index) ? currentLabel.index : label.index + 1;\n            }\n            else {\n                currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\n            }\n        }\n        var height = ((isBreakLabels ? currentLabel.breakLabelSize.height : currentLabel.size.height) * currentLabel.index) +\n            (5 * (currentLabel.index - 1));\n        if (height > this.maxLabelSize.height) {\n            this.maxLabelSize.height = height;\n        }\n    };\n    /**\n     * Finds the default module for axis.\n     *\n     * @param {Chart3D} chart - Chart instance.\n     * @returns {void}\n     * @private\n     */\n    Chart3DAxis.prototype.getModule = function (chart) {\n        if (this.valueType === 'Double') {\n            this.baseModule = new Double3D(chart);\n        }\n        else {\n            this.baseModule = chart[firstToLowerCase(this.valueType) + '3DModule'];\n        }\n    };\n    /**\n     * Set the axis `opposedPosition` and `isInversed` properties.\n     *\n     * @returns {void}\n     * @private\n     */\n    Chart3DAxis.prototype.setIsInversedAndOpposedPosition = function () {\n        this.isAxisOpposedPosition = this.opposedPosition || (this.isRTLEnabled && this.orientation === 'Vertical');\n        this.isAxisInverse = this.isInversed || (this.isRTLEnabled && this.orientation === 'Horizontal');\n    };\n    __decorate([\n        Complex({ fontFamily: null, size: '12px', fontStyle: 'Normal', fontWeight: '400', color: null }, Chart3DTextFont)\n    ], Chart3DAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], Chart3DAxis.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, Chart3DTextFont)\n    ], Chart3DAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], Chart3DAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('')\n    ], Chart3DAxis.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property('DateTime')\n    ], Chart3DAxis.prototype, \"skeletonType\", void 0);\n    __decorate([\n        Property(0)\n    ], Chart3DAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"plotOffsetLeft\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"plotOffsetTop\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"plotOffsetRight\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"plotOffsetBottom\", void 0);\n    __decorate([\n        Property(false)\n    ], Chart3DAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(10)\n    ], Chart3DAxis.prototype, \"logBase\", void 0);\n    __decorate([\n        Property(0)\n    ], Chart3DAxis.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property(0)\n    ], Chart3DAxis.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], Chart3DAxis.prototype, \"span\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"desiredIntervals\", void 0);\n    __decorate([\n        Property(3)\n    ], Chart3DAxis.prototype, \"maximumLabels\", void 0);\n    __decorate([\n        Property(false)\n    ], Chart3DAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Chart3DAxis.prototype, \"rangePadding\", void 0);\n    __decorate([\n        Property('Double')\n    ], Chart3DAxis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property('None')\n    ], Chart3DAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Chart3DAxis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('OnTicks')\n    ], Chart3DAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('')\n    ], Chart3DAxis.prototype, \"name\", void 0);\n    __decorate([\n        Property(true)\n    ], Chart3DAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], Chart3DAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(0)\n    ], Chart3DAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"titleRotation\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Property(34)\n    ], Chart3DAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(false)\n    ], Chart3DAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Property(5)\n    ], Chart3DAxis.prototype, \"labelPadding\", void 0);\n    __decorate([\n        Property(5)\n    ], Chart3DAxis.prototype, \"titlePadding\", void 0);\n    __decorate([\n        Complex({}, Chart3DMajorTickLines)\n    ], Chart3DAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Complex({}, Chart3DMinorTickLines)\n    ], Chart3DAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, Chart3DMajorGridLines)\n    ], Chart3DAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, Chart3DMinorGridLines)\n    ], Chart3DAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(Browser.isDevice ? 'Rotate45' : 'Trim')\n    ], Chart3DAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Property(false)\n    ], Chart3DAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(true)\n    ], Chart3DAxis.prototype, \"startFromZero\", void 0);\n    return Chart3DAxis;\n}(ChildProperty));\nexport { Chart3DAxis };\n/**\n * Calculates the axis visible labels.\n *\n * @private\n */\nvar Visible3DLabels = /** @class */ (function () {\n    function Visible3DLabels(text, value, labelStyle, originalText, size, breakLabelSize, index) {\n        if (size === void 0) { size = new Size(0, 0); }\n        if (breakLabelSize === void 0) { breakLabelSize = new Size(0, 0); }\n        if (index === void 0) { index = 1; }\n        this.text = text;\n        this.originalText = originalText;\n        this.value = value;\n        this.labelStyle = labelStyle;\n        this.size = size;\n        this.breakLabelSize = breakLabelSize;\n        this.index = index;\n    }\n    return Visible3DLabels;\n}());\nexport { Visible3DLabels };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}